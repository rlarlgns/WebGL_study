{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?7e02","webpack:///./src/App.vue?e3a0","webpack:///./src/App.vue?bff9","webpack:///./src/views/Home.vue?c0db","webpack:///./src/components/webgl.vue?43d1","webpack:///src/components/webgl.vue","webpack:///./src/components/webgl.vue?4275","webpack:///./src/components/webgl.vue","webpack:///src/views/Home.vue","webpack:///./src/views/Home.vue?493c","webpack:///./src/views/Home.vue","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/components/gl-matrix.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","jsonpScriptSrc","p","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","_v","staticRenderFns","component","staticClass","ref","cubeRotation","initBuffer","gl","bindBuffer","ARRAY_BUFFER","positionBuffer","bufferData","position","STATIC_DRAW","colors","faceColors","concat","colorBuffer","Float32Array","ELEMENT_ARRAY_BUFFER","indexBuffer","indices","color","initShader","shaderSource","vertexShader","vertexShaderCode","compileShader","fragmentShader","fragmentShaderCode","attachShader","shaderProgram","linkProgram","program","attribLocations","vertexPosition","getAttribLocation","vertexColor","uniformLocations","projectionMatrix","getUniformLocation","modelViewMatrix","drawScene","programInfo","buffers","deltaTime","clearColor","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","vertexAttribPointer","enableVertexAttribArray","useProgram","uniformMatrix4fv","drawElements","TRIANGLES","vertexCount","mounted","runWebGL","methods","log","then","render","now","requestAnimationFrame","components","WebGL","Vue","use","VueRouter","routes","path","Home","router","base","process","config","productionTip","h","App","$mount","root","factory","define","configurable","setMatrixArrayType","toRadian","equals","EPSILON","ARRAY_TYPE","Array","RANDOM","Math","random","degree","PI","a","b","abs","max","sub","mul","fromMat4","clone","copy","fromValues","set","identity","transpose","invert","adjoint","determinant","multiply","translate","rotate","scale","fromTranslation","fromRotation","fromScaling","fromMat2d","fromQuat","normalFromMat4","projection","str","frob","add","subtract","multiplyScalar","multiplyScalarAndAdd","exactEquals","_common","glMatrix","_interopRequireWildcard","obj","newObj","default","out","m00","m01","m02","m10","m11","m12","m20","m21","m22","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","det","b00","b02","b10","b12","b20","b22","v","x","y","rad","sin","cos","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","width","height","sqrt","pow","a0","a1","a2","a3","a4","a5","a6","a7","a8","b0","b1","b2","b3","b4","b5","b6","b7","b8","forEach","sqrLen","len","sqrDist","dist","div","divide","ceil","floor","min","round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","dot","cross","lerp","hermite","bezier","transformMat4","transformMat3","transformQuat","rotateX","rotateY","rotateZ","angle","ax","ay","az","bx","by","bz","factorTimes2","factor1","factor2","factor3","factor4","inverseFactor","inverseFactorTimesTwo","zScale","qx","qy","qz","qw","ix","iy","iz","iw","tempA","tempB","cosine","acos","vec","stride","offset","count","fn","arg","aw","vectorScale","vec4","vec3","vec2","quat","mat4","mat3","mat2d","mat2","_mat","_mat2d","_mat2","_mat3","_quat","_vec","_vec2","_vec3","LDU","v0","v1","L","D","U","tx","ty","aa","ab","ac","ad","atx","aty","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","getTranslation","getScaling","getRotation","fromRotationTranslationScale","fromRotationTranslationScaleOrigin","frustum","perspective","perspectiveFromFieldOfView","ortho","lookAt","targetTo","m03","m13","m23","m30","m31","m32","m33","axis","xy","xz","yz","mat","trace","S","sx","sy","sz","ox","oy","oz","left","right","bottom","top","near","far","rl","tb","nf","fovy","aspect","f","tan","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","lr","bt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","a9","a14","a15","b9","b13","b14","b15","setAxes","sqlerp","rotationTo","setAxisAngle","getAxisAngle","calculateW","slerp","conjugate","fromMat3","fromEuler","out_axis","bw","omega","cosom","sinom","scale0","scale1","invDot","fTrace","fRoot","k","halfToRad","cx","cy","cz","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","view","transformMat2","transformMat2d"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,IAAO,GAGJK,EAAkB,GAGtB,SAASY,EAAe5B,GACvB,OAAOyB,EAAoBI,EAAI,OAAS,CAAC,MAAQ,SAAS7B,IAAUA,GAAW,IAAM,CAAC,MAAQ,YAAYA,GAAW,MAItH,SAASyB,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU+B,QAGnC,IAAIC,EAASJ,EAAiB5B,GAAY,CACzCK,EAAGL,EACHiC,GAAG,EACHF,QAAS,IAUV,OANAjB,EAAQd,GAAUW,KAAKqB,EAAOD,QAASC,EAAQA,EAAOD,QAASL,GAG/DM,EAAOC,GAAI,EAGJD,EAAOD,QAKfL,EAAoBQ,EAAI,SAAuBjC,GAC9C,IAAIkC,EAAW,GAKXC,EAAqBxB,EAAgBX,GACzC,GAA0B,IAAvBmC,EAGF,GAAGA,EACFD,EAAStB,KAAKuB,EAAmB,QAC3B,CAEN,IAAIC,EAAU,IAAIC,SAAQ,SAASC,EAASC,GAC3CJ,EAAqBxB,EAAgBX,GAAW,CAACsC,EAASC,MAE3DL,EAAStB,KAAKuB,EAAmB,GAAKC,GAGtC,IACII,EADAC,EAASC,SAASC,cAAc,UAGpCF,EAAOG,QAAU,QACjBH,EAAOI,QAAU,IACbpB,EAAoBqB,IACvBL,EAAOM,aAAa,QAAStB,EAAoBqB,IAElDL,EAAOO,IAAMpB,EAAe5B,GAG5B,IAAIiD,EAAQ,IAAIC,MAChBV,EAAmB,SAAUW,GAE5BV,EAAOW,QAAUX,EAAOY,OAAS,KACjCC,aAAaT,GACb,IAAIU,EAAQ5C,EAAgBX,GAC5B,GAAa,IAAVuD,EAAa,CACf,GAAGA,EAAO,CACT,IAAIC,EAAYL,IAAyB,SAAfA,EAAMM,KAAkB,UAAYN,EAAMM,MAChEC,EAAUP,GAASA,EAAMQ,QAAUR,EAAMQ,OAAOX,IACpDC,EAAMW,QAAU,iBAAmB5D,EAAU,cAAgBwD,EAAY,KAAOE,EAAU,IAC1FT,EAAMY,KAAO,iBACbZ,EAAMQ,KAAOD,EACbP,EAAMa,QAAUJ,EAChBH,EAAM,GAAGN,GAEVtC,EAAgBX,QAAW+D,IAG7B,IAAIlB,EAAUmB,YAAW,WACxBxB,EAAiB,CAAEiB,KAAM,UAAWE,OAAQlB,MAC1C,MACHA,EAAOW,QAAUX,EAAOY,OAASb,EACjCE,SAASuB,KAAKC,YAAYzB,GAG5B,OAAOJ,QAAQ8B,IAAIjC,IAIpBT,EAAoB2C,EAAIvD,EAGxBY,EAAoB4C,EAAI1C,EAGxBF,EAAoB6C,EAAI,SAASxC,EAAS+B,EAAMU,GAC3C9C,EAAoB+C,EAAE1C,EAAS+B,IAClCtD,OAAOkE,eAAe3C,EAAS+B,EAAM,CAAEa,YAAY,EAAMC,IAAKJ,KAKhE9C,EAAoBmD,EAAI,SAAS9C,GACX,qBAAX+C,QAA0BA,OAAOC,aAC1CvE,OAAOkE,eAAe3C,EAAS+C,OAAOC,YAAa,CAAEC,MAAO,WAE7DxE,OAAOkE,eAAe3C,EAAS,aAAc,CAAEiD,OAAO,KAQvDtD,EAAoBuD,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQtD,EAAoBsD,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAK5E,OAAO6E,OAAO,MAGvB,GAFA3D,EAAoBmD,EAAEO,GACtB5E,OAAOkE,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOtD,EAAoB6C,EAAEa,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIR1D,EAAoB8D,EAAI,SAASxD,GAChC,IAAIwC,EAASxC,GAAUA,EAAOmD,WAC7B,WAAwB,OAAOnD,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAN,EAAoB6C,EAAEC,EAAQ,IAAKA,GAC5BA,GAIR9C,EAAoB+C,EAAI,SAASgB,EAAQC,GAAY,OAAOlF,OAAOC,UAAUC,eAAeC,KAAK8E,EAAQC,IAGzGhE,EAAoBI,EAAI,IAGxBJ,EAAoBiE,GAAK,SAASC,GAA2B,MAApBC,QAAQ3C,MAAM0C,GAAYA,GAEnE,IAAIE,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAWjF,KAAK0E,KAAKO,GAC5CA,EAAWjF,KAAOf,EAClBgG,EAAaA,EAAWG,QACxB,IAAI,IAAI5F,EAAI,EAAGA,EAAIyF,EAAWvF,OAAQF,IAAKP,EAAqBgG,EAAWzF,IAC3E,IAAIU,EAAsBiF,EAI1B/E,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,6EC5NT,yBAAwb,EAAG,G,mGCAvb,EAAS,WAAa,IAAI+E,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,QAAQ,CAACF,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,QAAQ,CAACF,EAAG,cAAc,CAACE,MAAM,CAAC,GAAK,MAAM,CAACN,EAAIO,GAAG,UAAUP,EAAIO,GAAG,OAAOH,EAAG,cAAc,CAACE,MAAM,CAAC,GAAK,WAAW,CAACN,EAAIO,GAAG,YAAY,GAAGH,EAAG,gBAAgB,IACjTI,EAAkB,G,wBCAlBhE,EAAS,GAMTiE,EAAY,eACdjE,EACA,EACAgE,GACA,EACA,KACA,KACA,MAIa,EAAAC,E,gCClBX,EAAS,WAAa,IAAIT,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACM,YAAY,QAAQ,CAACN,EAAG,UAAU,IACxI,EAAkB,GCDlB,EAAS,WAAa,IAAIJ,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,SAAS,CAACO,IAAI,cACvH,EAAkB,G,kRCOlBC,EAAe,EAEnB,SAASC,EAAWC,GAElB,IAAF,mBACEA,EAAGC,WAAWD,EAAGE,aAAcC,GAC/B,IAAF,qBAEA,GACA,EACA,EACA,GACA,EACA,EACA,EACA,EACA,GACA,EACA,EACA,GAEA,GACA,GACA,GACA,EACA,GACA,EACA,EACA,GACA,EACA,GACA,GACA,GAEA,EACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GAEA,GACA,GACA,EACA,GACA,GACA,EACA,GACA,EACA,GACA,GACA,EACA,EAEE,GACF,GACA,EACA,EACA,GACA,EACA,EACA,EACA,EACA,GACA,EACA,GAEA,GACA,GACA,GACA,GACA,EACA,GACA,EACA,EACA,GACA,EACA,GACA,IAEEH,EAAGI,WAAWJ,EAAGE,aAAcG,EAAUL,EAAGM,aAY5C,IATA,IAAF,GACA,UACE,CAAF,SACE,CAAF,SACE,CAAF,SACE,CAAF,SACE,CAAF,UAEMC,EAAS,GACJhG,EAAI,EAAGA,EAAIiG,EAAWjH,SAAUgB,EAAG,CAC1C,IAAJ,OACIgG,EAASA,EAAOE,OAAOnD,EAAGA,EAAGA,EAAGA,GAElC,IAAF,mBACE0C,EAAGC,WAAWD,EAAGE,aAAcQ,GAC/BV,EAAGI,WAAWJ,EAAGE,aAAc,IAAIS,aAAaJ,GAASP,EAAGM,aAG5D,IAAF,mBACEN,EAAGC,WAAWD,EAAGY,qBAAsBC,GACvC,IAAF,mBACA,EACA,EACA,EACA,EACA,EACA,EACE,EACF,EACA,EACA,EACA,EACA,EACE,EACF,EACA,GACA,EACA,GACA,GACE,GACF,GACA,GACA,GACA,GACA,GACE,GACF,GACA,GACA,GACA,GACA,GACE,GACF,GACA,GACA,GACA,GACA,KAIE,OAFAb,EAAGI,WAAWJ,EAAGY,qBAAsBE,EAASd,EAAGM,aAE5C,CACLD,SAAUF,EACVY,MAAOL,EACPI,QAASD,GAIb,SAASG,EAAWhB,GAElB,IAAF,kCACA,gVAYEA,EAAGiB,aAAaC,EAAcC,GAC9BnB,EAAGoB,cAAcF,GAGjB,IAAF,oCACA,gHAKElB,EAAGiB,aAAaI,EAAgBC,GAChCtB,EAAGoB,cAAcC,GAEjB,IAAF,oBAKE,OAJArB,EAAGuB,aAAaC,EAAeN,GAC/BlB,EAAGuB,aAAaC,EAAeH,GAC/BrB,EAAGyB,YAAYD,GAER,CACLE,QAASF,EACTG,gBAAiB,CACfC,eAAgB5B,EAAG6B,kBAAkBL,EAAe,mBACpDM,YAAa9B,EAAG6B,kBAAkBL,EAAe,iBAEnDO,iBAAkB,CAChBC,iBAAkBhC,EAAGiC,mBAC3B,EACA,qBAEMC,gBAAiBlC,EAAGiC,mBAAmBT,EAAe,sBAI5D,SAASW,EAAUnC,EAAIoC,EAAaC,EAASC,GAC3CtC,EAAGuC,WAAW,EAAK,EAAK,EAAK,GAC7BvC,EAAGwC,WAAW,GACdxC,EAAGyC,OAAOzC,EAAG0C,YACb1C,EAAG2C,UAAU3C,EAAG4C,QAChB5C,EAAG6C,MAAM7C,EAAG8C,iBAAmB9C,EAAG+C,kBAElC,IAAF,iBACA,6CACA,KACA,MACA,qBACE,EAAF,+BAEE,IAAF,qBACE,EAAF,iCACE,EAAF,eACA,EACE,EACA,EACA,CAAF,QAEE,EAAF,eACA,EACE,EACF,GAAE,EACA,CAAF,QAGI,IAAJ,IACA,UACA,KACA,IACA,IACI/C,EAAGC,WAAWD,EAAGE,aAAcmC,EAAQhC,UACvCL,EAAGgD,oBACP,iCACA,EACA,EACA,EACA,EACA,GAEIhD,EAAGiD,wBAAwBb,EAAYT,gBAAgBC,gBAGvD,IAAJ,IACA,UACA,KACA,IACA,IACI5B,EAAGC,WAAWD,EAAGE,aAAcmC,EAAQtB,OACvCf,EAAGgD,oBACP,8BACA,EACA,EACA,EACA,EACA,GAEIhD,EAAGiD,wBAAwBb,EAAYT,gBAAgBG,aAEzD9B,EAAGC,WAAWD,EAAGY,qBAAsByB,EAAQvB,SAC/Cd,EAAGkD,WAAWd,EAAYV,SAE1B1B,EAAGmD,iBACL,qCACA,EACA,GAEEnD,EAAGmD,iBACL,oCACA,EACA,GAGI,IAAJ,KACA,mBACA,IACInD,EAAGoD,aAAapD,EAAGqD,UAAWC,EAAa,EAA/C,GAEExD,GAAgBwC,EAGlB,OACExF,KAAM,QACNyG,QAFF,WAGIpE,KAAKqE,YAEPC,QAAS,CACPD,SADJ,WAEM,IAAN,oBACA,wBAEM,IAAKxD,EACH,MAAM,IAAI7D,MAAM,uBAElB0C,QAAQ6E,IAAI,gBAEZ,IAAN,OACA,OAEUC,EAAO,EACX,SAASC,EAAOC,GACdA,GAAO,KACP,IAAR,MACQF,EAAOE,EAEP1B,EAAUnC,EAAIoC,EAAaC,EAASC,GAEpCwB,sBAAsBF,GAExBE,sBAAsBF,MCpUmT,ICO3U,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIa,I,QCRf,GACE9G,KAAM,OACNiH,WAAY,CACVC,MAAJ,ICb8U,ICO1U,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIa,I,QCdfC,OAAIC,IAAIC,QAER,IAAMC,EAAS,CACb,CACEC,KAAM,IACNvH,KAAM,OACN6C,UAAW2E,GAEb,CACED,KAAM,SACNvH,KAAM,QAIN6C,UAAW,kBACT,0CAIA4E,EAAS,IAAIJ,OAAU,CAC3BjG,KAAM,UACNsG,KAAMC,IACNL,WAGaG,ICzBfN,OAAIS,OAAOC,eAAgB,EAE3B,IAAIV,OAAI,CACNM,SACAX,OAAQ,SAAAgB,GAAC,OAAIA,EAAEC,MACdC,OAAO,S,8WCkBV,SAA2CC,EAAMC,GAC1B,WAAnB,EAAOjK,IAA0C,WAAlB,EAAOC,GACxCA,EAAOD,QAAUiK,KAEjBC,EAAO,GAAD,uEAJR,CASG9F,GAAM,WACT,OAAiB,SAASrF,GAEhB,IAAIc,EAAmB,GAGvB,SAASF,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU+B,QAGnC,IAAIC,EAASJ,EAAiB5B,GAAY,CACzCK,EAAGL,EACHiC,GAAG,EACHF,QAAS,IAUV,OANAjB,EAAQd,GAAUW,KAAKqB,EAAOD,QAASC,EAAQA,EAAOD,QAASL,GAG/DM,EAAOC,GAAI,EAGJD,EAAOD,QAqCf,OAhCAL,EAAoB2C,EAAIvD,EAGxBY,EAAoB4C,EAAI1C,EAGxBF,EAAoB6C,EAAI,SAASxC,EAAS+B,EAAMU,GAC3C9C,EAAoB+C,EAAE1C,EAAS+B,IAClCtD,OAAOkE,eAAe3C,EAAS+B,EAAM,CACpCoI,cAAc,EACdvH,YAAY,EACZC,IAAKJ,KAMR9C,EAAoB8D,EAAI,SAASxD,GAChC,IAAIwC,EAASxC,GAAUA,EAAOmD,WAC7B,WAAwB,OAAOnD,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAN,EAAoB6C,EAAEC,EAAQ,IAAKA,GAC5BA,GAIR9C,EAAoB+C,EAAI,SAASgB,EAAQC,GAAY,OAAOlF,OAAOC,UAAUC,eAAeC,KAAK8E,EAAQC,IAGzGhE,EAAoBI,EAAI,GAGjBJ,EAAoBA,EAAoBC,EAAI,GA9D7D,CAiEU,CAEH,SAASK,EAAQD,EAASL,GAEjC,aAGAlB,OAAOkE,eAAe3C,EAAS,aAAc,CAC3CiD,OAAO,IAETjD,EAAQoK,mBAAqBA,EAC7BpK,EAAQqK,SAAWA,EACnBrK,EAAQsK,OAASA,EA2BjB,IAAIC,EAAUvK,EAAQuK,QAAU,KACfvK,EAAQwK,WAAqC,qBAAjB5E,aAA+BA,aAAe6E,MAC9EzK,EAAQ0K,OAASC,KAAKC,OAOnC,SAASR,EAAmBzI,GAC1B3B,EAAQwK,WAA0B7I,EAGpC,IAAIkJ,EAASF,KAAKG,GAAK,IAOvB,SAAST,EAASU,GAChB,OAAOA,EAAIF,EAYb,SAASP,EAAOS,EAAGC,GACjB,OAAOL,KAAKM,IAAIF,EAAIC,IAAMT,EAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAIF,GAAIJ,KAAKM,IAAID,MAKnE,SAAS/K,EAAQD,EAASL,GAEjC,aAGAlB,OAAOkE,eAAe3C,EAAS,aAAc,CAC3CiD,OAAO,IAETjD,EAAQmL,IAAMnL,EAAQoL,SAAMnJ,EAC5BjC,EAAQsD,OAASA,EACjBtD,EAAQqL,SAAWA,EACnBrL,EAAQsL,MAAQA,EAChBtL,EAAQuL,KAAOA,EACfvL,EAAQwL,WAAaA,EACrBxL,EAAQyL,IAAMA,EACdzL,EAAQ0L,SAAWA,EACnB1L,EAAQ2L,UAAYA,EACpB3L,EAAQ4L,OAASA,EACjB5L,EAAQ6L,QAAUA,EAClB7L,EAAQ8L,YAAcA,EACtB9L,EAAQ+L,SAAWA,EACnB/L,EAAQgM,UAAYA,EACpBhM,EAAQiM,OAASA,EACjBjM,EAAQkM,MAAQA,EAChBlM,EAAQmM,gBAAkBA,EAC1BnM,EAAQoM,aAAeA,EACvBpM,EAAQqM,YAAcA,EACtBrM,EAAQsM,UAAYA,EACpBtM,EAAQuM,SAAWA,EACnBvM,EAAQwM,eAAiBA,EACzBxM,EAAQyM,WAAaA,EACrBzM,EAAQ0M,IAAMA,EACd1M,EAAQ2M,KAAOA,EACf3M,EAAQ4M,IAAMA,EACd5M,EAAQ6M,SAAWA,EACnB7M,EAAQ8M,eAAiBA,EACzB9M,EAAQ+M,qBAAuBA,EAC/B/M,EAAQgN,YAAcA,EACtBhN,EAAQsK,OAASA,EAEjB,IAAI2C,EAAUtN,EAAoB,GAE9BuN,EAAWC,EAAwBF,GAEvC,SAASE,EAAwBC,GAAO,GAAIA,GAAOA,EAAIhK,WAAc,OAAOgK,EAAc,IAAIC,EAAS,GAAI,GAAW,MAAPD,EAAe,IAAK,IAAI7J,KAAO6J,EAAW3O,OAAOC,UAAUC,eAAeC,KAAKwO,EAAK7J,KAAM8J,EAAO9J,GAAO6J,EAAI7J,IAAgC,OAAtB8J,EAAOC,QAAUF,EAAYC,EAYlQ,SAAS/J,IACP,IAAIiK,EAAM,IAAIL,EAAS1C,WAAW,GAUlC,OATA+C,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,EA8BT,SAASlC,EAASkC,EAAKxC,GAUrB,OATAwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,IACJwC,EAST,SAASjC,EAAMP,GACb,IAAIwC,EAAM,IAAIL,EAAS1C,WAAW,GAUlC,OATA+C,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACJwC,EAUT,SAAShC,EAAKgC,EAAKxC,GAUjB,OATAwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACJwC,EAiBT,SAAS/B,EAAWgC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAC1D,IAAIT,EAAM,IAAIL,EAAS1C,WAAW,GAUlC,OATA+C,EAAI,GAAKC,EACTD,EAAI,GAAKE,EACTF,EAAI,GAAKG,EACTH,EAAI,GAAKI,EACTJ,EAAI,GAAKK,EACTL,EAAI,GAAKM,EACTN,EAAI,GAAKO,EACTP,EAAI,GAAKQ,EACTR,EAAI,GAAKS,EACFT,EAkBT,SAAS9B,EAAI8B,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAUxD,OATAT,EAAI,GAAKC,EACTD,EAAI,GAAKE,EACTF,EAAI,GAAKG,EACTH,EAAI,GAAKI,EACTJ,EAAI,GAAKK,EACTL,EAAI,GAAKM,EACTN,EAAI,GAAKO,EACTP,EAAI,GAAKQ,EACTR,EAAI,GAAKS,EACFT,EAST,SAAS7B,EAAS6B,GAUhB,OATAA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,EAUT,SAAS5B,EAAU4B,EAAKxC,GAEtB,GAAIwC,IAAQxC,EAAG,CACb,IAAIkD,EAAMlD,EAAE,GACRmD,EAAMnD,EAAE,GACRoD,EAAMpD,EAAE,GACZwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKU,EACTV,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKW,EACTX,EAAI,GAAKY,OAETZ,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GAGb,OAAOwC,EAUT,SAAS3B,EAAO2B,EAAKxC,GACnB,IAAIqD,EAAMrD,EAAE,GACRkD,EAAMlD,EAAE,GACRmD,EAAMnD,EAAE,GACRsD,EAAMtD,EAAE,GACRuD,EAAMvD,EAAE,GACRoD,EAAMpD,EAAE,GACRwD,EAAMxD,EAAE,GACRyD,EAAMzD,EAAE,GACR0D,EAAM1D,EAAE,GAER2D,EAAMD,EAAMH,EAAMH,EAAMK,EACxBG,GAAOF,EAAMJ,EAAMF,EAAMI,EACzBK,EAAMJ,EAAMH,EAAMC,EAAMC,EAGxBM,EAAMT,EAAMM,EAAMT,EAAMU,EAAMT,EAAMU,EAExC,OAAKC,GAGLA,EAAM,EAAMA,EAEZtB,EAAI,GAAKmB,EAAMG,EACftB,EAAI,KAAOkB,EAAMR,EAAMC,EAAMM,GAAOK,EACpCtB,EAAI,IAAMY,EAAMF,EAAMC,EAAMI,GAAOO,EACnCtB,EAAI,GAAKoB,EAAME,EACftB,EAAI,IAAMkB,EAAML,EAAMF,EAAMK,GAAOM,EACnCtB,EAAI,KAAOY,EAAMC,EAAMF,EAAMG,GAAOQ,EACpCtB,EAAI,GAAKqB,EAAMC,EACftB,EAAI,KAAOiB,EAAMJ,EAAMH,EAAMM,GAAOM,EACpCtB,EAAI,IAAMe,EAAMF,EAAMH,EAAMI,GAAOQ,EAC5BtB,GAbE,KAuBX,SAAS1B,EAAQ0B,EAAKxC,GACpB,IAAIqD,EAAMrD,EAAE,GACRkD,EAAMlD,EAAE,GACRmD,EAAMnD,EAAE,GACRsD,EAAMtD,EAAE,GACRuD,EAAMvD,EAAE,GACRoD,EAAMpD,EAAE,GACRwD,EAAMxD,EAAE,GACRyD,EAAMzD,EAAE,GACR0D,EAAM1D,EAAE,GAWZ,OATAwC,EAAI,GAAKe,EAAMG,EAAMN,EAAMK,EAC3BjB,EAAI,GAAKW,EAAMM,EAAMP,EAAMQ,EAC3BlB,EAAI,GAAKU,EAAME,EAAMD,EAAMI,EAC3Bf,EAAI,GAAKY,EAAMI,EAAMF,EAAMI,EAC3BlB,EAAI,GAAKa,EAAMK,EAAMP,EAAMK,EAC3BhB,EAAI,GAAKW,EAAMG,EAAMD,EAAMD,EAC3BZ,EAAI,GAAKc,EAAMG,EAAMF,EAAMC,EAC3BhB,EAAI,GAAKU,EAAMM,EAAMH,EAAMI,EAC3BjB,EAAI,GAAKa,EAAME,EAAML,EAAMI,EACpBd,EAST,SAASzB,EAAYf,GACnB,IAAIqD,EAAMrD,EAAE,GACRkD,EAAMlD,EAAE,GACRmD,EAAMnD,EAAE,GACRsD,EAAMtD,EAAE,GACRuD,EAAMvD,EAAE,GACRoD,EAAMpD,EAAE,GACRwD,EAAMxD,EAAE,GACRyD,EAAMzD,EAAE,GACR0D,EAAM1D,EAAE,GAEZ,OAAOqD,GAAOK,EAAMH,EAAMH,EAAMK,GAAOP,IAAQQ,EAAMJ,EAAMF,EAAMI,GAAOL,GAAOM,EAAMH,EAAMC,EAAMC,GAWnG,SAASxC,EAASwB,EAAKxC,EAAGC,GACxB,IAAIoD,EAAMrD,EAAE,GACRkD,EAAMlD,EAAE,GACRmD,EAAMnD,EAAE,GACRsD,EAAMtD,EAAE,GACRuD,EAAMvD,EAAE,GACRoD,EAAMpD,EAAE,GACRwD,EAAMxD,EAAE,GACRyD,EAAMzD,EAAE,GACR0D,EAAM1D,EAAE,GAER+D,EAAM9D,EAAE,GACR0D,EAAM1D,EAAE,GACR+D,EAAM/D,EAAE,GACRgE,EAAMhE,EAAE,GACR2D,EAAM3D,EAAE,GACRiE,EAAMjE,EAAE,GACRkE,EAAMlE,EAAE,GACR4D,EAAM5D,EAAE,GACRmE,EAAMnE,EAAE,GAaZ,OAXAuC,EAAI,GAAKuB,EAAMV,EAAMM,EAAML,EAAMU,EAAMR,EACvChB,EAAI,GAAKuB,EAAMb,EAAMS,EAAMJ,EAAMS,EAAMP,EACvCjB,EAAI,GAAKuB,EAAMZ,EAAMQ,EAAMP,EAAMY,EAAMN,EAEvClB,EAAI,GAAKyB,EAAMZ,EAAMO,EAAMN,EAAMY,EAAMV,EACvChB,EAAI,GAAKyB,EAAMf,EAAMU,EAAML,EAAMW,EAAMT,EACvCjB,EAAI,GAAKyB,EAAMd,EAAMS,EAAMR,EAAMc,EAAMR,EAEvClB,EAAI,GAAK2B,EAAMd,EAAMQ,EAAMP,EAAMc,EAAMZ,EACvChB,EAAI,GAAK2B,EAAMjB,EAAMW,EAAMN,EAAMa,EAAMX,EACvCjB,EAAI,GAAK2B,EAAMhB,EAAMU,EAAMT,EAAMgB,EAAMV,EAChClB,EAWT,SAASvB,EAAUuB,EAAKxC,EAAGqE,GACzB,IAAIhB,EAAMrD,EAAE,GACRkD,EAAMlD,EAAE,GACRmD,EAAMnD,EAAE,GACRsD,EAAMtD,EAAE,GACRuD,EAAMvD,EAAE,GACRoD,EAAMpD,EAAE,GACRwD,EAAMxD,EAAE,GACRyD,EAAMzD,EAAE,GACR0D,EAAM1D,EAAE,GACRsE,EAAID,EAAE,GACNE,EAAIF,EAAE,GAaV,OAXA7B,EAAI,GAAKa,EACTb,EAAI,GAAKU,EACTV,EAAI,GAAKW,EAETX,EAAI,GAAKc,EACTd,EAAI,GAAKe,EACTf,EAAI,GAAKY,EAETZ,EAAI,GAAK8B,EAAIjB,EAAMkB,EAAIjB,EAAME,EAC7BhB,EAAI,GAAK8B,EAAIpB,EAAMqB,EAAIhB,EAAME,EAC7BjB,EAAI,GAAK8B,EAAInB,EAAMoB,EAAInB,EAAMM,EACtBlB,EAWT,SAAStB,EAAOsB,EAAKxC,EAAGwE,GACtB,IAAInB,EAAMrD,EAAE,GACRkD,EAAMlD,EAAE,GACRmD,EAAMnD,EAAE,GACRsD,EAAMtD,EAAE,GACRuD,EAAMvD,EAAE,GACRoD,EAAMpD,EAAE,GACRwD,EAAMxD,EAAE,GACRyD,EAAMzD,EAAE,GACR0D,EAAM1D,EAAE,GACRnL,EAAI+K,KAAK6E,IAAID,GACbhN,EAAIoI,KAAK8E,IAAIF,GAajB,OAXAhC,EAAI,GAAKhL,EAAI6L,EAAMxO,EAAIyO,EACvBd,EAAI,GAAKhL,EAAI0L,EAAMrO,EAAI0O,EACvBf,EAAI,GAAKhL,EAAI2L,EAAMtO,EAAIuO,EAEvBZ,EAAI,GAAKhL,EAAI8L,EAAMzO,EAAIwO,EACvBb,EAAI,GAAKhL,EAAI+L,EAAM1O,EAAIqO,EACvBV,EAAI,GAAKhL,EAAI4L,EAAMvO,EAAIsO,EAEvBX,EAAI,GAAKgB,EACThB,EAAI,GAAKiB,EACTjB,EAAI,GAAKkB,EACFlB,EAWT,SAASrB,EAAMqB,EAAKxC,EAAGqE,GACrB,IAAIC,EAAID,EAAE,GACNE,EAAIF,EAAE,GAaV,OAXA7B,EAAI,GAAK8B,EAAItE,EAAE,GACfwC,EAAI,GAAK8B,EAAItE,EAAE,GACfwC,EAAI,GAAK8B,EAAItE,EAAE,GAEfwC,EAAI,GAAK+B,EAAIvE,EAAE,GACfwC,EAAI,GAAK+B,EAAIvE,EAAE,GACfwC,EAAI,GAAK+B,EAAIvE,EAAE,GAEfwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACJwC,EAcT,SAASpB,EAAgBoB,EAAK6B,GAU5B,OATA7B,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK6B,EAAE,GACX7B,EAAI,GAAK6B,EAAE,GACX7B,EAAI,GAAK,EACFA,EAcT,SAASnB,EAAamB,EAAKgC,GACzB,IAAI3P,EAAI+K,KAAK6E,IAAID,GACbhN,EAAIoI,KAAK8E,IAAIF,GAajB,OAXAhC,EAAI,GAAKhL,EACTgL,EAAI,GAAK3N,EACT2N,EAAI,GAAK,EAETA,EAAI,IAAM3N,EACV2N,EAAI,GAAKhL,EACTgL,EAAI,GAAK,EAETA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,EAcT,SAASlB,EAAYkB,EAAK6B,GAYxB,OAXA7B,EAAI,GAAK6B,EAAE,GACX7B,EAAI,GAAK,EACTA,EAAI,GAAK,EAETA,EAAI,GAAK,EACTA,EAAI,GAAK6B,EAAE,GACX7B,EAAI,GAAK,EAETA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,EAUT,SAASjB,EAAUiB,EAAKxC,GAYtB,OAXAwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAK,EAETA,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAK,EAETA,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAK,EACFA,EAWT,SAAShB,EAASgB,EAAKmC,GACrB,IAAIL,EAAIK,EAAE,GACNJ,EAAII,EAAE,GACNC,EAAID,EAAE,GACNE,EAAIF,EAAE,GACNG,EAAKR,EAAIA,EACTS,EAAKR,EAAIA,EACTS,EAAKJ,EAAIA,EAETK,EAAKX,EAAIQ,EACTI,EAAKX,EAAIO,EACTK,EAAKZ,EAAIQ,EACTK,EAAKR,EAAIE,EACTO,EAAKT,EAAIG,EACTO,EAAKV,EAAII,EACTO,EAAKV,EAAIC,EACTU,EAAKX,EAAIE,EACTU,EAAKZ,EAAIG,EAcb,OAZAxC,EAAI,GAAK,EAAI2C,EAAKG,EAClB9C,EAAI,GAAK0C,EAAKO,EACdjD,EAAI,GAAK4C,EAAKI,EAEdhD,EAAI,GAAK0C,EAAKO,EACdjD,EAAI,GAAK,EAAIyC,EAAKK,EAClB9C,EAAI,GAAK6C,EAAKE,EAEd/C,EAAI,GAAK4C,EAAKI,EACdhD,EAAI,GAAK6C,EAAKE,EACd/C,EAAI,GAAK,EAAIyC,EAAKE,EAEX3C,EAWT,SAASf,EAAee,EAAKxC,GAC3B,IAAIqD,EAAMrD,EAAE,GACRkD,EAAMlD,EAAE,GACRmD,EAAMnD,EAAE,GACR0F,EAAM1F,EAAE,GACRsD,EAAMtD,EAAE,GACRuD,EAAMvD,EAAE,GACRoD,EAAMpD,EAAE,GACR2F,EAAM3F,EAAE,GACRwD,EAAMxD,EAAE,GACRyD,EAAMzD,EAAE,GACR0D,EAAM1D,EAAE,IACR4F,EAAM5F,EAAE,IACR6F,EAAM7F,EAAE,IACR8F,EAAM9F,EAAE,IACR+F,EAAM/F,EAAE,IACRgG,EAAMhG,EAAE,IAER+D,EAAMV,EAAME,EAAML,EAAMI,EACxBK,EAAMN,EAAMD,EAAMD,EAAMG,EACxBU,EAAMX,EAAMsC,EAAMD,EAAMpC,EACxB2C,EAAM/C,EAAME,EAAMD,EAAMI,EACxB2C,EAAMhD,EAAMyC,EAAMD,EAAMnC,EACxB4C,EAAMhD,EAAMwC,EAAMD,EAAMtC,EACxBgD,EAAM5C,EAAMsC,EAAMrC,EAAMoC,EACxBQ,EAAM7C,EAAMuC,EAAMrC,EAAMmC,EACxBS,EAAM9C,EAAMwC,EAAMJ,EAAMC,EACxBU,EAAM9C,EAAMsC,EAAMrC,EAAMoC,EACxB7B,EAAMR,EAAMuC,EAAMJ,EAAME,EACxBlC,EAAMF,EAAMsC,EAAMJ,EAAMG,EAGxBjC,EAAMC,EAAMH,EAAMD,EAAMM,EAAMD,EAAMuC,EAAMN,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EAE5E,OAAKtC,GAGLA,EAAM,EAAMA,EAEZtB,EAAI,IAAMe,EAAMK,EAAMR,EAAMa,EAAM0B,EAAMY,GAAOzC,EAC/CtB,EAAI,IAAMY,EAAMkD,EAAMhD,EAAMM,EAAM+B,EAAMU,GAAOvC,EAC/CtB,EAAI,IAAMc,EAAMW,EAAMV,EAAM+C,EAAMX,EAAMS,GAAOtC,EAE/CtB,EAAI,IAAMW,EAAMc,EAAMf,EAAMU,EAAM8B,EAAMa,GAAOzC,EAC/CtB,EAAI,IAAMa,EAAMO,EAAMT,EAAMmD,EAAMZ,EAAMW,GAAOvC,EAC/CtB,EAAI,IAAMU,EAAMoD,EAAMjD,EAAMY,EAAMyB,EAAMU,GAAOtC,EAE/CtB,EAAI,IAAMsD,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,GAAOnC,EAC/CtB,EAAI,IAAMuD,EAAM/B,EAAM6B,EAAMM,EAAMH,EAAMrC,GAAOG,EAC/CtB,EAAI,IAAMqD,EAAMK,EAAMJ,EAAM9B,EAAMgC,EAAMjC,GAAOD,EAExCtB,GAhBE,KA2BX,SAASd,EAAWc,EAAKgE,EAAOC,GAU9B,OATAjE,EAAI,GAAK,EAAIgE,EACbhE,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EAAIiE,EACdjE,EAAI,GAAK,EACTA,EAAI,IAAM,EACVA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,EAST,SAASb,EAAI3B,GACX,MAAO,QAAUA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,IAS1I,SAAS4B,EAAK5B,GACZ,OAAOJ,KAAK8G,KAAK9G,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,IAWlM,SAAS6B,EAAIW,EAAKxC,EAAGC,GAUnB,OATAuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GACXuC,EAWT,SAASV,EAASU,EAAKxC,EAAGC,GAUxB,OATAuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GACXuC,EAWT,SAAST,EAAeS,EAAKxC,EAAGC,GAU9B,OATAuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EACTuC,EAYT,SAASR,EAAqBQ,EAAKxC,EAAGC,EAAGkB,GAUvC,OATAqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EAChBqB,EAUT,SAASP,EAAYjC,EAAGC,GACtB,OAAOD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,GAU5J,SAASV,EAAOS,EAAGC,GACjB,IAAI2G,EAAK5G,EAAE,GACP6G,EAAK7G,EAAE,GACP8G,EAAK9G,EAAE,GACP+G,EAAK/G,EAAE,GACPgH,EAAKhH,EAAE,GACPiH,EAAKjH,EAAE,GACPkH,EAAKlH,EAAE,GACPmH,EAAKnH,EAAE,GACPoH,EAAKpH,EAAE,GACPqH,EAAKpH,EAAE,GACPqH,EAAKrH,EAAE,GACPsH,EAAKtH,EAAE,GACPuH,EAAKvH,EAAE,GACPwH,EAAKxH,EAAE,GACPyH,EAAKzH,EAAE,GACP0H,EAAK1H,EAAE,GACP2H,EAAK3H,EAAE,GACP4H,EAAK5H,EAAE,GACX,OAAOL,KAAKM,IAAI0G,EAAKS,IAAOlF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI0G,GAAKhH,KAAKM,IAAImH,KAAQzH,KAAKM,IAAI2G,EAAKS,IAAOnF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI2G,GAAKjH,KAAKM,IAAIoH,KAAQ1H,KAAKM,IAAI4G,EAAKS,IAAOpF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI4G,GAAKlH,KAAKM,IAAIqH,KAAQ3H,KAAKM,IAAI6G,EAAKS,IAAOrF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI6G,GAAKnH,KAAKM,IAAIsH,KAAQ5H,KAAKM,IAAI8G,EAAKS,IAAOtF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI8G,GAAKpH,KAAKM,IAAIuH,KAAQ7H,KAAKM,IAAI+G,EAAKS,IAAOvF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI+G,GAAKrH,KAAKM,IAAIwH,KAAQ9H,KAAKM,IAAIgH,EAAKS,IAAOxF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAIgH,GAAKtH,KAAKM,IAAIyH,KAAQ/H,KAAKM,IAAIiH,EAAKS,IAAOzF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAIiH,GAAKvH,KAAKM,IAAI0H,KAAQhI,KAAKM,IAAIkH,EAAKS,IAAO1F,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAIkH,GAAKxH,KAAKM,IAAI2H,IAOpvB5S,EAAQoL,IAAMW,EAMd/L,EAAQmL,IAAM0B,GAIjB,SAAS5M,EAAQD,EAASL,GAEjC,aAGAlB,OAAOkE,eAAe3C,EAAS,aAAc,CAC3CiD,OAAO,IAETjD,EAAQ6S,QAAU7S,EAAQ8S,OAAS9S,EAAQ+S,IAAM/S,EAAQgT,QAAUhT,EAAQiT,KAAOjT,EAAQkT,IAAMlT,EAAQoL,IAAMpL,EAAQmL,SAAMlJ,EAC5HjC,EAAQsD,OAASA,EACjBtD,EAAQsL,MAAQA,EAChBtL,EAAQxB,OAASA,EACjBwB,EAAQwL,WAAaA,EACrBxL,EAAQuL,KAAOA,EACfvL,EAAQyL,IAAMA,EACdzL,EAAQ4M,IAAMA,EACd5M,EAAQ6M,SAAWA,EACnB7M,EAAQ+L,SAAWA,EACnB/L,EAAQmT,OAASA,EACjBnT,EAAQoT,KAAOA,EACfpT,EAAQqT,MAAQA,EAChBrT,EAAQsT,IAAMA,EACdtT,EAAQkL,IAAMA,EACdlL,EAAQuT,MAAQA,EAChBvT,EAAQkM,MAAQA,EAChBlM,EAAQwT,YAAcA,EACtBxT,EAAQyT,SAAWA,EACnBzT,EAAQ0T,gBAAkBA,EAC1B1T,EAAQ2T,cAAgBA,EACxB3T,EAAQ4T,OAASA,EACjB5T,EAAQ6T,QAAUA,EAClB7T,EAAQ8T,UAAYA,EACpB9T,EAAQ+T,IAAMA,EACd/T,EAAQgU,MAAQA,EAChBhU,EAAQiU,KAAOA,EACfjU,EAAQkU,QAAUA,EAClBlU,EAAQmU,OAASA,EACjBnU,EAAQ4K,OAASA,EACjB5K,EAAQoU,cAAgBA,EACxBpU,EAAQqU,cAAgBA,EACxBrU,EAAQsU,cAAgBA,EACxBtU,EAAQuU,QAAUA,EAClBvU,EAAQwU,QAAUA,EAClBxU,EAAQyU,QAAUA,EAClBzU,EAAQ0U,MAAQA,EAChB1U,EAAQ0M,IAAMA,EACd1M,EAAQgN,YAAcA,EACtBhN,EAAQsK,OAASA,EAEjB,IAAI2C,EAAUtN,EAAoB,GAE9BuN,EAAWC,EAAwBF,GAEvC,SAASE,EAAwBC,GAAO,GAAIA,GAAOA,EAAIhK,WAAc,OAAOgK,EAAc,IAAIC,EAAS,GAAI,GAAW,MAAPD,EAAe,IAAK,IAAI7J,KAAO6J,EAAW3O,OAAOC,UAAUC,eAAeC,KAAKwO,EAAK7J,KAAM8J,EAAO9J,GAAO6J,EAAI7J,IAAgC,OAAtB8J,EAAOC,QAAUF,EAAYC,EAYlQ,SAAS/J,IACP,IAAIiK,EAAM,IAAIL,EAAS1C,WAAW,GAIlC,OAHA+C,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,EA6BT,SAASjC,EAAMP,GACb,IAAIwC,EAAM,IAAIL,EAAS1C,WAAW,GAIlC,OAHA+C,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACJwC,EAST,SAAS/O,EAAOuM,GACd,IAAIsE,EAAItE,EAAE,GACNuE,EAAIvE,EAAE,GACN4E,EAAI5E,EAAE,GACV,OAAOJ,KAAK8G,KAAKpC,EAAIA,EAAIC,EAAIA,EAAIK,EAAIA,GAWvC,SAASnE,EAAW6D,EAAGC,EAAGK,GACxB,IAAIpC,EAAM,IAAIL,EAAS1C,WAAW,GAIlC,OAHA+C,EAAI,GAAK8B,EACT9B,EAAI,GAAK+B,EACT/B,EAAI,GAAKoC,EACFpC,EAUT,SAAShC,EAAKgC,EAAKxC,GAIjB,OAHAwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACJwC,EAYT,SAAS9B,EAAI8B,EAAK8B,EAAGC,EAAGK,GAItB,OAHApC,EAAI,GAAK8B,EACT9B,EAAI,GAAK+B,EACT/B,EAAI,GAAKoC,EACFpC,EAWT,SAASX,EAAIW,EAAKxC,EAAGC,GAInB,OAHAuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GACXuC,EAWT,SAASV,EAASU,EAAKxC,EAAGC,GAIxB,OAHAuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GACXuC,EAWT,SAASxB,EAASwB,EAAKxC,EAAGC,GAIxB,OAHAuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GACXuC,EAWT,SAAS4F,EAAO5F,EAAKxC,EAAGC,GAItB,OAHAuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GACXuC,EAUT,SAAS6F,EAAK7F,EAAKxC,GAIjB,OAHAwC,EAAI,GAAK5C,KAAKyI,KAAKrI,EAAE,IACrBwC,EAAI,GAAK5C,KAAKyI,KAAKrI,EAAE,IACrBwC,EAAI,GAAK5C,KAAKyI,KAAKrI,EAAE,IACdwC,EAUT,SAAS8F,EAAM9F,EAAKxC,GAIlB,OAHAwC,EAAI,GAAK5C,KAAK0I,MAAMtI,EAAE,IACtBwC,EAAI,GAAK5C,KAAK0I,MAAMtI,EAAE,IACtBwC,EAAI,GAAK5C,KAAK0I,MAAMtI,EAAE,IACfwC,EAWT,SAAS+F,EAAI/F,EAAKxC,EAAGC,GAInB,OAHAuC,EAAI,GAAK5C,KAAK2I,IAAIvI,EAAE,GAAIC,EAAE,IAC1BuC,EAAI,GAAK5C,KAAK2I,IAAIvI,EAAE,GAAIC,EAAE,IAC1BuC,EAAI,GAAK5C,KAAK2I,IAAIvI,EAAE,GAAIC,EAAE,IACnBuC,EAWT,SAASrC,EAAIqC,EAAKxC,EAAGC,GAInB,OAHAuC,EAAI,GAAK5C,KAAKO,IAAIH,EAAE,GAAIC,EAAE,IAC1BuC,EAAI,GAAK5C,KAAKO,IAAIH,EAAE,GAAIC,EAAE,IAC1BuC,EAAI,GAAK5C,KAAKO,IAAIH,EAAE,GAAIC,EAAE,IACnBuC,EAUT,SAASgG,EAAMhG,EAAKxC,GAIlB,OAHAwC,EAAI,GAAK5C,KAAK4I,MAAMxI,EAAE,IACtBwC,EAAI,GAAK5C,KAAK4I,MAAMxI,EAAE,IACtBwC,EAAI,GAAK5C,KAAK4I,MAAMxI,EAAE,IACfwC,EAWT,SAASrB,EAAMqB,EAAKxC,EAAGC,GAIrB,OAHAuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EACTuC,EAYT,SAASiG,EAAYjG,EAAKxC,EAAGC,EAAGkB,GAI9B,OAHAqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EAChBqB,EAUT,SAASkG,EAAS1I,EAAGC,GACnB,IAAIqE,EAAIrE,EAAE,GAAKD,EAAE,GACbuE,EAAItE,EAAE,GAAKD,EAAE,GACb4E,EAAI3E,EAAE,GAAKD,EAAE,GACjB,OAAOJ,KAAK8G,KAAKpC,EAAIA,EAAIC,EAAIA,EAAIK,EAAIA,GAUvC,SAAS+D,EAAgB3I,EAAGC,GAC1B,IAAIqE,EAAIrE,EAAE,GAAKD,EAAE,GACbuE,EAAItE,EAAE,GAAKD,EAAE,GACb4E,EAAI3E,EAAE,GAAKD,EAAE,GACjB,OAAOsE,EAAIA,EAAIC,EAAIA,EAAIK,EAAIA,EAS7B,SAASgE,EAAc5I,GACrB,IAAIsE,EAAItE,EAAE,GACNuE,EAAIvE,EAAE,GACN4E,EAAI5E,EAAE,GACV,OAAOsE,EAAIA,EAAIC,EAAIA,EAAIK,EAAIA,EAU7B,SAASiE,EAAOrG,EAAKxC,GAInB,OAHAwC,EAAI,IAAMxC,EAAE,GACZwC,EAAI,IAAMxC,EAAE,GACZwC,EAAI,IAAMxC,EAAE,GACLwC,EAUT,SAASsG,EAAQtG,EAAKxC,GAIpB,OAHAwC,EAAI,GAAK,EAAMxC,EAAE,GACjBwC,EAAI,GAAK,EAAMxC,EAAE,GACjBwC,EAAI,GAAK,EAAMxC,EAAE,GACVwC,EAUT,SAASuG,EAAUvG,EAAKxC,GACtB,IAAIsE,EAAItE,EAAE,GACNuE,EAAIvE,EAAE,GACN4E,EAAI5E,EAAE,GACNgI,EAAM1D,EAAIA,EAAIC,EAAIA,EAAIK,EAAIA,EAQ9B,OAPIoD,EAAM,IAERA,EAAM,EAAIpI,KAAK8G,KAAKsB,GACpBxF,EAAI,GAAKxC,EAAE,GAAKgI,EAChBxF,EAAI,GAAKxC,EAAE,GAAKgI,EAChBxF,EAAI,GAAKxC,EAAE,GAAKgI,GAEXxF,EAUT,SAASwG,EAAIhJ,EAAGC,GACd,OAAOD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAW9C,SAASgJ,EAAMzG,EAAKxC,EAAGC,GACrB,IAAI2J,EAAK5J,EAAE,GACP6J,EAAK7J,EAAE,GACP8J,EAAK9J,EAAE,GACP+J,EAAK9J,EAAE,GACP+J,EAAK/J,EAAE,GACPgK,EAAKhK,EAAE,GAKX,OAHAuC,EAAI,GAAKqH,EAAKI,EAAKH,EAAKE,EACxBxH,EAAI,GAAKsH,EAAKC,EAAKH,EAAKK,EACxBzH,EAAI,GAAKoH,EAAKI,EAAKH,EAAKE,EACjBvH,EAYT,SAAS0G,EAAK1G,EAAKxC,EAAGC,EAAG9H,GACvB,IAAIyR,EAAK5J,EAAE,GACP6J,EAAK7J,EAAE,GACP8J,EAAK9J,EAAE,GAIX,OAHAwC,EAAI,GAAKoH,EAAKzR,GAAK8H,EAAE,GAAK2J,GAC1BpH,EAAI,GAAKqH,EAAK1R,GAAK8H,EAAE,GAAK4J,GAC1BrH,EAAI,GAAKsH,EAAK3R,GAAK8H,EAAE,GAAK6J,GACnBtH,EAcT,SAAS2G,EAAQ3G,EAAKxC,EAAGC,EAAGzI,EAAGC,EAAGU,GAChC,IAAI+R,EAAe/R,EAAIA,EACnBgS,EAAUD,GAAgB,EAAI/R,EAAI,GAAK,EACvCiS,EAAUF,GAAgB/R,EAAI,GAAKA,EACnCkS,EAAUH,GAAgB/R,EAAI,GAC9BmS,EAAUJ,GAAgB,EAAI,EAAI/R,GAMtC,OAJAqK,EAAI,GAAKxC,EAAE,GAAKmK,EAAUlK,EAAE,GAAKmK,EAAU5S,EAAE,GAAK6S,EAAU5S,EAAE,GAAK6S,EACnE9H,EAAI,GAAKxC,EAAE,GAAKmK,EAAUlK,EAAE,GAAKmK,EAAU5S,EAAE,GAAK6S,EAAU5S,EAAE,GAAK6S,EACnE9H,EAAI,GAAKxC,EAAE,GAAKmK,EAAUlK,EAAE,GAAKmK,EAAU5S,EAAE,GAAK6S,EAAU5S,EAAE,GAAK6S,EAE5D9H,EAcT,SAAS4G,EAAO5G,EAAKxC,EAAGC,EAAGzI,EAAGC,EAAGU,GAC/B,IAAIoS,EAAgB,EAAIpS,EACpBqS,EAAwBD,EAAgBA,EACxCL,EAAe/R,EAAIA,EACnBgS,EAAUK,EAAwBD,EAClCH,EAAU,EAAIjS,EAAIqS,EAClBH,EAAU,EAAIH,EAAeK,EAC7BD,EAAUJ,EAAe/R,EAM7B,OAJAqK,EAAI,GAAKxC,EAAE,GAAKmK,EAAUlK,EAAE,GAAKmK,EAAU5S,EAAE,GAAK6S,EAAU5S,EAAE,GAAK6S,EACnE9H,EAAI,GAAKxC,EAAE,GAAKmK,EAAUlK,EAAE,GAAKmK,EAAU5S,EAAE,GAAK6S,EAAU5S,EAAE,GAAK6S,EACnE9H,EAAI,GAAKxC,EAAE,GAAKmK,EAAUlK,EAAE,GAAKmK,EAAU5S,EAAE,GAAK6S,EAAU5S,EAAE,GAAK6S,EAE5D9H,EAUT,SAAS3C,EAAO2C,EAAKrB,GACnBA,EAAQA,GAAS,EAEjB,IAAIpJ,EAAwB,EAApBoK,EAASxC,SAAiBC,KAAKG,GACnC6E,EAAwB,EAApBzC,EAASxC,SAAiB,EAC9B8K,EAAS7K,KAAK8G,KAAK,EAAM9B,EAAIA,GAAKzD,EAKtC,OAHAqB,EAAI,GAAK5C,KAAK8E,IAAI3M,GAAK0S,EACvBjI,EAAI,GAAK5C,KAAK6E,IAAI1M,GAAK0S,EACvBjI,EAAI,GAAKoC,EAAIzD,EACNqB,EAYT,SAAS6G,EAAc7G,EAAKxC,EAAGzI,GAC7B,IAAI+M,EAAItE,EAAE,GACNuE,EAAIvE,EAAE,GACN4E,EAAI5E,EAAE,GACN6E,EAAItN,EAAE,GAAK+M,EAAI/M,EAAE,GAAKgN,EAAIhN,EAAE,IAAMqN,EAAIrN,EAAE,IAK5C,OAJAsN,EAAIA,GAAK,EACTrC,EAAI,IAAMjL,EAAE,GAAK+M,EAAI/M,EAAE,GAAKgN,EAAIhN,EAAE,GAAKqN,EAAIrN,EAAE,KAAOsN,EACpDrC,EAAI,IAAMjL,EAAE,GAAK+M,EAAI/M,EAAE,GAAKgN,EAAIhN,EAAE,GAAKqN,EAAIrN,EAAE,KAAOsN,EACpDrC,EAAI,IAAMjL,EAAE,GAAK+M,EAAI/M,EAAE,GAAKgN,EAAIhN,EAAE,IAAMqN,EAAIrN,EAAE,KAAOsN,EAC9CrC,EAWT,SAAS8G,EAAc9G,EAAKxC,EAAGzI,GAC7B,IAAI+M,EAAItE,EAAE,GACNuE,EAAIvE,EAAE,GACN4E,EAAI5E,EAAE,GAIV,OAHAwC,EAAI,GAAK8B,EAAI/M,EAAE,GAAKgN,EAAIhN,EAAE,GAAKqN,EAAIrN,EAAE,GACrCiL,EAAI,GAAK8B,EAAI/M,EAAE,GAAKgN,EAAIhN,EAAE,GAAKqN,EAAIrN,EAAE,GACrCiL,EAAI,GAAK8B,EAAI/M,EAAE,GAAKgN,EAAIhN,EAAE,GAAKqN,EAAIrN,EAAE,GAC9BiL,EAWT,SAAS+G,EAAc/G,EAAKxC,EAAG2E,GAG7B,IAAIL,EAAItE,EAAE,GACNuE,EAAIvE,EAAE,GACN4E,EAAI5E,EAAE,GACN0K,EAAK/F,EAAE,GACPgG,EAAKhG,EAAE,GACPiG,EAAKjG,EAAE,GACPkG,EAAKlG,EAAE,GAGPmG,EAAKD,EAAKvG,EAAIqG,EAAK/F,EAAIgG,EAAKrG,EAC5BwG,EAAKF,EAAKtG,EAAIqG,EAAKtG,EAAIoG,EAAK9F,EAC5BoG,EAAKH,EAAKjG,EAAI8F,EAAKnG,EAAIoG,EAAKrG,EAC5B2G,GAAMP,EAAKpG,EAAIqG,EAAKpG,EAAIqG,EAAKhG,EAMjC,OAHApC,EAAI,GAAKsI,EAAKD,EAAKI,GAAMP,EAAKK,GAAMH,EAAKI,GAAML,EAC/CnI,EAAI,GAAKuI,EAAKF,EAAKI,GAAMN,EAAKK,GAAMN,EAAKI,GAAMF,EAC/CpI,EAAI,GAAKwI,EAAKH,EAAKI,GAAML,EAAKE,GAAMH,EAAKI,GAAML,EACxClI,EAWT,SAASgH,EAAQhH,EAAKxC,EAAGC,EAAGzI,GAC1B,IAAIxC,EAAI,GACJ+C,EAAI,GAgBR,OAdA/C,EAAE,GAAKgL,EAAE,GAAKC,EAAE,GAChBjL,EAAE,GAAKgL,EAAE,GAAKC,EAAE,GAChBjL,EAAE,GAAKgL,EAAE,GAAKC,EAAE,GAGhBlI,EAAE,GAAK/C,EAAE,GACT+C,EAAE,GAAK/C,EAAE,GAAK4K,KAAK8E,IAAIlN,GAAKxC,EAAE,GAAK4K,KAAK6E,IAAIjN,GAC5CO,EAAE,GAAK/C,EAAE,GAAK4K,KAAK6E,IAAIjN,GAAKxC,EAAE,GAAK4K,KAAK8E,IAAIlN,GAG5CgL,EAAI,GAAKzK,EAAE,GAAKkI,EAAE,GAClBuC,EAAI,GAAKzK,EAAE,GAAKkI,EAAE,GAClBuC,EAAI,GAAKzK,EAAE,GAAKkI,EAAE,GAEXuC,EAWT,SAASiH,EAAQjH,EAAKxC,EAAGC,EAAGzI,GAC1B,IAAIxC,EAAI,GACJ+C,EAAI,GAgBR,OAdA/C,EAAE,GAAKgL,EAAE,GAAKC,EAAE,GAChBjL,EAAE,GAAKgL,EAAE,GAAKC,EAAE,GAChBjL,EAAE,GAAKgL,EAAE,GAAKC,EAAE,GAGhBlI,EAAE,GAAK/C,EAAE,GAAK4K,KAAK6E,IAAIjN,GAAKxC,EAAE,GAAK4K,KAAK8E,IAAIlN,GAC5CO,EAAE,GAAK/C,EAAE,GACT+C,EAAE,GAAK/C,EAAE,GAAK4K,KAAK8E,IAAIlN,GAAKxC,EAAE,GAAK4K,KAAK6E,IAAIjN,GAG5CgL,EAAI,GAAKzK,EAAE,GAAKkI,EAAE,GAClBuC,EAAI,GAAKzK,EAAE,GAAKkI,EAAE,GAClBuC,EAAI,GAAKzK,EAAE,GAAKkI,EAAE,GAEXuC,EAWT,SAASkH,EAAQlH,EAAKxC,EAAGC,EAAGzI,GAC1B,IAAIxC,EAAI,GACJ+C,EAAI,GAgBR,OAdA/C,EAAE,GAAKgL,EAAE,GAAKC,EAAE,GAChBjL,EAAE,GAAKgL,EAAE,GAAKC,EAAE,GAChBjL,EAAE,GAAKgL,EAAE,GAAKC,EAAE,GAGhBlI,EAAE,GAAK/C,EAAE,GAAK4K,KAAK8E,IAAIlN,GAAKxC,EAAE,GAAK4K,KAAK6E,IAAIjN,GAC5CO,EAAE,GAAK/C,EAAE,GAAK4K,KAAK6E,IAAIjN,GAAKxC,EAAE,GAAK4K,KAAK8E,IAAIlN,GAC5CO,EAAE,GAAK/C,EAAE,GAGTwN,EAAI,GAAKzK,EAAE,GAAKkI,EAAE,GAClBuC,EAAI,GAAKzK,EAAE,GAAKkI,EAAE,GAClBuC,EAAI,GAAKzK,EAAE,GAAKkI,EAAE,GAEXuC,EAST,SAASmH,EAAM3J,EAAGC,GAChB,IAAIiL,EAAQzK,EAAWT,EAAE,GAAIA,EAAE,GAAIA,EAAE,IACjCmL,EAAQ1K,EAAWR,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAErC8I,EAAUmC,EAAOA,GACjBnC,EAAUoC,EAAOA,GAEjB,IAAIC,EAASpC,EAAIkC,EAAOC,GAExB,OAAIC,EAAS,EACJ,EACEA,GAAU,EACZxL,KAAKG,GAELH,KAAKyL,KAAKD,GAUrB,SAASzJ,EAAI3B,GACX,MAAO,QAAUA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,IAUtD,SAASiC,EAAYjC,EAAGC,GACtB,OAAOD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,GAUtD,SAASV,EAAOS,EAAGC,GACjB,IAAI2G,EAAK5G,EAAE,GACP6G,EAAK7G,EAAE,GACP8G,EAAK9G,EAAE,GACPqH,EAAKpH,EAAE,GACPqH,EAAKrH,EAAE,GACPsH,EAAKtH,EAAE,GACX,OAAOL,KAAKM,IAAI0G,EAAKS,IAAOlF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI0G,GAAKhH,KAAKM,IAAImH,KAAQzH,KAAKM,IAAI2G,EAAKS,IAAOnF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI2G,GAAKjH,KAAKM,IAAIoH,KAAQ1H,KAAKM,IAAI4G,EAAKS,IAAOpF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI4G,GAAKlH,KAAKM,IAAIqH,IAOtPtS,EAAQmL,IAAM0B,EAMd7M,EAAQoL,IAAMW,EAMd/L,EAAQkT,IAAMC,EAMbnT,EAAQiT,KAAOQ,EAMZzT,EAAQgT,QAAUU,EAMtB1T,EAAQ+S,IAAMvU,EAMXwB,EAAQ8S,OAASa,EAchB3T,EAAQ6S,QAAU,WAC9B,IAAIwD,EAAM/S,IAEV,OAAO,SAAUyH,EAAGuL,EAAQC,EAAQC,EAAOC,EAAIC,GAC7C,IAAIpY,OAAI,EACJ4B,OAAI,EAeR,IAdKoW,IACHA,EAAS,GAGNC,IACHA,EAAS,GAITrW,EADEsW,EACE7L,KAAK2I,IAAIkD,EAAQF,EAASC,EAAQxL,EAAEvM,QAEpCuM,EAAEvM,OAGHF,EAAIiY,EAAQjY,EAAI4B,EAAG5B,GAAKgY,EAC3BD,EAAI,GAAKtL,EAAEzM,GAAG+X,EAAI,GAAKtL,EAAEzM,EAAI,GAAG+X,EAAI,GAAKtL,EAAEzM,EAAI,GAC/CmY,EAAGJ,EAAKA,EAAKK,GACb3L,EAAEzM,GAAK+X,EAAI,GAAGtL,EAAEzM,EAAI,GAAK+X,EAAI,GAAGtL,EAAEzM,EAAI,GAAK+X,EAAI,GAGjD,OAAOtL,GA1BqB,IAgCzB,SAAS9K,EAAQD,EAASL,GAEjC,aAGAlB,OAAOkE,eAAe3C,EAAS,aAAc,CAC3CiD,OAAO,IAETjD,EAAQ6S,QAAU7S,EAAQ8S,OAAS9S,EAAQ+S,IAAM/S,EAAQgT,QAAUhT,EAAQiT,KAAOjT,EAAQkT,IAAMlT,EAAQoL,IAAMpL,EAAQmL,SAAMlJ,EAC5HjC,EAAQsD,OAASA,EACjBtD,EAAQsL,MAAQA,EAChBtL,EAAQwL,WAAaA,EACrBxL,EAAQuL,KAAOA,EACfvL,EAAQyL,IAAMA,EACdzL,EAAQ4M,IAAMA,EACd5M,EAAQ6M,SAAWA,EACnB7M,EAAQ+L,SAAWA,EACnB/L,EAAQmT,OAASA,EACjBnT,EAAQoT,KAAOA,EACfpT,EAAQqT,MAAQA,EAChBrT,EAAQsT,IAAMA,EACdtT,EAAQkL,IAAMA,EACdlL,EAAQuT,MAAQA,EAChBvT,EAAQkM,MAAQA,EAChBlM,EAAQwT,YAAcA,EACtBxT,EAAQyT,SAAWA,EACnBzT,EAAQ0T,gBAAkBA,EAC1B1T,EAAQxB,OAASA,EACjBwB,EAAQ2T,cAAgBA,EACxB3T,EAAQ4T,OAASA,EACjB5T,EAAQ6T,QAAUA,EAClB7T,EAAQ8T,UAAYA,EACpB9T,EAAQ+T,IAAMA,EACd/T,EAAQiU,KAAOA,EACfjU,EAAQ4K,OAASA,EACjB5K,EAAQoU,cAAgBA,EACxBpU,EAAQsU,cAAgBA,EACxBtU,EAAQ0M,IAAMA,EACd1M,EAAQgN,YAAcA,EACtBhN,EAAQsK,OAASA,EAEjB,IAAI2C,EAAUtN,EAAoB,GAE9BuN,EAAWC,EAAwBF,GAEvC,SAASE,EAAwBC,GAAO,GAAIA,GAAOA,EAAIhK,WAAc,OAAOgK,EAAc,IAAIC,EAAS,GAAI,GAAW,MAAPD,EAAe,IAAK,IAAI7J,KAAO6J,EAAW3O,OAAOC,UAAUC,eAAeC,KAAKwO,EAAK7J,KAAM8J,EAAO9J,GAAO6J,EAAI7J,IAAgC,OAAtB8J,EAAOC,QAAUF,EAAYC,EAYlQ,SAAS/J,IACP,IAAIiK,EAAM,IAAIL,EAAS1C,WAAW,GAKlC,OAJA+C,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,EA6BT,SAASjC,EAAMP,GACb,IAAIwC,EAAM,IAAIL,EAAS1C,WAAW,GAKlC,OAJA+C,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACJwC,EAYT,SAAS/B,EAAW6D,EAAGC,EAAGK,EAAGC,GAC3B,IAAIrC,EAAM,IAAIL,EAAS1C,WAAW,GAKlC,OAJA+C,EAAI,GAAK8B,EACT9B,EAAI,GAAK+B,EACT/B,EAAI,GAAKoC,EACTpC,EAAI,GAAKqC,EACFrC,EAUT,SAAShC,EAAKgC,EAAKxC,GAKjB,OAJAwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACJwC,EAaT,SAAS9B,EAAI8B,EAAK8B,EAAGC,EAAGK,EAAGC,GAKzB,OAJArC,EAAI,GAAK8B,EACT9B,EAAI,GAAK+B,EACT/B,EAAI,GAAKoC,EACTpC,EAAI,GAAKqC,EACFrC,EAWT,SAASX,EAAIW,EAAKxC,EAAGC,GAKnB,OAJAuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GACXuC,EAWT,SAASV,EAASU,EAAKxC,EAAGC,GAKxB,OAJAuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GACXuC,EAWT,SAASxB,EAASwB,EAAKxC,EAAGC,GAKxB,OAJAuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GACXuC,EAWT,SAAS4F,EAAO5F,EAAKxC,EAAGC,GAKtB,OAJAuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GACXuC,EAUT,SAAS6F,EAAK7F,EAAKxC,GAKjB,OAJAwC,EAAI,GAAK5C,KAAKyI,KAAKrI,EAAE,IACrBwC,EAAI,GAAK5C,KAAKyI,KAAKrI,EAAE,IACrBwC,EAAI,GAAK5C,KAAKyI,KAAKrI,EAAE,IACrBwC,EAAI,GAAK5C,KAAKyI,KAAKrI,EAAE,IACdwC,EAUT,SAAS8F,EAAM9F,EAAKxC,GAKlB,OAJAwC,EAAI,GAAK5C,KAAK0I,MAAMtI,EAAE,IACtBwC,EAAI,GAAK5C,KAAK0I,MAAMtI,EAAE,IACtBwC,EAAI,GAAK5C,KAAK0I,MAAMtI,EAAE,IACtBwC,EAAI,GAAK5C,KAAK0I,MAAMtI,EAAE,IACfwC,EAWT,SAAS+F,EAAI/F,EAAKxC,EAAGC,GAKnB,OAJAuC,EAAI,GAAK5C,KAAK2I,IAAIvI,EAAE,GAAIC,EAAE,IAC1BuC,EAAI,GAAK5C,KAAK2I,IAAIvI,EAAE,GAAIC,EAAE,IAC1BuC,EAAI,GAAK5C,KAAK2I,IAAIvI,EAAE,GAAIC,EAAE,IAC1BuC,EAAI,GAAK5C,KAAK2I,IAAIvI,EAAE,GAAIC,EAAE,IACnBuC,EAWT,SAASrC,EAAIqC,EAAKxC,EAAGC,GAKnB,OAJAuC,EAAI,GAAK5C,KAAKO,IAAIH,EAAE,GAAIC,EAAE,IAC1BuC,EAAI,GAAK5C,KAAKO,IAAIH,EAAE,GAAIC,EAAE,IAC1BuC,EAAI,GAAK5C,KAAKO,IAAIH,EAAE,GAAIC,EAAE,IAC1BuC,EAAI,GAAK5C,KAAKO,IAAIH,EAAE,GAAIC,EAAE,IACnBuC,EAUT,SAASgG,EAAMhG,EAAKxC,GAKlB,OAJAwC,EAAI,GAAK5C,KAAK4I,MAAMxI,EAAE,IACtBwC,EAAI,GAAK5C,KAAK4I,MAAMxI,EAAE,IACtBwC,EAAI,GAAK5C,KAAK4I,MAAMxI,EAAE,IACtBwC,EAAI,GAAK5C,KAAK4I,MAAMxI,EAAE,IACfwC,EAWT,SAASrB,EAAMqB,EAAKxC,EAAGC,GAKrB,OAJAuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EACTuC,EAYT,SAASiG,EAAYjG,EAAKxC,EAAGC,EAAGkB,GAK9B,OAJAqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EAChBqB,EAUT,SAASkG,EAAS1I,EAAGC,GACnB,IAAIqE,EAAIrE,EAAE,GAAKD,EAAE,GACbuE,EAAItE,EAAE,GAAKD,EAAE,GACb4E,EAAI3E,EAAE,GAAKD,EAAE,GACb6E,EAAI5E,EAAE,GAAKD,EAAE,GACjB,OAAOJ,KAAK8G,KAAKpC,EAAIA,EAAIC,EAAIA,EAAIK,EAAIA,EAAIC,EAAIA,GAU/C,SAAS8D,EAAgB3I,EAAGC,GAC1B,IAAIqE,EAAIrE,EAAE,GAAKD,EAAE,GACbuE,EAAItE,EAAE,GAAKD,EAAE,GACb4E,EAAI3E,EAAE,GAAKD,EAAE,GACb6E,EAAI5E,EAAE,GAAKD,EAAE,GACjB,OAAOsE,EAAIA,EAAIC,EAAIA,EAAIK,EAAIA,EAAIC,EAAIA,EASrC,SAASpR,EAAOuM,GACd,IAAIsE,EAAItE,EAAE,GACNuE,EAAIvE,EAAE,GACN4E,EAAI5E,EAAE,GACN6E,EAAI7E,EAAE,GACV,OAAOJ,KAAK8G,KAAKpC,EAAIA,EAAIC,EAAIA,EAAIK,EAAIA,EAAIC,EAAIA,GAS/C,SAAS+D,EAAc5I,GACrB,IAAIsE,EAAItE,EAAE,GACNuE,EAAIvE,EAAE,GACN4E,EAAI5E,EAAE,GACN6E,EAAI7E,EAAE,GACV,OAAOsE,EAAIA,EAAIC,EAAIA,EAAIK,EAAIA,EAAIC,EAAIA,EAUrC,SAASgE,EAAOrG,EAAKxC,GAKnB,OAJAwC,EAAI,IAAMxC,EAAE,GACZwC,EAAI,IAAMxC,EAAE,GACZwC,EAAI,IAAMxC,EAAE,GACZwC,EAAI,IAAMxC,EAAE,GACLwC,EAUT,SAASsG,EAAQtG,EAAKxC,GAKpB,OAJAwC,EAAI,GAAK,EAAMxC,EAAE,GACjBwC,EAAI,GAAK,EAAMxC,EAAE,GACjBwC,EAAI,GAAK,EAAMxC,EAAE,GACjBwC,EAAI,GAAK,EAAMxC,EAAE,GACVwC,EAUT,SAASuG,EAAUvG,EAAKxC,GACtB,IAAIsE,EAAItE,EAAE,GACNuE,EAAIvE,EAAE,GACN4E,EAAI5E,EAAE,GACN6E,EAAI7E,EAAE,GACNgI,EAAM1D,EAAIA,EAAIC,EAAIA,EAAIK,EAAIA,EAAIC,EAAIA,EAQtC,OAPImD,EAAM,IACRA,EAAM,EAAIpI,KAAK8G,KAAKsB,GACpBxF,EAAI,GAAK8B,EAAI0D,EACbxF,EAAI,GAAK+B,EAAIyD,EACbxF,EAAI,GAAKoC,EAAIoD,EACbxF,EAAI,GAAKqC,EAAImD,GAERxF,EAUT,SAASwG,EAAIhJ,EAAGC,GACd,OAAOD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAY5D,SAASiJ,EAAK1G,EAAKxC,EAAGC,EAAG9H,GACvB,IAAIyR,EAAK5J,EAAE,GACP6J,EAAK7J,EAAE,GACP8J,EAAK9J,EAAE,GACP4L,EAAK5L,EAAE,GAKX,OAJAwC,EAAI,GAAKoH,EAAKzR,GAAK8H,EAAE,GAAK2J,GAC1BpH,EAAI,GAAKqH,EAAK1R,GAAK8H,EAAE,GAAK4J,GAC1BrH,EAAI,GAAKsH,EAAK3R,GAAK8H,EAAE,GAAK6J,GAC1BtH,EAAI,GAAKoJ,EAAKzT,GAAK8H,EAAE,GAAK2L,GACnBpJ,EAUT,SAAS3C,EAAO2C,EAAKqJ,GAUnB,OATAA,EAAcA,GAAe,EAG7BrJ,EAAI,GAAKL,EAASxC,SAClB6C,EAAI,GAAKL,EAASxC,SAClB6C,EAAI,GAAKL,EAASxC,SAClB6C,EAAI,GAAKL,EAASxC,SAClBoJ,EAAUvG,EAAKA,GACfrB,EAAMqB,EAAKA,EAAKqJ,GACTrJ,EAWT,SAAS6G,EAAc7G,EAAKxC,EAAGzI,GAC7B,IAAI+M,EAAItE,EAAE,GACNuE,EAAIvE,EAAE,GACN4E,EAAI5E,EAAE,GACN6E,EAAI7E,EAAE,GAKV,OAJAwC,EAAI,GAAKjL,EAAE,GAAK+M,EAAI/M,EAAE,GAAKgN,EAAIhN,EAAE,GAAKqN,EAAIrN,EAAE,IAAMsN,EAClDrC,EAAI,GAAKjL,EAAE,GAAK+M,EAAI/M,EAAE,GAAKgN,EAAIhN,EAAE,GAAKqN,EAAIrN,EAAE,IAAMsN,EAClDrC,EAAI,GAAKjL,EAAE,GAAK+M,EAAI/M,EAAE,GAAKgN,EAAIhN,EAAE,IAAMqN,EAAIrN,EAAE,IAAMsN,EACnDrC,EAAI,GAAKjL,EAAE,GAAK+M,EAAI/M,EAAE,GAAKgN,EAAIhN,EAAE,IAAMqN,EAAIrN,EAAE,IAAMsN,EAC5CrC,EAWT,SAAS+G,EAAc/G,EAAKxC,EAAG2E,GAC7B,IAAIL,EAAItE,EAAE,GACNuE,EAAIvE,EAAE,GACN4E,EAAI5E,EAAE,GACN0K,EAAK/F,EAAE,GACPgG,EAAKhG,EAAE,GACPiG,EAAKjG,EAAE,GACPkG,EAAKlG,EAAE,GAGPmG,EAAKD,EAAKvG,EAAIqG,EAAK/F,EAAIgG,EAAKrG,EAC5BwG,EAAKF,EAAKtG,EAAIqG,EAAKtG,EAAIoG,EAAK9F,EAC5BoG,EAAKH,EAAKjG,EAAI8F,EAAKnG,EAAIoG,EAAKrG,EAC5B2G,GAAMP,EAAKpG,EAAIqG,EAAKpG,EAAIqG,EAAKhG,EAOjC,OAJApC,EAAI,GAAKsI,EAAKD,EAAKI,GAAMP,EAAKK,GAAMH,EAAKI,GAAML,EAC/CnI,EAAI,GAAKuI,EAAKF,EAAKI,GAAMN,EAAKK,GAAMN,EAAKI,GAAMF,EAC/CpI,EAAI,GAAKwI,EAAKH,EAAKI,GAAML,EAAKE,GAAMH,EAAKI,GAAML,EAC/ClI,EAAI,GAAKxC,EAAE,GACJwC,EAST,SAASb,EAAI3B,GACX,MAAO,QAAUA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,IAUpE,SAASiC,EAAYjC,EAAGC,GACtB,OAAOD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,GAUvE,SAASV,EAAOS,EAAGC,GACjB,IAAI2G,EAAK5G,EAAE,GACP6G,EAAK7G,EAAE,GACP8G,EAAK9G,EAAE,GACP+G,EAAK/G,EAAE,GACPqH,EAAKpH,EAAE,GACPqH,EAAKrH,EAAE,GACPsH,EAAKtH,EAAE,GACPuH,EAAKvH,EAAE,GACX,OAAOL,KAAKM,IAAI0G,EAAKS,IAAOlF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI0G,GAAKhH,KAAKM,IAAImH,KAAQzH,KAAKM,IAAI2G,EAAKS,IAAOnF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI2G,GAAKjH,KAAKM,IAAIoH,KAAQ1H,KAAKM,IAAI4G,EAAKS,IAAOpF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI4G,GAAKlH,KAAKM,IAAIqH,KAAQ3H,KAAKM,IAAI6G,EAAKS,IAAOrF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI6G,GAAKnH,KAAKM,IAAIsH,IAO3UvS,EAAQmL,IAAM0B,EAMd7M,EAAQoL,IAAMW,EAMd/L,EAAQkT,IAAMC,EAMbnT,EAAQiT,KAAOQ,EAMZzT,EAAQgT,QAAUU,EAMtB1T,EAAQ+S,IAAMvU,EAMXwB,EAAQ8S,OAASa,EAchB3T,EAAQ6S,QAAU,WAC9B,IAAIwD,EAAM/S,IAEV,OAAO,SAAUyH,EAAGuL,EAAQC,EAAQC,EAAOC,EAAIC,GAC7C,IAAIpY,OAAI,EACJ4B,OAAI,EAeR,IAdKoW,IACHA,EAAS,GAGNC,IACHA,EAAS,GAITrW,EADEsW,EACE7L,KAAK2I,IAAIkD,EAAQF,EAASC,EAAQxL,EAAEvM,QAEpCuM,EAAEvM,OAGHF,EAAIiY,EAAQjY,EAAI4B,EAAG5B,GAAKgY,EAC3BD,EAAI,GAAKtL,EAAEzM,GAAG+X,EAAI,GAAKtL,EAAEzM,EAAI,GAAG+X,EAAI,GAAKtL,EAAEzM,EAAI,GAAG+X,EAAI,GAAKtL,EAAEzM,EAAI,GACjEmY,EAAGJ,EAAKA,EAAKK,GACb3L,EAAEzM,GAAK+X,EAAI,GAAGtL,EAAEzM,EAAI,GAAK+X,EAAI,GAAGtL,EAAEzM,EAAI,GAAK+X,EAAI,GAAGtL,EAAEzM,EAAI,GAAK+X,EAAI,GAGnE,OAAOtL,GA1BqB,IAgCzB,SAAS9K,EAAQD,EAASL,GAEjC,aAGAlB,OAAOkE,eAAe3C,EAAS,aAAc,CAC3CiD,OAAO,IAETjD,EAAQ6W,KAAO7W,EAAQ8W,KAAO9W,EAAQ+W,KAAO/W,EAAQgX,KAAOhX,EAAQiX,KAAOjX,EAAQkX,KAAOlX,EAAQmX,MAAQnX,EAAQoX,KAAOpX,EAAQkN,cAAWjL,EAE5I,IAAIgL,EAAUtN,EAAoB,GAE9BuN,EAAWC,EAAwBF,GAEnCoK,EAAO1X,EAAoB,GAE3ByX,EAAOjK,EAAwBkK,GAE/BC,EAAS3X,EAAoB,GAE7BwX,EAAQhK,EAAwBmK,GAEhCC,EAAQ5X,EAAoB,GAE5BuX,EAAO/J,EAAwBoK,GAE/BC,EAAQ7X,EAAoB,GAE5BsX,EAAO9J,EAAwBqK,GAE/BC,EAAQ9X,EAAoB,GAE5BqX,EAAO7J,EAAwBsK,GAE/BC,EAAO/X,EAAoB,GAE3BoX,EAAO5J,EAAwBuK,GAE/BC,EAAQhY,EAAoB,GAE5BmX,EAAO3J,EAAwBwK,GAE/BC,EAAQjY,EAAoB,GAE5BkX,EAAO1J,EAAwByK,GAEnC,SAASzK,EAAwBC,GAAO,GAAIA,GAAOA,EAAIhK,WAAc,OAAOgK,EAAc,IAAIC,EAAS,GAAI,GAAW,MAAPD,EAAe,IAAK,IAAI7J,KAAO6J,EAAW3O,OAAOC,UAAUC,eAAeC,KAAKwO,EAAK7J,KAAM8J,EAAO9J,GAAO6J,EAAI7J,IAAgC,OAAtB8J,EAAOC,QAAUF,EAAYC,EAElQrN,EAAQkN,SAAWA,EACnBlN,EAAQoX,KAAOA,EACfpX,EAAQmX,MAAQA,EAChBnX,EAAQkX,KAAOA,EACflX,EAAQiX,KAAOA,EACfjX,EAAQgX,KAAOA,EACfhX,EAAQ+W,KAAOA,EACf/W,EAAQ8W,KAAOA,EACf9W,EAAQ6W,KAAOA,GA8BR,SAAS5W,EAAQD,EAASL,GAEjC,aAGAlB,OAAOkE,eAAe3C,EAAS,aAAc,CAC3CiD,OAAO,IAETjD,EAAQmL,IAAMnL,EAAQoL,SAAMnJ,EAC5BjC,EAAQsD,OAASA,EACjBtD,EAAQsL,MAAQA,EAChBtL,EAAQuL,KAAOA,EACfvL,EAAQ0L,SAAWA,EACnB1L,EAAQwL,WAAaA,EACrBxL,EAAQyL,IAAMA,EACdzL,EAAQ2L,UAAYA,EACpB3L,EAAQ4L,OAASA,EACjB5L,EAAQ6L,QAAUA,EAClB7L,EAAQ8L,YAAcA,EACtB9L,EAAQ+L,SAAWA,EACnB/L,EAAQiM,OAASA,EACjBjM,EAAQkM,MAAQA,EAChBlM,EAAQoM,aAAeA,EACvBpM,EAAQqM,YAAcA,EACtBrM,EAAQ0M,IAAMA,EACd1M,EAAQ2M,KAAOA,EACf3M,EAAQ6X,IAAMA,EACd7X,EAAQ4M,IAAMA,EACd5M,EAAQ6M,SAAWA,EACnB7M,EAAQgN,YAAcA,EACtBhN,EAAQsK,OAASA,EACjBtK,EAAQ8M,eAAiBA,EACzB9M,EAAQ+M,qBAAuBA,EAE/B,IAAIE,EAAUtN,EAAoB,GAE9BuN,EAAWC,EAAwBF,GAEvC,SAASE,EAAwBC,GAAO,GAAIA,GAAOA,EAAIhK,WAAc,OAAOgK,EAAc,IAAIC,EAAS,GAAI,GAAW,MAAPD,EAAe,IAAK,IAAI7J,KAAO6J,EAAW3O,OAAOC,UAAUC,eAAeC,KAAKwO,EAAK7J,KAAM8J,EAAO9J,GAAO6J,EAAI7J,IAAgC,OAAtB8J,EAAOC,QAAUF,EAAYC,EAYlQ,SAAS/J,IACP,IAAIiK,EAAM,IAAIL,EAAS1C,WAAW,GAKlC,OAJA+C,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,EA6BT,SAASjC,EAAMP,GACb,IAAIwC,EAAM,IAAIL,EAAS1C,WAAW,GAKlC,OAJA+C,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACJwC,EAUT,SAAShC,EAAKgC,EAAKxC,GAKjB,OAJAwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACJwC,EAST,SAAS7B,EAAS6B,GAKhB,OAJAA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,EAYT,SAAS/B,EAAWgC,EAAKC,EAAKE,EAAKC,GACjC,IAAIL,EAAM,IAAIL,EAAS1C,WAAW,GAKlC,OAJA+C,EAAI,GAAKC,EACTD,EAAI,GAAKE,EACTF,EAAI,GAAKI,EACTJ,EAAI,GAAKK,EACFL,EAaT,SAAS9B,EAAI8B,EAAKC,EAAKC,EAAKE,EAAKC,GAK/B,OAJAL,EAAI,GAAKC,EACTD,EAAI,GAAKE,EACTF,EAAI,GAAKI,EACTJ,EAAI,GAAKK,EACFL,EAUT,SAAS5B,EAAU4B,EAAKxC,GAGtB,GAAIwC,IAAQxC,EAAG,CACb,IAAI6G,EAAK7G,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKqE,OAETrE,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GAGb,OAAOwC,EAUT,SAAS3B,EAAO2B,EAAKxC,GACnB,IAAI4G,EAAK5G,EAAE,GACP6G,EAAK7G,EAAE,GACP8G,EAAK9G,EAAE,GACP+G,EAAK/G,EAAE,GAGP8D,EAAM8C,EAAKG,EAAKD,EAAKD,EAEzB,OAAK/C,GAGLA,EAAM,EAAMA,EAEZtB,EAAI,GAAKuE,EAAKjD,EACdtB,EAAI,IAAMqE,EAAK/C,EACftB,EAAI,IAAMsE,EAAKhD,EACftB,EAAI,GAAKoE,EAAK9C,EAEPtB,GATE,KAmBX,SAAS1B,EAAQ0B,EAAKxC,GAEpB,IAAI4G,EAAK5G,EAAE,GAMX,OALAwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,IAAMxC,EAAE,GACZwC,EAAI,IAAMxC,EAAE,GACZwC,EAAI,GAAKoE,EAEFpE,EAST,SAASzB,EAAYf,GACnB,OAAOA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAWhC,SAASgB,EAASwB,EAAKxC,EAAGC,GACxB,IAAI2G,EAAK5G,EAAE,GACP6G,EAAK7G,EAAE,GACP8G,EAAK9G,EAAE,GACP+G,EAAK/G,EAAE,GACPqH,EAAKpH,EAAE,GACPqH,EAAKrH,EAAE,GACPsH,EAAKtH,EAAE,GACPuH,EAAKvH,EAAE,GAKX,OAJAuC,EAAI,GAAKoE,EAAKS,EAAKP,EAAKQ,EACxB9E,EAAI,GAAKqE,EAAKQ,EAAKN,EAAKO,EACxB9E,EAAI,GAAKoE,EAAKW,EAAKT,EAAKU,EACxBhF,EAAI,GAAKqE,EAAKU,EAAKR,EAAKS,EACjBhF,EAWT,SAAStB,EAAOsB,EAAKxC,EAAGwE,GACtB,IAAIoC,EAAK5G,EAAE,GACP6G,EAAK7G,EAAE,GACP8G,EAAK9G,EAAE,GACP+G,EAAK/G,EAAE,GACPnL,EAAI+K,KAAK6E,IAAID,GACbhN,EAAIoI,KAAK8E,IAAIF,GAKjB,OAJAhC,EAAI,GAAKoE,EAAKpP,EAAIsP,EAAKjS,EACvB2N,EAAI,GAAKqE,EAAKrP,EAAIuP,EAAKlS,EACvB2N,EAAI,GAAKoE,GAAM/R,EAAIiS,EAAKtP,EACxBgL,EAAI,GAAKqE,GAAMhS,EAAIkS,EAAKvP,EACjBgL,EAWT,SAASrB,EAAMqB,EAAKxC,EAAGqE,GACrB,IAAIuC,EAAK5G,EAAE,GACP6G,EAAK7G,EAAE,GACP8G,EAAK9G,EAAE,GACP+G,EAAK/G,EAAE,GACP+M,EAAK1I,EAAE,GACP2I,EAAK3I,EAAE,GAKX,OAJA7B,EAAI,GAAKoE,EAAKmG,EACdvK,EAAI,GAAKqE,EAAKkG,EACdvK,EAAI,GAAKsE,EAAKkG,EACdxK,EAAI,GAAKuE,EAAKiG,EACPxK,EAcT,SAASnB,EAAamB,EAAKgC,GACzB,IAAI3P,EAAI+K,KAAK6E,IAAID,GACbhN,EAAIoI,KAAK8E,IAAIF,GAKjB,OAJAhC,EAAI,GAAKhL,EACTgL,EAAI,GAAK3N,EACT2N,EAAI,IAAM3N,EACV2N,EAAI,GAAKhL,EACFgL,EAcT,SAASlB,EAAYkB,EAAK6B,GAKxB,OAJA7B,EAAI,GAAK6B,EAAE,GACX7B,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK6B,EAAE,GACJ7B,EAST,SAASb,EAAI3B,GACX,MAAO,QAAUA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,IASpE,SAAS4B,EAAK5B,GACZ,OAAOJ,KAAK8G,KAAK9G,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,IAW9F,SAAS8M,EAAIG,EAAGC,EAAGC,EAAGnN,GAKpB,OAJAiN,EAAE,GAAKjN,EAAE,GAAKA,EAAE,GAChBmN,EAAE,GAAKnN,EAAE,GACTmN,EAAE,GAAKnN,EAAE,GACTmN,EAAE,GAAKnN,EAAE,GAAKiN,EAAE,GAAKE,EAAE,GAChB,CAACF,EAAGC,EAAGC,GAWhB,SAAStL,EAAIW,EAAKxC,EAAGC,GAKnB,OAJAuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GACXuC,EAWT,SAASV,EAASU,EAAKxC,EAAGC,GAKxB,OAJAuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GACXuC,EAUT,SAASP,EAAYjC,EAAGC,GACtB,OAAOD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,GAUvE,SAASV,EAAOS,EAAGC,GACjB,IAAI2G,EAAK5G,EAAE,GACP6G,EAAK7G,EAAE,GACP8G,EAAK9G,EAAE,GACP+G,EAAK/G,EAAE,GACPqH,EAAKpH,EAAE,GACPqH,EAAKrH,EAAE,GACPsH,EAAKtH,EAAE,GACPuH,EAAKvH,EAAE,GACX,OAAOL,KAAKM,IAAI0G,EAAKS,IAAOlF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI0G,GAAKhH,KAAKM,IAAImH,KAAQzH,KAAKM,IAAI2G,EAAKS,IAAOnF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI2G,GAAKjH,KAAKM,IAAIoH,KAAQ1H,KAAKM,IAAI4G,EAAKS,IAAOpF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI4G,GAAKlH,KAAKM,IAAIqH,KAAQ3H,KAAKM,IAAI6G,EAAKS,IAAOrF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI6G,GAAKnH,KAAKM,IAAIsH,IAWrV,SAASzF,EAAeS,EAAKxC,EAAGC,GAK9B,OAJAuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EACTuC,EAYT,SAASR,EAAqBQ,EAAKxC,EAAGC,EAAGkB,GAKvC,OAJAqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EAChBqB,EAOCvN,EAAQoL,IAAMW,EAMd/L,EAAQmL,IAAM0B,GAIjB,SAAS5M,EAAQD,EAASL,GAEjC,aAGAlB,OAAOkE,eAAe3C,EAAS,aAAc,CAC3CiD,OAAO,IAETjD,EAAQmL,IAAMnL,EAAQoL,SAAMnJ,EAC5BjC,EAAQsD,OAASA,EACjBtD,EAAQsL,MAAQA,EAChBtL,EAAQuL,KAAOA,EACfvL,EAAQ0L,SAAWA,EACnB1L,EAAQwL,WAAaA,EACrBxL,EAAQyL,IAAMA,EACdzL,EAAQ4L,OAASA,EACjB5L,EAAQ8L,YAAcA,EACtB9L,EAAQ+L,SAAWA,EACnB/L,EAAQiM,OAASA,EACjBjM,EAAQkM,MAAQA,EAChBlM,EAAQgM,UAAYA,EACpBhM,EAAQoM,aAAeA,EACvBpM,EAAQqM,YAAcA,EACtBrM,EAAQmM,gBAAkBA,EAC1BnM,EAAQ0M,IAAMA,EACd1M,EAAQ2M,KAAOA,EACf3M,EAAQ4M,IAAMA,EACd5M,EAAQ6M,SAAWA,EACnB7M,EAAQ8M,eAAiBA,EACzB9M,EAAQ+M,qBAAuBA,EAC/B/M,EAAQgN,YAAcA,EACtBhN,EAAQsK,OAASA,EAEjB,IAAI2C,EAAUtN,EAAoB,GAE9BuN,EAAWC,EAAwBF,GAEvC,SAASE,EAAwBC,GAAO,GAAIA,GAAOA,EAAIhK,WAAc,OAAOgK,EAAc,IAAIC,EAAS,GAAI,GAAW,MAAPD,EAAe,IAAK,IAAI7J,KAAO6J,EAAW3O,OAAOC,UAAUC,eAAeC,KAAKwO,EAAK7J,KAAM8J,EAAO9J,GAAO6J,EAAI7J,IAAgC,OAAtB8J,EAAOC,QAAUF,EAAYC,EA0BlQ,SAAS/J,IACP,IAAIiK,EAAM,IAAIL,EAAS1C,WAAW,GAOlC,OANA+C,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,EA6BT,SAASjC,EAAMP,GACb,IAAIwC,EAAM,IAAIL,EAAS1C,WAAW,GAOlC,OANA+C,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACJwC,EAUT,SAAShC,EAAKgC,EAAKxC,GAOjB,OANAwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACJwC,EAST,SAAS7B,EAAS6B,GAOhB,OANAA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,EAcT,SAAS/B,EAAWT,EAAGC,EAAGzI,EAAGC,EAAG2V,EAAIC,GAClC,IAAI7K,EAAM,IAAIL,EAAS1C,WAAW,GAOlC,OANA+C,EAAI,GAAKxC,EACTwC,EAAI,GAAKvC,EACTuC,EAAI,GAAKhL,EACTgL,EAAI,GAAK/K,EACT+K,EAAI,GAAK4K,EACT5K,EAAI,GAAK6K,EACF7K,EAeT,SAAS9B,EAAI8B,EAAKxC,EAAGC,EAAGzI,EAAGC,EAAG2V,EAAIC,GAOhC,OANA7K,EAAI,GAAKxC,EACTwC,EAAI,GAAKvC,EACTuC,EAAI,GAAKhL,EACTgL,EAAI,GAAK/K,EACT+K,EAAI,GAAK4K,EACT5K,EAAI,GAAK6K,EACF7K,EAUT,SAAS3B,EAAO2B,EAAKxC,GACnB,IAAIsN,EAAKtN,EAAE,GACPuN,EAAKvN,EAAE,GACPwN,EAAKxN,EAAE,GACPyN,EAAKzN,EAAE,GACP0N,EAAM1N,EAAE,GACR2N,EAAM3N,EAAE,GAER8D,EAAMwJ,EAAKG,EAAKF,EAAKC,EACzB,OAAK1J,GAGLA,EAAM,EAAMA,EAEZtB,EAAI,GAAKiL,EAAK3J,EACdtB,EAAI,IAAM+K,EAAKzJ,EACftB,EAAI,IAAMgL,EAAK1J,EACftB,EAAI,GAAK8K,EAAKxJ,EACdtB,EAAI,IAAMgL,EAAKG,EAAMF,EAAKC,GAAO5J,EACjCtB,EAAI,IAAM+K,EAAKG,EAAMJ,EAAKK,GAAO7J,EAC1BtB,GAVE,KAmBX,SAASzB,EAAYf,GACnB,OAAOA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAWhC,SAASgB,EAASwB,EAAKxC,EAAGC,GACxB,IAAI2G,EAAK5G,EAAE,GACP6G,EAAK7G,EAAE,GACP8G,EAAK9G,EAAE,GACP+G,EAAK/G,EAAE,GACPgH,EAAKhH,EAAE,GACPiH,EAAKjH,EAAE,GACPqH,EAAKpH,EAAE,GACPqH,EAAKrH,EAAE,GACPsH,EAAKtH,EAAE,GACPuH,EAAKvH,EAAE,GACPwH,EAAKxH,EAAE,GACPyH,EAAKzH,EAAE,GAOX,OANAuC,EAAI,GAAKoE,EAAKS,EAAKP,EAAKQ,EACxB9E,EAAI,GAAKqE,EAAKQ,EAAKN,EAAKO,EACxB9E,EAAI,GAAKoE,EAAKW,EAAKT,EAAKU,EACxBhF,EAAI,GAAKqE,EAAKU,EAAKR,EAAKS,EACxBhF,EAAI,GAAKoE,EAAKa,EAAKX,EAAKY,EAAKV,EAC7BxE,EAAI,GAAKqE,EAAKY,EAAKV,EAAKW,EAAKT,EACtBzE,EAWT,SAAStB,EAAOsB,EAAKxC,EAAGwE,GACtB,IAAIoC,EAAK5G,EAAE,GACP6G,EAAK7G,EAAE,GACP8G,EAAK9G,EAAE,GACP+G,EAAK/G,EAAE,GACPgH,EAAKhH,EAAE,GACPiH,EAAKjH,EAAE,GACPnL,EAAI+K,KAAK6E,IAAID,GACbhN,EAAIoI,KAAK8E,IAAIF,GAOjB,OANAhC,EAAI,GAAKoE,EAAKpP,EAAIsP,EAAKjS,EACvB2N,EAAI,GAAKqE,EAAKrP,EAAIuP,EAAKlS,EACvB2N,EAAI,GAAKoE,GAAM/R,EAAIiS,EAAKtP,EACxBgL,EAAI,GAAKqE,GAAMhS,EAAIkS,EAAKvP,EACxBgL,EAAI,GAAKwE,EACTxE,EAAI,GAAKyE,EACFzE,EAWT,SAASrB,EAAMqB,EAAKxC,EAAGqE,GACrB,IAAIuC,EAAK5G,EAAE,GACP6G,EAAK7G,EAAE,GACP8G,EAAK9G,EAAE,GACP+G,EAAK/G,EAAE,GACPgH,EAAKhH,EAAE,GACPiH,EAAKjH,EAAE,GACP+M,EAAK1I,EAAE,GACP2I,EAAK3I,EAAE,GAOX,OANA7B,EAAI,GAAKoE,EAAKmG,EACdvK,EAAI,GAAKqE,EAAKkG,EACdvK,EAAI,GAAKsE,EAAKkG,EACdxK,EAAI,GAAKuE,EAAKiG,EACdxK,EAAI,GAAKwE,EACTxE,EAAI,GAAKyE,EACFzE,EAWT,SAASvB,EAAUuB,EAAKxC,EAAGqE,GACzB,IAAIuC,EAAK5G,EAAE,GACP6G,EAAK7G,EAAE,GACP8G,EAAK9G,EAAE,GACP+G,EAAK/G,EAAE,GACPgH,EAAKhH,EAAE,GACPiH,EAAKjH,EAAE,GACP+M,EAAK1I,EAAE,GACP2I,EAAK3I,EAAE,GAOX,OANA7B,EAAI,GAAKoE,EACTpE,EAAI,GAAKqE,EACTrE,EAAI,GAAKsE,EACTtE,EAAI,GAAKuE,EACTvE,EAAI,GAAKoE,EAAKmG,EAAKjG,EAAKkG,EAAKhG,EAC7BxE,EAAI,GAAKqE,EAAKkG,EAAKhG,EAAKiG,EAAK/F,EACtBzE,EAcT,SAASnB,EAAamB,EAAKgC,GACzB,IAAI3P,EAAI+K,KAAK6E,IAAID,GACbhN,EAAIoI,KAAK8E,IAAIF,GAOjB,OANAhC,EAAI,GAAKhL,EACTgL,EAAI,GAAK3N,EACT2N,EAAI,IAAM3N,EACV2N,EAAI,GAAKhL,EACTgL,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,EAcT,SAASlB,EAAYkB,EAAK6B,GAOxB,OANA7B,EAAI,GAAK6B,EAAE,GACX7B,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK6B,EAAE,GACX7B,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,EAcT,SAASpB,EAAgBoB,EAAK6B,GAO5B,OANA7B,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK6B,EAAE,GACX7B,EAAI,GAAK6B,EAAE,GACJ7B,EAST,SAASb,EAAI3B,GACX,MAAO,SAAWA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,IASjG,SAAS4B,EAAK5B,GACZ,OAAOJ,KAAK8G,KAAK9G,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAK,GAW3I,SAAS6B,EAAIW,EAAKxC,EAAGC,GAOnB,OANAuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GACXuC,EAWT,SAASV,EAASU,EAAKxC,EAAGC,GAOxB,OANAuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GACXuC,EAWT,SAAST,EAAeS,EAAKxC,EAAGC,GAO9B,OANAuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EACTuC,EAYT,SAASR,EAAqBQ,EAAKxC,EAAGC,EAAGkB,GAOvC,OANAqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EAChBqB,EAUT,SAASP,EAAYjC,EAAGC,GACtB,OAAOD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,GAUzG,SAASV,EAAOS,EAAGC,GACjB,IAAI2G,EAAK5G,EAAE,GACP6G,EAAK7G,EAAE,GACP8G,EAAK9G,EAAE,GACP+G,EAAK/G,EAAE,GACPgH,EAAKhH,EAAE,GACPiH,EAAKjH,EAAE,GACPqH,EAAKpH,EAAE,GACPqH,EAAKrH,EAAE,GACPsH,EAAKtH,EAAE,GACPuH,EAAKvH,EAAE,GACPwH,EAAKxH,EAAE,GACPyH,EAAKzH,EAAE,GACX,OAAOL,KAAKM,IAAI0G,EAAKS,IAAOlF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI0G,GAAKhH,KAAKM,IAAImH,KAAQzH,KAAKM,IAAI2G,EAAKS,IAAOnF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI2G,GAAKjH,KAAKM,IAAIoH,KAAQ1H,KAAKM,IAAI4G,EAAKS,IAAOpF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI4G,GAAKlH,KAAKM,IAAIqH,KAAQ3H,KAAKM,IAAI6G,EAAKS,IAAOrF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI6G,GAAKnH,KAAKM,IAAIsH,KAAQ5H,KAAKM,IAAI8G,EAAKS,IAAOtF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI8G,GAAKpH,KAAKM,IAAIuH,KAAQ7H,KAAKM,IAAI+G,EAAKS,IAAOvF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI+G,GAAKrH,KAAKM,IAAIwH,IAOrfzS,EAAQoL,IAAMW,EAMd/L,EAAQmL,IAAM0B,GAIjB,SAAS5M,EAAQD,EAASL,GAEjC,aAGAlB,OAAOkE,eAAe3C,EAAS,aAAc,CAC3CiD,OAAO,IAETjD,EAAQmL,IAAMnL,EAAQoL,SAAMnJ,EAC5BjC,EAAQsD,OAASA,EACjBtD,EAAQsL,MAAQA,EAChBtL,EAAQuL,KAAOA,EACfvL,EAAQwL,WAAaA,EACrBxL,EAAQyL,IAAMA,EACdzL,EAAQ0L,SAAWA,EACnB1L,EAAQ2L,UAAYA,EACpB3L,EAAQ4L,OAASA,EACjB5L,EAAQ6L,QAAUA,EAClB7L,EAAQ8L,YAAcA,EACtB9L,EAAQ+L,SAAWA,EACnB/L,EAAQgM,UAAYA,EACpBhM,EAAQkM,MAAQA,EAChBlM,EAAQiM,OAASA,EACjBjM,EAAQuU,QAAUA,EAClBvU,EAAQwU,QAAUA,EAClBxU,EAAQyU,QAAUA,EAClBzU,EAAQmM,gBAAkBA,EAC1BnM,EAAQqM,YAAcA,EACtBrM,EAAQoM,aAAeA,EACvBpM,EAAQ2Y,cAAgBA,EACxB3Y,EAAQ4Y,cAAgBA,EACxB5Y,EAAQ6Y,cAAgBA,EACxB7Y,EAAQ8Y,wBAA0BA,EAClC9Y,EAAQ+Y,eAAiBA,EACzB/Y,EAAQgZ,WAAaA,EACrBhZ,EAAQiZ,YAAcA,EACtBjZ,EAAQkZ,6BAA+BA,EACvClZ,EAAQmZ,mCAAqCA,EAC7CnZ,EAAQuM,SAAWA,EACnBvM,EAAQoZ,QAAUA,EAClBpZ,EAAQqZ,YAAcA,EACtBrZ,EAAQsZ,2BAA6BA,EACrCtZ,EAAQuZ,MAAQA,EAChBvZ,EAAQwZ,OAASA,EACjBxZ,EAAQyZ,SAAWA,EACnBzZ,EAAQ0M,IAAMA,EACd1M,EAAQ2M,KAAOA,EACf3M,EAAQ4M,IAAMA,EACd5M,EAAQ6M,SAAWA,EACnB7M,EAAQ8M,eAAiBA,EACzB9M,EAAQ+M,qBAAuBA,EAC/B/M,EAAQgN,YAAcA,EACtBhN,EAAQsK,OAASA,EAEjB,IAAI2C,EAAUtN,EAAoB,GAE9BuN,EAAWC,EAAwBF,GAEvC,SAASE,EAAwBC,GAAO,GAAIA,GAAOA,EAAIhK,WAAc,OAAOgK,EAAc,IAAIC,EAAS,GAAI,GAAW,MAAPD,EAAe,IAAK,IAAI7J,KAAO6J,EAAW3O,OAAOC,UAAUC,eAAeC,KAAKwO,EAAK7J,KAAM8J,EAAO9J,GAAO6J,EAAI7J,IAAgC,OAAtB8J,EAAOC,QAAUF,EAAYC,EAYlQ,SAAS/J,IACP,IAAIiK,EAAM,IAAIL,EAAS1C,WAAW,IAiBlC,OAhBA+C,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACHA,EA6BT,SAASjC,EAAMP,GACb,IAAIwC,EAAM,IAAIL,EAAS1C,WAAW,IAiBlC,OAhBA+C,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACLwC,EAUT,SAAShC,EAAKgC,EAAKxC,GAiBjB,OAhBAwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACLwC,EAwBT,SAAS/B,EAAWgC,EAAKC,EAAKC,EAAKgM,EAAK/L,EAAKC,EAAKC,EAAK8L,EAAK7L,EAAKC,EAAKC,EAAK4L,EAAKC,EAAKC,EAAKC,EAAKC,GAC7F,IAAIzM,EAAM,IAAIL,EAAS1C,WAAW,IAiBlC,OAhBA+C,EAAI,GAAKC,EACTD,EAAI,GAAKE,EACTF,EAAI,GAAKG,EACTH,EAAI,GAAKmM,EACTnM,EAAI,GAAKI,EACTJ,EAAI,GAAKK,EACTL,EAAI,GAAKM,EACTN,EAAI,GAAKoM,EACTpM,EAAI,GAAKO,EACTP,EAAI,GAAKQ,EACTR,EAAI,IAAMS,EACVT,EAAI,IAAMqM,EACVrM,EAAI,IAAMsM,EACVtM,EAAI,IAAMuM,EACVvM,EAAI,IAAMwM,EACVxM,EAAI,IAAMyM,EACHzM,EAyBT,SAAS9B,EAAI8B,EAAKC,EAAKC,EAAKC,EAAKgM,EAAK/L,EAAKC,EAAKC,EAAK8L,EAAK7L,EAAKC,EAAKC,EAAK4L,EAAKC,EAAKC,EAAKC,EAAKC,GAiB3F,OAhBAzM,EAAI,GAAKC,EACTD,EAAI,GAAKE,EACTF,EAAI,GAAKG,EACTH,EAAI,GAAKmM,EACTnM,EAAI,GAAKI,EACTJ,EAAI,GAAKK,EACTL,EAAI,GAAKM,EACTN,EAAI,GAAKoM,EACTpM,EAAI,GAAKO,EACTP,EAAI,GAAKQ,EACTR,EAAI,IAAMS,EACVT,EAAI,IAAMqM,EACVrM,EAAI,IAAMsM,EACVtM,EAAI,IAAMuM,EACVvM,EAAI,IAAMwM,EACVxM,EAAI,IAAMyM,EACHzM,EAST,SAAS7B,EAAS6B,GAiBhB,OAhBAA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACHA,EAUT,SAAS5B,EAAU4B,EAAKxC,GAEtB,GAAIwC,IAAQxC,EAAG,CACb,IAAIkD,EAAMlD,EAAE,GACRmD,EAAMnD,EAAE,GACR0F,EAAM1F,EAAE,GACRoD,EAAMpD,EAAE,GACR2F,EAAM3F,EAAE,GACR4F,EAAM5F,EAAE,IAEZwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,IACXwC,EAAI,GAAKU,EACTV,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,IACXwC,EAAI,GAAKW,EACTX,EAAI,GAAKY,EACTZ,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMkD,EACVlD,EAAI,IAAMmD,EACVnD,EAAI,IAAMoD,OAEVpD,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,IACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,IACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,GACZwC,EAAI,IAAMxC,EAAE,GACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IAGd,OAAOwC,EAUT,SAAS3B,EAAO2B,EAAKxC,GACnB,IAAIqD,EAAMrD,EAAE,GACRkD,EAAMlD,EAAE,GACRmD,EAAMnD,EAAE,GACR0F,EAAM1F,EAAE,GACRsD,EAAMtD,EAAE,GACRuD,EAAMvD,EAAE,GACRoD,EAAMpD,EAAE,GACR2F,EAAM3F,EAAE,GACRwD,EAAMxD,EAAE,GACRyD,EAAMzD,EAAE,GACR0D,EAAM1D,EAAE,IACR4F,EAAM5F,EAAE,IACR6F,EAAM7F,EAAE,IACR8F,EAAM9F,EAAE,IACR+F,EAAM/F,EAAE,IACRgG,EAAMhG,EAAE,IAER+D,EAAMV,EAAME,EAAML,EAAMI,EACxBK,EAAMN,EAAMD,EAAMD,EAAMG,EACxBU,EAAMX,EAAMsC,EAAMD,EAAMpC,EACxB2C,EAAM/C,EAAME,EAAMD,EAAMI,EACxB2C,EAAMhD,EAAMyC,EAAMD,EAAMnC,EACxB4C,EAAMhD,EAAMwC,EAAMD,EAAMtC,EACxBgD,EAAM5C,EAAMsC,EAAMrC,EAAMoC,EACxBQ,EAAM7C,EAAMuC,EAAMrC,EAAMmC,EACxBS,EAAM9C,EAAMwC,EAAMJ,EAAMC,EACxBU,EAAM9C,EAAMsC,EAAMrC,EAAMoC,EACxB7B,EAAMR,EAAMuC,EAAMJ,EAAME,EACxBlC,EAAMF,EAAMsC,EAAMJ,EAAMG,EAGxBjC,EAAMC,EAAMH,EAAMD,EAAMM,EAAMD,EAAMuC,EAAMN,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EAE5E,OAAKtC,GAGLA,EAAM,EAAMA,EAEZtB,EAAI,IAAMe,EAAMK,EAAMR,EAAMa,EAAM0B,EAAMY,GAAOzC,EAC/CtB,EAAI,IAAMW,EAAMc,EAAMf,EAAMU,EAAM8B,EAAMa,GAAOzC,EAC/CtB,EAAI,IAAMsD,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,GAAOnC,EAC/CtB,EAAI,IAAMkB,EAAMwC,EAAMzC,EAAM0C,EAAMP,EAAMK,GAAOnC,EAC/CtB,EAAI,IAAMY,EAAMkD,EAAMhD,EAAMM,EAAM+B,EAAMU,GAAOvC,EAC/CtB,EAAI,IAAMa,EAAMO,EAAMT,EAAMmD,EAAMZ,EAAMW,GAAOvC,EAC/CtB,EAAI,IAAMuD,EAAM/B,EAAM6B,EAAMM,EAAMH,EAAMrC,GAAOG,EAC/CtB,EAAI,IAAMgB,EAAM2C,EAAMzC,EAAMM,EAAM4B,EAAMjC,GAAOG,EAC/CtB,EAAI,IAAMc,EAAMW,EAAMV,EAAM+C,EAAMX,EAAMS,GAAOtC,EAC/CtB,EAAI,IAAMU,EAAMoD,EAAMjD,EAAMY,EAAMyB,EAAMU,GAAOtC,EAC/CtB,EAAI,KAAOqD,EAAMK,EAAMJ,EAAM9B,EAAMgC,EAAMjC,GAAOD,EAChDtB,EAAI,KAAOiB,EAAMO,EAAMR,EAAM0C,EAAMN,EAAM7B,GAAOD,EAChDtB,EAAI,KAAOe,EAAM8C,EAAM/C,EAAMiD,EAAMnD,EAAMgD,GAAOtC,EAChDtB,EAAI,KAAOa,EAAMkD,EAAMrD,EAAMmD,EAAMlD,EAAMiD,GAAOtC,EAChDtB,EAAI,KAAOsD,EAAMnC,EAAMkC,EAAMI,EAAMF,EAAMhC,GAAOD,EAChDtB,EAAI,KAAOgB,EAAMyC,EAAMxC,EAAME,EAAMD,EAAMK,GAAOD,EAEzCtB,GArBE,KA+BX,SAAS1B,EAAQ0B,EAAKxC,GACpB,IAAIqD,EAAMrD,EAAE,GACRkD,EAAMlD,EAAE,GACRmD,EAAMnD,EAAE,GACR0F,EAAM1F,EAAE,GACRsD,EAAMtD,EAAE,GACRuD,EAAMvD,EAAE,GACRoD,EAAMpD,EAAE,GACR2F,EAAM3F,EAAE,GACRwD,EAAMxD,EAAE,GACRyD,EAAMzD,EAAE,GACR0D,EAAM1D,EAAE,IACR4F,EAAM5F,EAAE,IACR6F,EAAM7F,EAAE,IACR8F,EAAM9F,EAAE,IACR+F,EAAM/F,EAAE,IACRgG,EAAMhG,EAAE,IAkBZ,OAhBAwC,EAAI,GAAKe,GAAOG,EAAMsC,EAAMJ,EAAMG,GAAOtC,GAAOL,EAAM4C,EAAML,EAAMI,GAAOD,GAAO1C,EAAMwC,EAAMD,EAAMjC,GAClGlB,EAAI,KAAOU,GAAOQ,EAAMsC,EAAMJ,EAAMG,GAAOtC,GAAON,EAAM6C,EAAMN,EAAMK,GAAOD,GAAO3C,EAAMyC,EAAMF,EAAMhC,IACpGlB,EAAI,GAAKU,GAAOE,EAAM4C,EAAML,EAAMI,GAAOxC,GAAOJ,EAAM6C,EAAMN,EAAMK,GAAOD,GAAO3C,EAAMwC,EAAMD,EAAMtC,GAClGZ,EAAI,KAAOU,GAAOE,EAAMwC,EAAMD,EAAMjC,GAAOH,GAAOJ,EAAMyC,EAAMF,EAAMhC,GAAOD,GAAON,EAAMwC,EAAMD,EAAMtC,IACpGZ,EAAI,KAAOc,GAAOI,EAAMsC,EAAMJ,EAAMG,GAAOvC,GAAOJ,EAAM4C,EAAML,EAAMI,GAAOF,GAAOzC,EAAMwC,EAAMD,EAAMjC,IACpGlB,EAAI,GAAKa,GAAOK,EAAMsC,EAAMJ,EAAMG,GAAOvC,GAAOL,EAAM6C,EAAMN,EAAMK,GAAOF,GAAO1C,EAAMyC,EAAMF,EAAMhC,GAClGlB,EAAI,KAAOa,GAAOD,EAAM4C,EAAML,EAAMI,GAAOzC,GAAOH,EAAM6C,EAAMN,EAAMK,GAAOF,GAAO1C,EAAMwC,EAAMD,EAAMtC,IACpGZ,EAAI,GAAKa,GAAOD,EAAMwC,EAAMD,EAAMjC,GAAOJ,GAAOH,EAAMyC,EAAMF,EAAMhC,GAAOF,GAAOL,EAAMwC,EAAMD,EAAMtC,GAClGZ,EAAI,GAAKc,GAAOG,EAAMuC,EAAMJ,EAAME,GAAOtC,GAAOD,EAAMyC,EAAML,EAAMG,GAAOD,GAAOtC,EAAMqC,EAAMD,EAAMlC,GAClGjB,EAAI,KAAOa,GAAOI,EAAMuC,EAAMJ,EAAME,GAAOtC,GAAON,EAAM8C,EAAMN,EAAMI,GAAOD,GAAO3C,EAAM0C,EAAMF,EAAMjC,IACpGjB,EAAI,IAAMa,GAAOE,EAAMyC,EAAML,EAAMG,GAAOxC,GAAOJ,EAAM8C,EAAMN,EAAMI,GAAOD,GAAO3C,EAAMyC,EAAMD,EAAMnC,GACnGf,EAAI,MAAQa,GAAOE,EAAMqC,EAAMD,EAAMlC,GAAOH,GAAOJ,EAAM0C,EAAMF,EAAMjC,GAAOD,GAAON,EAAMyC,EAAMD,EAAMnC,IACrGf,EAAI,MAAQc,GAAOG,EAAMsC,EAAMrC,EAAMoC,GAAOtC,GAAOD,EAAMwC,EAAM3C,EAAM0C,GAAOD,GAAOtC,EAAMG,EAAMN,EAAMK,IACrGjB,EAAI,IAAMa,GAAOI,EAAMsC,EAAMrC,EAAMoC,GAAOtC,GAAON,EAAM6C,EAAM5C,EAAM2C,GAAOD,GAAO3C,EAAMQ,EAAMP,EAAMM,GACnGjB,EAAI,MAAQa,GAAOE,EAAMwC,EAAM3C,EAAM0C,GAAOxC,GAAOJ,EAAM6C,EAAM5C,EAAM2C,GAAOD,GAAO3C,EAAME,EAAMD,EAAMI,IACrGf,EAAI,IAAMa,GAAOE,EAAMG,EAAMN,EAAMK,GAAOH,GAAOJ,EAAMQ,EAAMP,EAAMM,GAAOD,GAAON,EAAME,EAAMD,EAAMI,GAC5Ff,EAST,SAASzB,EAAYf,GACnB,IAAIqD,EAAMrD,EAAE,GACRkD,EAAMlD,EAAE,GACRmD,EAAMnD,EAAE,GACR0F,EAAM1F,EAAE,GACRsD,EAAMtD,EAAE,GACRuD,EAAMvD,EAAE,GACRoD,EAAMpD,EAAE,GACR2F,EAAM3F,EAAE,GACRwD,EAAMxD,EAAE,GACRyD,EAAMzD,EAAE,GACR0D,EAAM1D,EAAE,IACR4F,EAAM5F,EAAE,IACR6F,EAAM7F,EAAE,IACR8F,EAAM9F,EAAE,IACR+F,EAAM/F,EAAE,IACRgG,EAAMhG,EAAE,IAER+D,EAAMV,EAAME,EAAML,EAAMI,EACxBK,EAAMN,EAAMD,EAAMD,EAAMG,EACxBU,EAAMX,EAAMsC,EAAMD,EAAMpC,EACxB2C,EAAM/C,EAAME,EAAMD,EAAMI,EACxB2C,EAAMhD,EAAMyC,EAAMD,EAAMnC,EACxB4C,EAAMhD,EAAMwC,EAAMD,EAAMtC,EACxBgD,EAAM5C,EAAMsC,EAAMrC,EAAMoC,EACxBQ,EAAM7C,EAAMuC,EAAMrC,EAAMmC,EACxBS,EAAM9C,EAAMwC,EAAMJ,EAAMC,EACxBU,EAAM9C,EAAMsC,EAAMrC,EAAMoC,EACxB7B,EAAMR,EAAMuC,EAAMJ,EAAME,EACxBlC,EAAMF,EAAMsC,EAAMJ,EAAMG,EAG5B,OAAOhC,EAAMH,EAAMD,EAAMM,EAAMD,EAAMuC,EAAMN,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EAW3E,SAASpF,EAASwB,EAAKxC,EAAGC,GACxB,IAAIoD,EAAMrD,EAAE,GACRkD,EAAMlD,EAAE,GACRmD,EAAMnD,EAAE,GACR0F,EAAM1F,EAAE,GACRsD,EAAMtD,EAAE,GACRuD,EAAMvD,EAAE,GACRoD,EAAMpD,EAAE,GACR2F,EAAM3F,EAAE,GACRwD,EAAMxD,EAAE,GACRyD,EAAMzD,EAAE,GACR0D,EAAM1D,EAAE,IACR4F,EAAM5F,EAAE,IACR6F,EAAM7F,EAAE,IACR8F,EAAM9F,EAAE,IACR+F,EAAM/F,EAAE,IACRgG,EAAMhG,EAAE,IAGRqH,EAAKpH,EAAE,GACPqH,EAAKrH,EAAE,GACPsH,EAAKtH,EAAE,GACPuH,EAAKvH,EAAE,GAuBX,OAtBAuC,EAAI,GAAK6E,EAAKhE,EAAMiE,EAAKhE,EAAMiE,EAAK/D,EAAMgE,EAAK3B,EAC/CrD,EAAI,GAAK6E,EAAKnE,EAAMoE,EAAK/D,EAAMgE,EAAK9D,EAAM+D,EAAK1B,EAC/CtD,EAAI,GAAK6E,EAAKlE,EAAMmE,EAAKlE,EAAMmE,EAAK7D,EAAM8D,EAAKzB,EAC/CvD,EAAI,GAAK6E,EAAK3B,EAAM4B,EAAK3B,EAAM4B,EAAK3B,EAAM4B,EAAKxB,EAE/CqB,EAAKpH,EAAE,GAAGqH,EAAKrH,EAAE,GAAGsH,EAAKtH,EAAE,GAAGuH,EAAKvH,EAAE,GACrCuC,EAAI,GAAK6E,EAAKhE,EAAMiE,EAAKhE,EAAMiE,EAAK/D,EAAMgE,EAAK3B,EAC/CrD,EAAI,GAAK6E,EAAKnE,EAAMoE,EAAK/D,EAAMgE,EAAK9D,EAAM+D,EAAK1B,EAC/CtD,EAAI,GAAK6E,EAAKlE,EAAMmE,EAAKlE,EAAMmE,EAAK7D,EAAM8D,EAAKzB,EAC/CvD,EAAI,GAAK6E,EAAK3B,EAAM4B,EAAK3B,EAAM4B,EAAK3B,EAAM4B,EAAKxB,EAE/CqB,EAAKpH,EAAE,GAAGqH,EAAKrH,EAAE,GAAGsH,EAAKtH,EAAE,IAAIuH,EAAKvH,EAAE,IACtCuC,EAAI,GAAK6E,EAAKhE,EAAMiE,EAAKhE,EAAMiE,EAAK/D,EAAMgE,EAAK3B,EAC/CrD,EAAI,GAAK6E,EAAKnE,EAAMoE,EAAK/D,EAAMgE,EAAK9D,EAAM+D,EAAK1B,EAC/CtD,EAAI,IAAM6E,EAAKlE,EAAMmE,EAAKlE,EAAMmE,EAAK7D,EAAM8D,EAAKzB,EAChDvD,EAAI,IAAM6E,EAAK3B,EAAM4B,EAAK3B,EAAM4B,EAAK3B,EAAM4B,EAAKxB,EAEhDqB,EAAKpH,EAAE,IAAIqH,EAAKrH,EAAE,IAAIsH,EAAKtH,EAAE,IAAIuH,EAAKvH,EAAE,IACxCuC,EAAI,IAAM6E,EAAKhE,EAAMiE,EAAKhE,EAAMiE,EAAK/D,EAAMgE,EAAK3B,EAChDrD,EAAI,IAAM6E,EAAKnE,EAAMoE,EAAK/D,EAAMgE,EAAK9D,EAAM+D,EAAK1B,EAChDtD,EAAI,IAAM6E,EAAKlE,EAAMmE,EAAKlE,EAAMmE,EAAK7D,EAAM8D,EAAKzB,EAChDvD,EAAI,IAAM6E,EAAK3B,EAAM4B,EAAK3B,EAAM4B,EAAK3B,EAAM4B,EAAKxB,EACzCxD,EAWT,SAASvB,EAAUuB,EAAKxC,EAAGqE,GACzB,IAAIC,EAAID,EAAE,GACNE,EAAIF,EAAE,GACNO,EAAIP,EAAE,GACNhB,OAAM,EACNH,OAAM,EACNC,OAAM,EACNuC,OAAM,EACNpC,OAAM,EACNC,OAAM,EACNH,OAAM,EACNuC,OAAM,EACNnC,OAAM,EACNC,OAAM,EACNC,OAAM,EACNkC,OAAM,EAsBV,OApBI5F,IAAMwC,GACRA,EAAI,IAAMxC,EAAE,GAAKsE,EAAItE,EAAE,GAAKuE,EAAIvE,EAAE,GAAK4E,EAAI5E,EAAE,IAC7CwC,EAAI,IAAMxC,EAAE,GAAKsE,EAAItE,EAAE,GAAKuE,EAAIvE,EAAE,GAAK4E,EAAI5E,EAAE,IAC7CwC,EAAI,IAAMxC,EAAE,GAAKsE,EAAItE,EAAE,GAAKuE,EAAIvE,EAAE,IAAM4E,EAAI5E,EAAE,IAC9CwC,EAAI,IAAMxC,EAAE,GAAKsE,EAAItE,EAAE,GAAKuE,EAAIvE,EAAE,IAAM4E,EAAI5E,EAAE,MAE9CqD,EAAMrD,EAAE,GAAGkD,EAAMlD,EAAE,GAAGmD,EAAMnD,EAAE,GAAG0F,EAAM1F,EAAE,GACzCsD,EAAMtD,EAAE,GAAGuD,EAAMvD,EAAE,GAAGoD,EAAMpD,EAAE,GAAG2F,EAAM3F,EAAE,GACzCwD,EAAMxD,EAAE,GAAGyD,EAAMzD,EAAE,GAAG0D,EAAM1D,EAAE,IAAI4F,EAAM5F,EAAE,IAE1CwC,EAAI,GAAKa,EAAIb,EAAI,GAAKU,EAAIV,EAAI,GAAKW,EAAIX,EAAI,GAAKkD,EAChDlD,EAAI,GAAKc,EAAId,EAAI,GAAKe,EAAIf,EAAI,GAAKY,EAAIZ,EAAI,GAAKmD,EAChDnD,EAAI,GAAKgB,EAAIhB,EAAI,GAAKiB,EAAIjB,EAAI,IAAMkB,EAAIlB,EAAI,IAAMoD,EAElDpD,EAAI,IAAMa,EAAMiB,EAAIhB,EAAMiB,EAAIf,EAAMoB,EAAI5E,EAAE,IAC1CwC,EAAI,IAAMU,EAAMoB,EAAIf,EAAMgB,EAAId,EAAMmB,EAAI5E,EAAE,IAC1CwC,EAAI,IAAMW,EAAMmB,EAAIlB,EAAMmB,EAAIb,EAAMkB,EAAI5E,EAAE,IAC1CwC,EAAI,IAAMkD,EAAMpB,EAAIqB,EAAMpB,EAAIqB,EAAMhB,EAAI5E,EAAE,KAGrCwC,EAWT,SAASrB,EAAMqB,EAAKxC,EAAGqE,GACrB,IAAIC,EAAID,EAAE,GACNE,EAAIF,EAAE,GACNO,EAAIP,EAAE,GAkBV,OAhBA7B,EAAI,GAAKxC,EAAE,GAAKsE,EAChB9B,EAAI,GAAKxC,EAAE,GAAKsE,EAChB9B,EAAI,GAAKxC,EAAE,GAAKsE,EAChB9B,EAAI,GAAKxC,EAAE,GAAKsE,EAChB9B,EAAI,GAAKxC,EAAE,GAAKuE,EAChB/B,EAAI,GAAKxC,EAAE,GAAKuE,EAChB/B,EAAI,GAAKxC,EAAE,GAAKuE,EAChB/B,EAAI,GAAKxC,EAAE,GAAKuE,EAChB/B,EAAI,GAAKxC,EAAE,GAAK4E,EAChBpC,EAAI,GAAKxC,EAAE,GAAK4E,EAChBpC,EAAI,IAAMxC,EAAE,IAAM4E,EAClBpC,EAAI,IAAMxC,EAAE,IAAM4E,EAClBpC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACLwC,EAYT,SAAStB,EAAOsB,EAAKxC,EAAGwE,EAAK0K,GAC3B,IAAI5K,EAAI4K,EAAK,GACT3K,EAAI2K,EAAK,GACTtK,EAAIsK,EAAK,GACTlH,EAAMpI,KAAK8G,KAAKpC,EAAIA,EAAIC,EAAIA,EAAIK,EAAIA,GACpC/P,OAAI,EACJ2C,OAAI,EACJW,OAAI,EACJkL,OAAM,EACNH,OAAM,EACNC,OAAM,EACNuC,OAAM,EACNpC,OAAM,EACNC,OAAM,EACNH,OAAM,EACNuC,OAAM,EACNnC,OAAM,EACNC,OAAM,EACNC,OAAM,EACNkC,OAAM,EACN7B,OAAM,EACNJ,OAAM,EACNK,OAAM,EACNC,OAAM,EACNL,OAAM,EACNM,OAAM,EACNC,OAAM,EACNN,OAAM,EACNO,OAAM,EAEV,OAAIxE,KAAKM,IAAI8H,GAAO7F,EAAS3C,QACpB,MAGTwI,EAAM,EAAIA,EACV1D,GAAK0D,EACLzD,GAAKyD,EACLpD,GAAKoD,EAELnT,EAAI+K,KAAK6E,IAAID,GACbhN,EAAIoI,KAAK8E,IAAIF,GACbrM,EAAI,EAAIX,EAER6L,EAAMrD,EAAE,GAAGkD,EAAMlD,EAAE,GAAGmD,EAAMnD,EAAE,GAAG0F,EAAM1F,EAAE,GACzCsD,EAAMtD,EAAE,GAAGuD,EAAMvD,EAAE,GAAGoD,EAAMpD,EAAE,GAAG2F,EAAM3F,EAAE,GACzCwD,EAAMxD,EAAE,GAAGyD,EAAMzD,EAAE,GAAG0D,EAAM1D,EAAE,IAAI4F,EAAM5F,EAAE,IAG1C+D,EAAMO,EAAIA,EAAInM,EAAIX,EAAEmM,EAAMY,EAAID,EAAInM,EAAIyM,EAAI/P,EAAEmP,EAAMY,EAAIN,EAAInM,EAAIoM,EAAI1P,EAClEoP,EAAMK,EAAIC,EAAIpM,EAAIyM,EAAI/P,EAAE+O,EAAMW,EAAIA,EAAIpM,EAAIX,EAAE0M,EAAMU,EAAIL,EAAIpM,EAAImM,EAAIzP,EAClEsP,EAAMG,EAAIM,EAAIzM,EAAIoM,EAAI1P,EAAEgP,EAAMU,EAAIK,EAAIzM,EAAImM,EAAIzP,EAAEuP,EAAMQ,EAAIA,EAAIzM,EAAIX,EAGlEgL,EAAI,GAAKa,EAAMU,EAAMT,EAAMK,EAAMH,EAAMQ,EACvCxB,EAAI,GAAKU,EAAMa,EAAMR,EAAMI,EAAMF,EAAMO,EACvCxB,EAAI,GAAKW,EAAMY,EAAMX,EAAMO,EAAMD,EAAMM,EACvCxB,EAAI,GAAKkD,EAAM3B,EAAM4B,EAAMhC,EAAMiC,EAAM5B,EACvCxB,EAAI,GAAKa,EAAMY,EAAMX,EAAMM,EAAMJ,EAAMU,EACvC1B,EAAI,GAAKU,EAAMe,EAAMV,EAAMK,EAAMH,EAAMS,EACvC1B,EAAI,GAAKW,EAAMc,EAAMb,EAAMQ,EAAMF,EAAMQ,EACvC1B,EAAI,GAAKkD,EAAMzB,EAAM0B,EAAM/B,EAAMgC,EAAM1B,EACvC1B,EAAI,GAAKa,EAAMc,EAAMb,EAAMO,EAAML,EAAMY,EACvC5B,EAAI,GAAKU,EAAMiB,EAAMZ,EAAMM,EAAMJ,EAAMW,EACvC5B,EAAI,IAAMW,EAAMgB,EAAMf,EAAMS,EAAMH,EAAMU,EACxC5B,EAAI,IAAMkD,EAAMvB,EAAMwB,EAAM9B,EAAM+B,EAAMxB,EAEpCpE,IAAMwC,IAERA,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,KAEPwC,GAWT,SAASgH,EAAQhH,EAAKxC,EAAGwE,GACvB,IAAI3P,EAAI+K,KAAK6E,IAAID,GACbhN,EAAIoI,KAAK8E,IAAIF,GACblB,EAAMtD,EAAE,GACRuD,EAAMvD,EAAE,GACRoD,EAAMpD,EAAE,GACR2F,EAAM3F,EAAE,GACRwD,EAAMxD,EAAE,GACRyD,EAAMzD,EAAE,GACR0D,EAAM1D,EAAE,IACR4F,EAAM5F,EAAE,IAuBZ,OArBIA,IAAMwC,IAERA,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,KAIdwC,EAAI,GAAKc,EAAM9L,EAAIgM,EAAM3O,EACzB2N,EAAI,GAAKe,EAAM/L,EAAIiM,EAAM5O,EACzB2N,EAAI,GAAKY,EAAM5L,EAAIkM,EAAM7O,EACzB2N,EAAI,GAAKmD,EAAMnO,EAAIoO,EAAM/Q,EACzB2N,EAAI,GAAKgB,EAAMhM,EAAI8L,EAAMzO,EACzB2N,EAAI,GAAKiB,EAAMjM,EAAI+L,EAAM1O,EACzB2N,EAAI,IAAMkB,EAAMlM,EAAI4L,EAAMvO,EAC1B2N,EAAI,IAAMoD,EAAMpO,EAAImO,EAAM9Q,EACnB2N,EAWT,SAASiH,EAAQjH,EAAKxC,EAAGwE,GACvB,IAAI3P,EAAI+K,KAAK6E,IAAID,GACbhN,EAAIoI,KAAK8E,IAAIF,GACbnB,EAAMrD,EAAE,GACRkD,EAAMlD,EAAE,GACRmD,EAAMnD,EAAE,GACR0F,EAAM1F,EAAE,GACRwD,EAAMxD,EAAE,GACRyD,EAAMzD,EAAE,GACR0D,EAAM1D,EAAE,IACR4F,EAAM5F,EAAE,IAuBZ,OArBIA,IAAMwC,IAERA,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,KAIdwC,EAAI,GAAKa,EAAM7L,EAAIgM,EAAM3O,EACzB2N,EAAI,GAAKU,EAAM1L,EAAIiM,EAAM5O,EACzB2N,EAAI,GAAKW,EAAM3L,EAAIkM,EAAM7O,EACzB2N,EAAI,GAAKkD,EAAMlO,EAAIoO,EAAM/Q,EACzB2N,EAAI,GAAKa,EAAMxO,EAAI2O,EAAMhM,EACzBgL,EAAI,GAAKU,EAAMrO,EAAI4O,EAAMjM,EACzBgL,EAAI,IAAMW,EAAMtO,EAAI6O,EAAMlM,EAC1BgL,EAAI,IAAMkD,EAAM7Q,EAAI+Q,EAAMpO,EACnBgL,EAWT,SAASkH,EAAQlH,EAAKxC,EAAGwE,GACvB,IAAI3P,EAAI+K,KAAK6E,IAAID,GACbhN,EAAIoI,KAAK8E,IAAIF,GACbnB,EAAMrD,EAAE,GACRkD,EAAMlD,EAAE,GACRmD,EAAMnD,EAAE,GACR0F,EAAM1F,EAAE,GACRsD,EAAMtD,EAAE,GACRuD,EAAMvD,EAAE,GACRoD,EAAMpD,EAAE,GACR2F,EAAM3F,EAAE,GAuBZ,OArBIA,IAAMwC,IAERA,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,IACZwC,EAAI,IAAMxC,EAAE,KAIdwC,EAAI,GAAKa,EAAM7L,EAAI8L,EAAMzO,EACzB2N,EAAI,GAAKU,EAAM1L,EAAI+L,EAAM1O,EACzB2N,EAAI,GAAKW,EAAM3L,EAAI4L,EAAMvO,EACzB2N,EAAI,GAAKkD,EAAMlO,EAAImO,EAAM9Q,EACzB2N,EAAI,GAAKc,EAAM9L,EAAI6L,EAAMxO,EACzB2N,EAAI,GAAKe,EAAM/L,EAAI0L,EAAMrO,EACzB2N,EAAI,GAAKY,EAAM5L,EAAI2L,EAAMtO,EACzB2N,EAAI,GAAKmD,EAAMnO,EAAIkO,EAAM7Q,EAClB2N,EAcT,SAASpB,EAAgBoB,EAAK6B,GAiB5B,OAhBA7B,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM6B,EAAE,GACZ7B,EAAI,IAAM6B,EAAE,GACZ7B,EAAI,IAAM6B,EAAE,GACZ7B,EAAI,IAAM,EACHA,EAcT,SAASlB,EAAYkB,EAAK6B,GAiBxB,OAhBA7B,EAAI,GAAK6B,EAAE,GACX7B,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK6B,EAAE,GACX7B,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM6B,EAAE,GACZ7B,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACHA,EAeT,SAASnB,EAAamB,EAAKgC,EAAK0K,GAC9B,IAAI5K,EAAI4K,EAAK,GACT3K,EAAI2K,EAAK,GACTtK,EAAIsK,EAAK,GACTlH,EAAMpI,KAAK8G,KAAKpC,EAAIA,EAAIC,EAAIA,EAAIK,EAAIA,GACpC/P,OAAI,EACJ2C,OAAI,EACJW,OAAI,EAER,OAAIyH,KAAKM,IAAI8H,GAAO7F,EAAS3C,QACpB,MAGTwI,EAAM,EAAIA,EACV1D,GAAK0D,EACLzD,GAAKyD,EACLpD,GAAKoD,EAELnT,EAAI+K,KAAK6E,IAAID,GACbhN,EAAIoI,KAAK8E,IAAIF,GACbrM,EAAI,EAAIX,EAGRgL,EAAI,GAAK8B,EAAIA,EAAInM,EAAIX,EACrBgL,EAAI,GAAK+B,EAAID,EAAInM,EAAIyM,EAAI/P,EACzB2N,EAAI,GAAKoC,EAAIN,EAAInM,EAAIoM,EAAI1P,EACzB2N,EAAI,GAAK,EACTA,EAAI,GAAK8B,EAAIC,EAAIpM,EAAIyM,EAAI/P,EACzB2N,EAAI,GAAK+B,EAAIA,EAAIpM,EAAIX,EACrBgL,EAAI,GAAKoC,EAAIL,EAAIpM,EAAImM,EAAIzP,EACzB2N,EAAI,GAAK,EACTA,EAAI,GAAK8B,EAAIM,EAAIzM,EAAIoM,EAAI1P,EACzB2N,EAAI,GAAK+B,EAAIK,EAAIzM,EAAImM,EAAIzP,EACzB2N,EAAI,IAAMoC,EAAIA,EAAIzM,EAAIX,EACtBgL,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACHA,GAcT,SAASoL,EAAcpL,EAAKgC,GAC1B,IAAI3P,EAAI+K,KAAK6E,IAAID,GACbhN,EAAIoI,KAAK8E,IAAIF,GAmBjB,OAhBAhC,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAKhL,EACTgL,EAAI,GAAK3N,EACT2N,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM3N,EACV2N,EAAI,IAAMhL,EACVgL,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACHA,EAcT,SAASqL,EAAcrL,EAAKgC,GAC1B,IAAI3P,EAAI+K,KAAK6E,IAAID,GACbhN,EAAIoI,KAAK8E,IAAIF,GAmBjB,OAhBAhC,EAAI,GAAKhL,EACTgL,EAAI,GAAK,EACTA,EAAI,IAAM3N,EACV2N,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK3N,EACT2N,EAAI,GAAK,EACTA,EAAI,IAAMhL,EACVgL,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACHA,EAcT,SAASsL,EAActL,EAAKgC,GAC1B,IAAI3P,EAAI+K,KAAK6E,IAAID,GACbhN,EAAIoI,KAAK8E,IAAIF,GAmBjB,OAhBAhC,EAAI,GAAKhL,EACTgL,EAAI,GAAK3N,EACT2N,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM3N,EACV2N,EAAI,GAAKhL,EACTgL,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACHA,EAkBT,SAASuL,EAAwBvL,EAAKmC,EAAGN,GAEvC,IAAIC,EAAIK,EAAE,GACNJ,EAAII,EAAE,GACNC,EAAID,EAAE,GACNE,EAAIF,EAAE,GACNG,EAAKR,EAAIA,EACTS,EAAKR,EAAIA,EACTS,EAAKJ,EAAIA,EAETK,EAAKX,EAAIQ,EACTqK,EAAK7K,EAAIS,EACTqK,EAAK9K,EAAIU,EACTG,EAAKZ,EAAIQ,EACTsK,EAAK9K,EAAIS,EACTM,EAAKV,EAAII,EACTO,EAAKV,EAAIC,EACTU,EAAKX,EAAIE,EACTU,EAAKZ,EAAIG,EAmBb,OAjBAxC,EAAI,GAAK,GAAK2C,EAAKG,GACnB9C,EAAI,GAAK2M,EAAK1J,EACdjD,EAAI,GAAK4M,EAAK5J,EACdhD,EAAI,GAAK,EACTA,EAAI,GAAK2M,EAAK1J,EACdjD,EAAI,GAAK,GAAKyC,EAAKK,GACnB9C,EAAI,GAAK6M,EAAK9J,EACd/C,EAAI,GAAK,EACTA,EAAI,GAAK4M,EAAK5J,EACdhD,EAAI,GAAK6M,EAAK9J,EACd/C,EAAI,IAAM,GAAKyC,EAAKE,GACpB3C,EAAI,IAAM,EACVA,EAAI,IAAM6B,EAAE,GACZ7B,EAAI,IAAM6B,EAAE,GACZ7B,EAAI,IAAM6B,EAAE,GACZ7B,EAAI,IAAM,EAEHA,EAYT,SAASwL,EAAexL,EAAK8M,GAK3B,OAJA9M,EAAI,GAAK8M,EAAI,IACb9M,EAAI,GAAK8M,EAAI,IACb9M,EAAI,GAAK8M,EAAI,IAEN9M,EAaT,SAASyL,EAAWzL,EAAK8M,GACvB,IAAIzM,EAAMyM,EAAI,GACVxM,EAAMwM,EAAI,GACVV,EAAMU,EAAI,GACVtM,EAAMsM,EAAI,GACVrM,EAAMqM,EAAI,GACVT,EAAMS,EAAI,GACVP,EAAMO,EAAI,GACVN,EAAMM,EAAI,GACVL,EAAMK,EAAI,IAMd,OAJA9M,EAAI,GAAK5C,KAAK8G,KAAK7D,EAAMA,EAAMC,EAAMA,EAAM8L,EAAMA,GACjDpM,EAAI,GAAK5C,KAAK8G,KAAK1D,EAAMA,EAAMC,EAAMA,EAAM4L,EAAMA,GACjDrM,EAAI,GAAK5C,KAAK8G,KAAKqI,EAAMA,EAAMC,EAAMA,EAAMC,EAAMA,GAE1CzM,EAYT,SAAS0L,EAAY1L,EAAK8M,GAExB,IAAIC,EAAQD,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAC9BE,EAAI,EA4BR,OA1BID,EAAQ,GACVC,EAA6B,EAAzB5P,KAAK8G,KAAK6I,EAAQ,GACtB/M,EAAI,GAAK,IAAOgN,EAChBhN,EAAI,IAAM8M,EAAI,GAAKA,EAAI,IAAME,EAC7BhN,EAAI,IAAM8M,EAAI,GAAKA,EAAI,IAAME,EAC7BhN,EAAI,IAAM8M,EAAI,GAAKA,EAAI,IAAME,GACpBF,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,KACxCE,EAAiD,EAA7C5P,KAAK8G,KAAK,EAAM4I,EAAI,GAAKA,EAAI,GAAKA,EAAI,KAC1C9M,EAAI,IAAM8M,EAAI,GAAKA,EAAI,IAAME,EAC7BhN,EAAI,GAAK,IAAOgN,EAChBhN,EAAI,IAAM8M,EAAI,GAAKA,EAAI,IAAME,EAC7BhN,EAAI,IAAM8M,EAAI,GAAKA,EAAI,IAAME,GACpBF,EAAI,GAAKA,EAAI,KACtBE,EAAiD,EAA7C5P,KAAK8G,KAAK,EAAM4I,EAAI,GAAKA,EAAI,GAAKA,EAAI,KAC1C9M,EAAI,IAAM8M,EAAI,GAAKA,EAAI,IAAME,EAC7BhN,EAAI,IAAM8M,EAAI,GAAKA,EAAI,IAAME,EAC7BhN,EAAI,GAAK,IAAOgN,EAChBhN,EAAI,IAAM8M,EAAI,GAAKA,EAAI,IAAME,IAE7BA,EAAiD,EAA7C5P,KAAK8G,KAAK,EAAM4I,EAAI,IAAMA,EAAI,GAAKA,EAAI,IAC3C9M,EAAI,IAAM8M,EAAI,GAAKA,EAAI,IAAME,EAC7BhN,EAAI,IAAM8M,EAAI,GAAKA,EAAI,IAAME,EAC7BhN,EAAI,IAAM8M,EAAI,GAAKA,EAAI,IAAME,EAC7BhN,EAAI,GAAK,IAAOgN,GAGXhN,EAoBT,SAAS2L,EAA6B3L,EAAKmC,EAAGN,EAAGxP,GAE/C,IAAIyP,EAAIK,EAAE,GACNJ,EAAII,EAAE,GACNC,EAAID,EAAE,GACNE,EAAIF,EAAE,GACNG,EAAKR,EAAIA,EACTS,EAAKR,EAAIA,EACTS,EAAKJ,EAAIA,EAETK,EAAKX,EAAIQ,EACTqK,EAAK7K,EAAIS,EACTqK,EAAK9K,EAAIU,EACTG,EAAKZ,EAAIQ,EACTsK,EAAK9K,EAAIS,EACTM,EAAKV,EAAII,EACTO,EAAKV,EAAIC,EACTU,EAAKX,EAAIE,EACTU,EAAKZ,EAAIG,EACTyK,EAAK5a,EAAE,GACP6a,EAAK7a,EAAE,GACP8a,EAAK9a,EAAE,GAmBX,OAjBA2N,EAAI,IAAM,GAAK2C,EAAKG,IAAOmK,EAC3BjN,EAAI,IAAM2M,EAAK1J,GAAMgK,EACrBjN,EAAI,IAAM4M,EAAK5J,GAAMiK,EACrBjN,EAAI,GAAK,EACTA,EAAI,IAAM2M,EAAK1J,GAAMiK,EACrBlN,EAAI,IAAM,GAAKyC,EAAKK,IAAOoK,EAC3BlN,EAAI,IAAM6M,EAAK9J,GAAMmK,EACrBlN,EAAI,GAAK,EACTA,EAAI,IAAM4M,EAAK5J,GAAMmK,EACrBnN,EAAI,IAAM6M,EAAK9J,GAAMoK,EACrBnN,EAAI,KAAO,GAAKyC,EAAKE,IAAOwK,EAC5BnN,EAAI,IAAM,EACVA,EAAI,IAAM6B,EAAE,GACZ7B,EAAI,IAAM6B,EAAE,GACZ7B,EAAI,IAAM6B,EAAE,GACZ7B,EAAI,IAAM,EAEHA,EAuBT,SAAS4L,EAAmC5L,EAAKmC,EAAGN,EAAGxP,EAAG8C,GAExD,IAAI2M,EAAIK,EAAE,GACNJ,EAAII,EAAE,GACNC,EAAID,EAAE,GACNE,EAAIF,EAAE,GACNG,EAAKR,EAAIA,EACTS,EAAKR,EAAIA,EACTS,EAAKJ,EAAIA,EAETK,EAAKX,EAAIQ,EACTqK,EAAK7K,EAAIS,EACTqK,EAAK9K,EAAIU,EACTG,EAAKZ,EAAIQ,EACTsK,EAAK9K,EAAIS,EACTM,EAAKV,EAAII,EACTO,EAAKV,EAAIC,EACTU,EAAKX,EAAIE,EACTU,EAAKZ,EAAIG,EAETyK,EAAK5a,EAAE,GACP6a,EAAK7a,EAAE,GACP8a,EAAK9a,EAAE,GAEP+a,EAAKjY,EAAE,GACPkY,EAAKlY,EAAE,GACPmY,EAAKnY,EAAE,GAmBX,OAjBA6K,EAAI,IAAM,GAAK2C,EAAKG,IAAOmK,EAC3BjN,EAAI,IAAM2M,EAAK1J,GAAMgK,EACrBjN,EAAI,IAAM4M,EAAK5J,GAAMiK,EACrBjN,EAAI,GAAK,EACTA,EAAI,IAAM2M,EAAK1J,GAAMiK,EACrBlN,EAAI,IAAM,GAAKyC,EAAKK,IAAOoK,EAC3BlN,EAAI,IAAM6M,EAAK9J,GAAMmK,EACrBlN,EAAI,GAAK,EACTA,EAAI,IAAM4M,EAAK5J,GAAMmK,EACrBnN,EAAI,IAAM6M,EAAK9J,GAAMoK,EACrBnN,EAAI,KAAO,GAAKyC,EAAKE,IAAOwK,EAC5BnN,EAAI,IAAM,EACVA,EAAI,IAAM6B,EAAE,GAAKuL,GAAMpN,EAAI,GAAKoN,EAAKpN,EAAI,GAAKqN,EAAKrN,EAAI,GAAKsN,GAC5DtN,EAAI,IAAM6B,EAAE,GAAKwL,GAAMrN,EAAI,GAAKoN,EAAKpN,EAAI,GAAKqN,EAAKrN,EAAI,GAAKsN,GAC5DtN,EAAI,IAAM6B,EAAE,GAAKyL,GAAMtN,EAAI,GAAKoN,EAAKpN,EAAI,GAAKqN,EAAKrN,EAAI,IAAMsN,GAC7DtN,EAAI,IAAM,EAEHA,EAWT,SAAShB,EAASgB,EAAKmC,GACrB,IAAIL,EAAIK,EAAE,GACNJ,EAAII,EAAE,GACNC,EAAID,EAAE,GACNE,EAAIF,EAAE,GACNG,EAAKR,EAAIA,EACTS,EAAKR,EAAIA,EACTS,EAAKJ,EAAIA,EAETK,EAAKX,EAAIQ,EACTI,EAAKX,EAAIO,EACTK,EAAKZ,EAAIQ,EACTK,EAAKR,EAAIE,EACTO,EAAKT,EAAIG,EACTO,EAAKV,EAAII,EACTO,EAAKV,EAAIC,EACTU,EAAKX,EAAIE,EACTU,EAAKZ,EAAIG,EAsBb,OApBAxC,EAAI,GAAK,EAAI2C,EAAKG,EAClB9C,EAAI,GAAK0C,EAAKO,EACdjD,EAAI,GAAK4C,EAAKI,EACdhD,EAAI,GAAK,EAETA,EAAI,GAAK0C,EAAKO,EACdjD,EAAI,GAAK,EAAIyC,EAAKK,EAClB9C,EAAI,GAAK6C,EAAKE,EACd/C,EAAI,GAAK,EAETA,EAAI,GAAK4C,EAAKI,EACdhD,EAAI,GAAK6C,EAAKE,EACd/C,EAAI,IAAM,EAAIyC,EAAKE,EACnB3C,EAAI,IAAM,EAEVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EAEHA,EAeT,SAAS6L,EAAQ7L,EAAKuN,EAAMC,EAAOC,EAAQC,EAAKC,EAAMC,GACpD,IAAIC,EAAK,GAAKL,EAAQD,GAClBO,EAAK,GAAKJ,EAAMD,GAChBM,EAAK,GAAKJ,EAAOC,GAiBrB,OAhBA5N,EAAI,GAAY,EAAP2N,EAAWE,EACpB7N,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAY,EAAP2N,EAAWG,EACpB9N,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAMwN,EAAQD,GAAQM,EAC1B7N,EAAI,IAAM0N,EAAMD,GAAUK,EAC1B9N,EAAI,KAAO4N,EAAMD,GAAQI,EACzB/N,EAAI,KAAO,EACXA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM4N,EAAMD,EAAO,EAAII,EAC3B/N,EAAI,IAAM,EACHA,EAaT,SAAS8L,EAAY9L,EAAKgO,EAAMC,EAAQN,EAAMC,GAC5C,IAAIM,EAAI,EAAM9Q,KAAK+Q,IAAIH,EAAO,GAC1BD,EAAK,GAAKJ,EAAOC,GAiBrB,OAhBA5N,EAAI,GAAKkO,EAAID,EACbjO,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAKkO,EACTlO,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,KAAO4N,EAAMD,GAAQI,EACzB/N,EAAI,KAAO,EACXA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EAAI4N,EAAMD,EAAOI,EAC3B/N,EAAI,IAAM,EACHA,EAcT,SAAS+L,EAA2B/L,EAAKoO,EAAKT,EAAMC,GAClD,IAAIS,EAAQjR,KAAK+Q,IAAIC,EAAIE,UAAYlR,KAAKG,GAAK,KAC3CgR,EAAUnR,KAAK+Q,IAAIC,EAAII,YAAcpR,KAAKG,GAAK,KAC/CkR,EAAUrR,KAAK+Q,IAAIC,EAAIM,YAActR,KAAKG,GAAK,KAC/CoR,EAAWvR,KAAK+Q,IAAIC,EAAIQ,aAAexR,KAAKG,GAAK,KACjDsR,EAAS,GAAOJ,EAAUE,GAC1BG,EAAS,GAAOT,EAAQE,GAkB5B,OAhBAvO,EAAI,GAAK6O,EACT7O,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK8O,EACT9O,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,KAAQyO,EAAUE,GAAYE,EAAS,GAC3C7O,EAAI,IAAMqO,EAAQE,GAAWO,EAAS,GACtC9O,EAAI,IAAM4N,GAAOD,EAAOC,GACxB5N,EAAI,KAAO,EACXA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM4N,EAAMD,GAAQA,EAAOC,GAC/B5N,EAAI,IAAM,EACHA,EAeT,SAASgM,EAAMhM,EAAKuN,EAAMC,EAAOC,EAAQC,EAAKC,EAAMC,GAClD,IAAImB,EAAK,GAAKxB,EAAOC,GACjBwB,EAAK,GAAKvB,EAASC,GACnBK,EAAK,GAAKJ,EAAOC,GAiBrB,OAhBA5N,EAAI,IAAM,EAAI+O,EACd/O,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EAAIgP,EACdhP,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EAAI+N,EACd/N,EAAI,IAAM,EACVA,EAAI,KAAOuN,EAAOC,GAASuB,EAC3B/O,EAAI,KAAO0N,EAAMD,GAAUuB,EAC3BhP,EAAI,KAAO4N,EAAMD,GAAQI,EACzB/N,EAAI,IAAM,EACHA,EAYT,SAASiM,EAAOjM,EAAKiP,EAAKC,EAAQC,GAChC,IAAIC,OAAK,EACLC,OAAK,EACL/M,OAAK,EACLgN,OAAK,EACLC,OAAK,EACLhN,OAAK,EACLiN,OAAK,EACLC,OAAK,EACLjN,OAAK,EACLgD,OAAM,EACNkK,EAAOT,EAAI,GACXU,EAAOV,EAAI,GACXW,EAAOX,EAAI,GACXY,EAAMV,EAAG,GACTW,EAAMX,EAAG,GACTY,EAAMZ,EAAG,GACTa,EAAUd,EAAO,GACjBe,EAAUf,EAAO,GACjBgB,EAAUhB,EAAO,GAErB,OAAI9R,KAAKM,IAAIgS,EAAOM,GAAWrQ,EAAS3C,SAAWI,KAAKM,IAAIiS,EAAOM,GAAWtQ,EAAS3C,SAAWI,KAAKM,IAAIkS,EAAOM,GAAWvQ,EAAS3C,QAC7H0M,KAAKvL,SAAS6B,IAGvBwP,EAAKE,EAAOM,EACZP,EAAKE,EAAOM,EACZzN,EAAKoN,EAAOM,EAEZ1K,EAAM,EAAIpI,KAAK8G,KAAKsL,EAAKA,EAAKC,EAAKA,EAAKjN,EAAKA,GAC7CgN,GAAMhK,EACNiK,GAAMjK,EACNhD,GAAMgD,EAEN4J,EAAKU,EAAMtN,EAAKuN,EAAMN,EACtBJ,EAAKU,EAAMP,EAAKK,EAAMrN,EACtBF,EAAKuN,EAAMJ,EAAKK,EAAMN,EACtBhK,EAAMpI,KAAK8G,KAAKkL,EAAKA,EAAKC,EAAKA,EAAK/M,EAAKA,GACpCkD,GAKHA,EAAM,EAAIA,EACV4J,GAAM5J,EACN6J,GAAM7J,EACNlD,GAAMkD,IAPN4J,EAAK,EACLC,EAAK,EACL/M,EAAK,GAQPgN,EAAKG,EAAKnN,EAAKE,EAAK6M,EACpBE,EAAK/M,EAAK4M,EAAKI,EAAKlN,EACpBC,EAAKiN,EAAKH,EAAKI,EAAKL,EAEpB5J,EAAMpI,KAAK8G,KAAKoL,EAAKA,EAAKC,EAAKA,EAAKhN,EAAKA,GACpCiD,GAKHA,EAAM,EAAIA,EACV8J,GAAM9J,EACN+J,GAAM/J,EACNjD,GAAMiD,IAPN8J,EAAK,EACLC,EAAK,EACLhN,EAAK,GAQPvC,EAAI,GAAKoP,EACTpP,EAAI,GAAKsP,EACTtP,EAAI,GAAKwP,EACTxP,EAAI,GAAK,EACTA,EAAI,GAAKqP,EACTrP,EAAI,GAAKuP,EACTvP,EAAI,GAAKyP,EACTzP,EAAI,GAAK,EACTA,EAAI,GAAKsC,EACTtC,EAAI,GAAKuC,EACTvC,EAAI,IAAMwC,EACVxC,EAAI,IAAM,EACVA,EAAI,MAAQoP,EAAKM,EAAOL,EAAKM,EAAOrN,EAAKsN,GACzC5P,EAAI,MAAQsP,EAAKI,EAAOH,EAAKI,EAAOpN,EAAKqN,GACzC5P,EAAI,MAAQwP,EAAKE,EAAOD,EAAKE,EAAOnN,EAAKoN,GACzC5P,EAAI,IAAM,EAEHA,GAYT,SAASkM,EAASlM,EAAKiP,EAAK3a,EAAQ6a,GAClC,IAAIO,EAAOT,EAAI,GACXU,EAAOV,EAAI,GACXW,EAAOX,EAAI,GACXY,EAAMV,EAAG,GACTW,EAAMX,EAAG,GACTY,EAAMZ,EAAG,GAETK,EAAKE,EAAOpb,EAAO,GACnBmb,EAAKE,EAAOrb,EAAO,GACnBkO,EAAKoN,EAAOtb,EAAO,GAEnBkR,EAAMgK,EAAKA,EAAKC,EAAKA,EAAKjN,EAAKA,EAC/BgD,EAAM,IACRA,EAAM,EAAIpI,KAAK8G,KAAKsB,GACpBgK,GAAMhK,EACNiK,GAAMjK,EACNhD,GAAMgD,GAGR,IAAI4J,EAAKU,EAAMtN,EAAKuN,EAAMN,EACtBJ,EAAKU,EAAMP,EAAKK,EAAMrN,EACtBF,EAAKuN,EAAMJ,EAAKK,EAAMN,EAkB1B,OAhBAxP,EAAI,GAAKoP,EACTpP,EAAI,GAAKqP,EACTrP,EAAI,GAAKsC,EACTtC,EAAI,GAAK,EACTA,EAAI,GAAKyP,EAAKnN,EAAKE,EAAK6M,EACxBrP,EAAI,GAAKwC,EAAK4M,EAAKI,EAAKlN,EACxBtC,EAAI,GAAKwP,EAAKH,EAAKI,EAAKL,EACxBpP,EAAI,GAAK,EACTA,EAAI,GAAKwP,EACTxP,EAAI,GAAKyP,EACTzP,EAAI,IAAMwC,EACVxC,EAAI,IAAM,EACVA,EAAI,IAAM0P,EACV1P,EAAI,IAAM2P,EACV3P,EAAI,IAAM4P,EACV5P,EAAI,IAAM,EACHA,EAST,SAASb,EAAI3B,GACX,MAAO,QAAUA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,IAAM,KAAOA,EAAE,IAAM,KAAOA,EAAE,IAAM,KAAOA,EAAE,IAAM,KAAOA,EAAE,IAAM,KAAOA,EAAE,IAAM,IASlP,SAAS4B,EAAK5B,GACZ,OAAOJ,KAAK8G,KAAK9G,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,GAAI,GAAKJ,KAAK+G,IAAI3G,EAAE,IAAK,GAAKJ,KAAK+G,IAAI3G,EAAE,IAAK,GAAKJ,KAAK+G,IAAI3G,EAAE,IAAK,GAAKJ,KAAK+G,IAAI3G,EAAE,IAAK,GAAKJ,KAAK+G,IAAI3G,EAAE,IAAK,GAAKJ,KAAK+G,IAAI3G,EAAE,IAAK,IAWpV,SAAS6B,EAAIW,EAAKxC,EAAGC,GAiBnB,OAhBAuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,IAAMxC,EAAE,IAAMC,EAAE,IACpBuC,EAAI,IAAMxC,EAAE,IAAMC,EAAE,IACpBuC,EAAI,IAAMxC,EAAE,IAAMC,EAAE,IACpBuC,EAAI,IAAMxC,EAAE,IAAMC,EAAE,IACpBuC,EAAI,IAAMxC,EAAE,IAAMC,EAAE,IACpBuC,EAAI,IAAMxC,EAAE,IAAMC,EAAE,IACbuC,EAWT,SAASV,EAASU,EAAKxC,EAAGC,GAiBxB,OAhBAuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,IAAMxC,EAAE,IAAMC,EAAE,IACpBuC,EAAI,IAAMxC,EAAE,IAAMC,EAAE,IACpBuC,EAAI,IAAMxC,EAAE,IAAMC,EAAE,IACpBuC,EAAI,IAAMxC,EAAE,IAAMC,EAAE,IACpBuC,EAAI,IAAMxC,EAAE,IAAMC,EAAE,IACpBuC,EAAI,IAAMxC,EAAE,IAAMC,EAAE,IACbuC,EAWT,SAAST,EAAeS,EAAKxC,EAAGC,GAiB9B,OAhBAuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,IAAMxC,EAAE,IAAMC,EAClBuC,EAAI,IAAMxC,EAAE,IAAMC,EAClBuC,EAAI,IAAMxC,EAAE,IAAMC,EAClBuC,EAAI,IAAMxC,EAAE,IAAMC,EAClBuC,EAAI,IAAMxC,EAAE,IAAMC,EAClBuC,EAAI,IAAMxC,EAAE,IAAMC,EACXuC,EAYT,SAASR,EAAqBQ,EAAKxC,EAAGC,EAAGkB,GAiBvC,OAhBAqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,IAAMxC,EAAE,IAAMC,EAAE,IAAMkB,EAC1BqB,EAAI,IAAMxC,EAAE,IAAMC,EAAE,IAAMkB,EAC1BqB,EAAI,IAAMxC,EAAE,IAAMC,EAAE,IAAMkB,EAC1BqB,EAAI,IAAMxC,EAAE,IAAMC,EAAE,IAAMkB,EAC1BqB,EAAI,IAAMxC,EAAE,IAAMC,EAAE,IAAMkB,EAC1BqB,EAAI,IAAMxC,EAAE,IAAMC,EAAE,IAAMkB,EACnBqB,EAUT,SAASP,EAAYjC,EAAGC,GACtB,OAAOD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,IAAMD,EAAE,MAAQC,EAAE,KAAOD,EAAE,MAAQC,EAAE,KAAOD,EAAE,MAAQC,EAAE,KAAOD,EAAE,MAAQC,EAAE,KAAOD,EAAE,MAAQC,EAAE,KAAOD,EAAE,MAAQC,EAAE,IAU9R,SAASV,EAAOS,EAAGC,GACjB,IAAI2G,EAAK5G,EAAE,GACP6G,EAAK7G,EAAE,GACP8G,EAAK9G,EAAE,GACP+G,EAAK/G,EAAE,GACPgH,EAAKhH,EAAE,GACPiH,EAAKjH,EAAE,GACPkH,EAAKlH,EAAE,GACPmH,EAAKnH,EAAE,GACPoH,EAAKpH,EAAE,GACP2S,EAAK3S,EAAE,GACPsD,EAAMtD,EAAE,IACRuD,EAAMvD,EAAE,IACRoD,EAAMpD,EAAE,IACR2F,EAAM3F,EAAE,IACR4S,EAAM5S,EAAE,IACR6S,EAAM7S,EAAE,IAERqH,EAAKpH,EAAE,GACPqH,EAAKrH,EAAE,GACPsH,EAAKtH,EAAE,GACPuH,EAAKvH,EAAE,GACPwH,EAAKxH,EAAE,GACPyH,EAAKzH,EAAE,GACP0H,EAAK1H,EAAE,GACP2H,EAAK3H,EAAE,GACP4H,EAAK5H,EAAE,GACP6S,EAAK7S,EAAE,GACPgE,EAAMhE,EAAE,IACR2D,EAAM3D,EAAE,IACRiE,EAAMjE,EAAE,IACR8S,EAAM9S,EAAE,IACR+S,EAAM/S,EAAE,IACRgT,EAAMhT,EAAE,IAEZ,OAAOL,KAAKM,IAAI0G,EAAKS,IAAOlF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI0G,GAAKhH,KAAKM,IAAImH,KAAQzH,KAAKM,IAAI2G,EAAKS,IAAOnF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI2G,GAAKjH,KAAKM,IAAIoH,KAAQ1H,KAAKM,IAAI4G,EAAKS,IAAOpF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI4G,GAAKlH,KAAKM,IAAIqH,KAAQ3H,KAAKM,IAAI6G,EAAKS,IAAOrF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI6G,GAAKnH,KAAKM,IAAIsH,KAAQ5H,KAAKM,IAAI8G,EAAKS,IAAOtF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI8G,GAAKpH,KAAKM,IAAIuH,KAAQ7H,KAAKM,IAAI+G,EAAKS,IAAOvF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI+G,GAAKrH,KAAKM,IAAIwH,KAAQ9H,KAAKM,IAAIgH,EAAKS,IAAOxF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAIgH,GAAKtH,KAAKM,IAAIyH,KAAQ/H,KAAKM,IAAIiH,EAAKS,IAAOzF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAIiH,GAAKvH,KAAKM,IAAI0H,KAAQhI,KAAKM,IAAIkH,EAAKS,IAAO1F,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAIkH,GAAKxH,KAAKM,IAAI2H,KAAQjI,KAAKM,IAAIyS,EAAKG,IAAO3Q,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAIyS,GAAK/S,KAAKM,IAAI4S,KAAQlT,KAAKM,IAAIoD,EAAMW,IAAQ9B,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAIoD,GAAM1D,KAAKM,IAAI+D,KAASrE,KAAKM,IAAIqD,EAAMK,IAAQzB,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAIqD,GAAM3D,KAAKM,IAAI0D,KAAShE,KAAKM,IAAIkD,EAAMc,IAAQ/B,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAIkD,GAAMxD,KAAKM,IAAIgE,KAAStE,KAAKM,IAAIyF,EAAMoN,IAAQ5Q,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAIyF,GAAM/F,KAAKM,IAAI6S,KAASnT,KAAKM,IAAI0S,EAAMI,IAAQ7Q,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI0S,GAAMhT,KAAKM,IAAI8S,KAASpT,KAAKM,IAAI2S,EAAMI,IAAQ9Q,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI2S,GAAMjT,KAAKM,IAAI+S,IAO91Che,EAAQoL,IAAMW,EAMd/L,EAAQmL,IAAM0B,GAIjB,SAAS5M,EAAQD,EAASL,GAEjC,aAGAlB,OAAOkE,eAAe3C,EAAS,aAAc,CAC3CiD,OAAO,IAETjD,EAAQie,QAAUje,EAAQke,OAASle,EAAQme,WAAane,EAAQsK,OAAStK,EAAQgN,YAAchN,EAAQ8T,UAAY9T,EAAQ8S,OAAS9S,EAAQ2T,cAAgB3T,EAAQ+S,IAAM/S,EAAQxB,OAASwB,EAAQiU,KAAOjU,EAAQ+T,IAAM/T,EAAQkM,MAAQlM,EAAQoL,IAAMpL,EAAQ4M,IAAM5M,EAAQyL,IAAMzL,EAAQuL,KAAOvL,EAAQwL,WAAaxL,EAAQsL,WAAQrJ,EACtUjC,EAAQsD,OAASA,EACjBtD,EAAQ0L,SAAWA,EACnB1L,EAAQoe,aAAeA,EACvBpe,EAAQqe,aAAeA,EACvBre,EAAQ+L,SAAWA,EACnB/L,EAAQuU,QAAUA,EAClBvU,EAAQwU,QAAUA,EAClBxU,EAAQyU,QAAUA,EAClBzU,EAAQse,WAAaA,EACrBte,EAAQue,MAAQA,EAChBve,EAAQ4L,OAASA,EACjB5L,EAAQwe,UAAYA,EACpBxe,EAAQye,SAAWA,EACnBze,EAAQ0e,UAAYA,EACpB1e,EAAQ0M,IAAMA,EAEd,IAAIO,EAAUtN,EAAoB,GAE9BuN,EAAWC,EAAwBF,GAEnCoK,EAAO1X,EAAoB,GAE3BuX,EAAO/J,EAAwBkK,GAE/BK,EAAO/X,EAAoB,GAE3BmX,EAAO3J,EAAwBuK,GAE/BC,EAAQhY,EAAoB,GAE5BkX,EAAO1J,EAAwBwK,GAEnC,SAASxK,EAAwBC,GAAO,GAAIA,GAAOA,EAAIhK,WAAc,OAAOgK,EAAc,IAAIC,EAAS,GAAI,GAAW,MAAPD,EAAe,IAAK,IAAI7J,KAAO6J,EAAW3O,OAAOC,UAAUC,eAAeC,KAAKwO,EAAK7J,KAAM8J,EAAO9J,GAAO6J,EAAI7J,IAAgC,OAAtB8J,EAAOC,QAAUF,EAAYC,EAgClQ,SAAS/J,IACP,IAAIiK,EAAM,IAAIL,EAAS1C,WAAW,GAKlC,OAJA+C,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,EAST,SAAS7B,EAAS6B,GAKhB,OAJAA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,EAYT,SAAS6Q,EAAa7Q,EAAK0M,EAAM1K,GAC/BA,GAAY,GACZ,IAAI3P,EAAI+K,KAAK6E,IAAID,GAKjB,OAJAhC,EAAI,GAAK3N,EAAIqa,EAAK,GAClB1M,EAAI,GAAK3N,EAAIqa,EAAK,GAClB1M,EAAI,GAAK3N,EAAIqa,EAAK,GAClB1M,EAAI,GAAK5C,KAAK8E,IAAIF,GACXhC,EAgBT,SAAS8Q,EAAaM,EAAUjP,GAC9B,IAAIH,EAAwB,EAAlB5E,KAAKyL,KAAK1G,EAAE,IAClB9P,EAAI+K,KAAK6E,IAAID,EAAM,GAWvB,OAVS,GAAL3P,GACF+e,EAAS,GAAKjP,EAAE,GAAK9P,EACrB+e,EAAS,GAAKjP,EAAE,GAAK9P,EACrB+e,EAAS,GAAKjP,EAAE,GAAK9P,IAGrB+e,EAAS,GAAK,EACdA,EAAS,GAAK,EACdA,EAAS,GAAK,GAETpP,EAWT,SAASxD,EAASwB,EAAKxC,EAAGC,GACxB,IAAI2J,EAAK5J,EAAE,GACP6J,EAAK7J,EAAE,GACP8J,EAAK9J,EAAE,GACP4L,EAAK5L,EAAE,GACP+J,EAAK9J,EAAE,GACP+J,EAAK/J,EAAE,GACPgK,EAAKhK,EAAE,GACP4T,EAAK5T,EAAE,GAMX,OAJAuC,EAAI,GAAKoH,EAAKiK,EAAKjI,EAAK7B,EAAKF,EAAKI,EAAKH,EAAKE,EAC5CxH,EAAI,GAAKqH,EAAKgK,EAAKjI,EAAK5B,EAAKF,EAAKC,EAAKH,EAAKK,EAC5CzH,EAAI,GAAKsH,EAAK+J,EAAKjI,EAAK3B,EAAKL,EAAKI,EAAKH,EAAKE,EAC5CvH,EAAI,GAAKoJ,EAAKiI,EAAKjK,EAAKG,EAAKF,EAAKG,EAAKF,EAAKG,EACrCzH,EAWT,SAASgH,EAAQhH,EAAKxC,EAAGwE,GACvBA,GAAO,GAEP,IAAIoF,EAAK5J,EAAE,GACP6J,EAAK7J,EAAE,GACP8J,EAAK9J,EAAE,GACP4L,EAAK5L,EAAE,GACP+J,EAAKnK,KAAK6E,IAAID,GACdqP,EAAKjU,KAAK8E,IAAIF,GAMlB,OAJAhC,EAAI,GAAKoH,EAAKiK,EAAKjI,EAAK7B,EACxBvH,EAAI,GAAKqH,EAAKgK,EAAK/J,EAAKC,EACxBvH,EAAI,GAAKsH,EAAK+J,EAAKhK,EAAKE,EACxBvH,EAAI,GAAKoJ,EAAKiI,EAAKjK,EAAKG,EACjBvH,EAWT,SAASiH,EAAQjH,EAAKxC,EAAGwE,GACvBA,GAAO,GAEP,IAAIoF,EAAK5J,EAAE,GACP6J,EAAK7J,EAAE,GACP8J,EAAK9J,EAAE,GACP4L,EAAK5L,EAAE,GACPgK,EAAKpK,KAAK6E,IAAID,GACdqP,EAAKjU,KAAK8E,IAAIF,GAMlB,OAJAhC,EAAI,GAAKoH,EAAKiK,EAAK/J,EAAKE,EACxBxH,EAAI,GAAKqH,EAAKgK,EAAKjI,EAAK5B,EACxBxH,EAAI,GAAKsH,EAAK+J,EAAKjK,EAAKI,EACxBxH,EAAI,GAAKoJ,EAAKiI,EAAKhK,EAAKG,EACjBxH,EAWT,SAASkH,EAAQlH,EAAKxC,EAAGwE,GACvBA,GAAO,GAEP,IAAIoF,EAAK5J,EAAE,GACP6J,EAAK7J,EAAE,GACP8J,EAAK9J,EAAE,GACP4L,EAAK5L,EAAE,GACPiK,EAAKrK,KAAK6E,IAAID,GACdqP,EAAKjU,KAAK8E,IAAIF,GAMlB,OAJAhC,EAAI,GAAKoH,EAAKiK,EAAKhK,EAAKI,EACxBzH,EAAI,GAAKqH,EAAKgK,EAAKjK,EAAKK,EACxBzH,EAAI,GAAKsH,EAAK+J,EAAKjI,EAAK3B,EACxBzH,EAAI,GAAKoJ,EAAKiI,EAAK/J,EAAKG,EACjBzH,EAYT,SAAS+Q,EAAW/Q,EAAKxC,GACvB,IAAIsE,EAAItE,EAAE,GACNuE,EAAIvE,EAAE,GACN4E,EAAI5E,EAAE,GAMV,OAJAwC,EAAI,GAAK8B,EACT9B,EAAI,GAAK+B,EACT/B,EAAI,GAAKoC,EACTpC,EAAI,GAAK5C,KAAK8G,KAAK9G,KAAKM,IAAI,EAAMoE,EAAIA,EAAIC,EAAIA,EAAIK,EAAIA,IAC/CpC,EAYT,SAASgR,EAAMhR,EAAKxC,EAAGC,EAAG9H,GAGxB,IAAIyR,EAAK5J,EAAE,GACP6J,EAAK7J,EAAE,GACP8J,EAAK9J,EAAE,GACP4L,EAAK5L,EAAE,GACP+J,EAAK9J,EAAE,GACP+J,EAAK/J,EAAE,GACPgK,EAAKhK,EAAE,GACP4T,EAAK5T,EAAE,GAEP6T,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,OAAS,EACTC,OAAS,EA+Bb,OA5BAH,EAAQnK,EAAKG,EAAKF,EAAKG,EAAKF,EAAKG,EAAK2B,EAAKiI,EAEvCE,EAAQ,IACVA,GAASA,EACThK,GAAMA,EACNC,GAAMA,EACNC,GAAMA,EACN4J,GAAMA,GAGJ,EAAME,EAAQ,MAEhBD,EAAQlU,KAAKyL,KAAK0I,GAClBC,EAAQpU,KAAK6E,IAAIqP,GACjBG,EAASrU,KAAK6E,KAAK,EAAMtM,GAAK2b,GAASE,EACvCE,EAAStU,KAAK6E,IAAItM,EAAI2b,GAASE,IAI/BC,EAAS,EAAM9b,EACf+b,EAAS/b,GAGXqK,EAAI,GAAKyR,EAASrK,EAAKsK,EAASnK,EAChCvH,EAAI,GAAKyR,EAASpK,EAAKqK,EAASlK,EAChCxH,EAAI,GAAKyR,EAASnK,EAAKoK,EAASjK,EAChCzH,EAAI,GAAKyR,EAASrI,EAAKsI,EAASL,EAEzBrR,EAUT,SAAS3B,EAAO2B,EAAKxC,GACnB,IAAI4G,EAAK5G,EAAE,GACP6G,EAAK7G,EAAE,GACP8G,EAAK9G,EAAE,GACP+G,EAAK/G,EAAE,GACPgJ,EAAMpC,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,EACzCoN,EAASnL,EAAM,EAAMA,EAAM,EAQ/B,OAJAxG,EAAI,IAAMoE,EAAKuN,EACf3R,EAAI,IAAMqE,EAAKsN,EACf3R,EAAI,IAAMsE,EAAKqN,EACf3R,EAAI,GAAKuE,EAAKoN,EACP3R,EAWT,SAASiR,EAAUjR,EAAKxC,GAKtB,OAJAwC,EAAI,IAAMxC,EAAE,GACZwC,EAAI,IAAMxC,EAAE,GACZwC,EAAI,IAAMxC,EAAE,GACZwC,EAAI,GAAKxC,EAAE,GACJwC,EAcT,SAASkR,EAASlR,EAAKjL,GAGrB,IAAI6c,EAAS7c,EAAE,GAAKA,EAAE,GAAKA,EAAE,GACzB8c,OAAQ,EAEZ,GAAID,EAAS,EAEXC,EAAQzU,KAAK8G,KAAK0N,EAAS,GAC3B5R,EAAI,GAAK,GAAM6R,EACfA,EAAQ,GAAMA,EACd7R,EAAI,IAAMjL,EAAE,GAAKA,EAAE,IAAM8c,EACzB7R,EAAI,IAAMjL,EAAE,GAAKA,EAAE,IAAM8c,EACzB7R,EAAI,IAAMjL,EAAE,GAAKA,EAAE,IAAM8c,MACpB,CAEL,IAAI9gB,EAAI,EACJgE,EAAE,GAAKA,EAAE,KAAIhE,EAAI,GACjBgE,EAAE,GAAKA,EAAM,EAAJhE,EAAQA,KAAIA,EAAI,GAC7B,IAAIkB,GAAKlB,EAAI,GAAK,EACd+gB,GAAK/gB,EAAI,GAAK,EAElB8gB,EAAQzU,KAAK8G,KAAKnP,EAAM,EAAJhE,EAAQA,GAAKgE,EAAM,EAAJ9C,EAAQA,GAAK8C,EAAM,EAAJ+c,EAAQA,GAAK,GAC/D9R,EAAIjP,GAAK,GAAM8gB,EACfA,EAAQ,GAAMA,EACd7R,EAAI,IAAMjL,EAAM,EAAJ9C,EAAQ6f,GAAK/c,EAAM,EAAJ+c,EAAQ7f,IAAM4f,EACzC7R,EAAI/N,IAAM8C,EAAM,EAAJ9C,EAAQlB,GAAKgE,EAAM,EAAJhE,EAAQkB,IAAM4f,EACzC7R,EAAI8R,IAAM/c,EAAM,EAAJ+c,EAAQ/gB,GAAKgE,EAAM,EAAJhE,EAAQ+gB,IAAMD,EAG3C,OAAO7R,EAaT,SAASmR,EAAUnR,EAAK8B,EAAGC,EAAGK,GAC5B,IAAI2P,EAAY,GAAM3U,KAAKG,GAAK,IAChCuE,GAAKiQ,EACLhQ,GAAKgQ,EACL3P,GAAK2P,EAEL,IAAI9E,EAAK7P,KAAK6E,IAAIH,GACdkQ,EAAK5U,KAAK8E,IAAIJ,GACdoL,EAAK9P,KAAK6E,IAAIF,GACdkQ,EAAK7U,KAAK8E,IAAIH,GACdoL,EAAK/P,KAAK6E,IAAIG,GACd8P,EAAK9U,KAAK8E,IAAIE,GAOlB,OALApC,EAAI,GAAKiN,EAAKgF,EAAKC,EAAKF,EAAK9E,EAAKC,EAClCnN,EAAI,GAAKgS,EAAK9E,EAAKgF,EAAKjF,EAAKgF,EAAK9E,EAClCnN,EAAI,GAAKgS,EAAKC,EAAK9E,EAAKF,EAAKC,EAAKgF,EAClClS,EAAI,GAAKgS,EAAKC,EAAKC,EAAKjF,EAAKC,EAAKC,EAE3BnN,EAST,SAASb,EAAI3B,GACX,MAAO,QAAUA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,KAAOA,EAAE,GAAK,IAUxD/K,EAAQsL,MAAQuL,EAAKvL,MAYhBtL,EAAQwL,WAAaqL,EAAKrL,WAUhCxL,EAAQuL,KAAOsL,EAAKtL,KAarBvL,EAAQyL,IAAMoL,EAAKpL,IAWnBzL,EAAQ4M,IAAMiK,EAAKjK,IAMnB5M,EAAQoL,IAAMW,EAWZ/L,EAAQkM,MAAQ2K,EAAK3K,MAUvBlM,EAAQ+T,IAAM8C,EAAK9C,IAYlB/T,EAAQiU,KAAO4C,EAAK5C,KArF/B,IA6FIzV,EAASwB,EAAQxB,OAASqY,EAAKrY,OAe/BmV,GATM3T,EAAQ+S,IAAMvU,EASJwB,EAAQ2T,cAAgBkD,EAAKlD,eAgB7CG,GAVS9T,EAAQ8S,OAASa,EAUd3T,EAAQ8T,UAAY+C,EAAK/C,WASvB9T,EAAQgN,YAAc6J,EAAK7J,YAShChN,EAAQsK,OAASuM,EAAKvM,OAalBtK,EAAQme,WAAa,WACpC,IAAIuB,EAAU5I,EAAKxT,SACfqc,EAAY7I,EAAKtL,WAAW,EAAG,EAAG,GAClCoU,EAAY9I,EAAKtL,WAAW,EAAG,EAAG,GAEtC,OAAO,SAAU+B,EAAKxC,EAAGC,GACvB,IAAI+I,EAAM+C,EAAK/C,IAAIhJ,EAAGC,GACtB,OAAI+I,GAAO,SACT+C,EAAK9C,MAAM0L,EAASC,EAAW5U,GAC3B+L,EAAK/D,IAAI2M,GAAW,MAAU5I,EAAK9C,MAAM0L,EAASE,EAAW7U,GACjE+L,EAAKhD,UAAU4L,EAASA,GACxBtB,EAAa7Q,EAAKmS,EAAS/U,KAAKG,IACzByC,GACEwG,EAAM,SACfxG,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,IAEPuJ,EAAK9C,MAAM0L,EAAS3U,EAAGC,GACvBuC,EAAI,GAAKmS,EAAQ,GACjBnS,EAAI,GAAKmS,EAAQ,GACjBnS,EAAI,GAAKmS,EAAQ,GACjBnS,EAAI,GAAK,EAAIwG,EACND,EAAUvG,EAAKA,KAzBU,GAyCzBvN,EAAQke,OAAS,WAC5B,IAAI2B,EAAQvc,IACRwc,EAAQxc,IAEZ,OAAO,SAAUiK,EAAKxC,EAAGC,EAAGzI,EAAGC,EAAGU,GAKhC,OAJAqb,EAAMsB,EAAO9U,EAAGvI,EAAGU,GACnBqb,EAAMuB,EAAO9U,EAAGzI,EAAGW,GACnBqb,EAAMhR,EAAKsS,EAAOC,EAAO,EAAI5c,GAAK,EAAIA,IAE/BqK,GATmB,GAuBhBvN,EAAQie,QAAU,WAC9B,IAAI8B,EAAO7I,EAAK5T,SAEhB,OAAO,SAAUiK,EAAKyS,EAAMjF,EAAO2B,GAajC,OAZAqD,EAAK,GAAKhF,EAAM,GAChBgF,EAAK,GAAKhF,EAAM,GAChBgF,EAAK,GAAKhF,EAAM,GAEhBgF,EAAK,GAAKrD,EAAG,GACbqD,EAAK,GAAKrD,EAAG,GACbqD,EAAK,GAAKrD,EAAG,GAEbqD,EAAK,IAAMC,EAAK,GAChBD,EAAK,IAAMC,EAAK,GAChBD,EAAK,IAAMC,EAAK,GAETlM,EAAUvG,EAAKkR,EAASlR,EAAKwS,KAhBR,IAsBzB,SAAS9f,EAAQD,EAASL,GAEjC,aAGAlB,OAAOkE,eAAe3C,EAAS,aAAc,CAC3CiD,OAAO,IAETjD,EAAQ6S,QAAU7S,EAAQ8S,OAAS9S,EAAQgT,QAAUhT,EAAQiT,KAAOjT,EAAQkT,IAAMlT,EAAQoL,IAAMpL,EAAQmL,IAAMnL,EAAQ+S,SAAM9Q,EAC5HjC,EAAQsD,OAASA,EACjBtD,EAAQsL,MAAQA,EAChBtL,EAAQwL,WAAaA,EACrBxL,EAAQuL,KAAOA,EACfvL,EAAQyL,IAAMA,EACdzL,EAAQ4M,IAAMA,EACd5M,EAAQ6M,SAAWA,EACnB7M,EAAQ+L,SAAWA,EACnB/L,EAAQmT,OAASA,EACjBnT,EAAQoT,KAAOA,EACfpT,EAAQqT,MAAQA,EAChBrT,EAAQsT,IAAMA,EACdtT,EAAQkL,IAAMA,EACdlL,EAAQuT,MAAQA,EAChBvT,EAAQkM,MAAQA,EAChBlM,EAAQwT,YAAcA,EACtBxT,EAAQyT,SAAWA,EACnBzT,EAAQ0T,gBAAkBA,EAC1B1T,EAAQxB,OAASA,EACjBwB,EAAQ2T,cAAgBA,EACxB3T,EAAQ4T,OAASA,EACjB5T,EAAQ6T,QAAUA,EAClB7T,EAAQ8T,UAAYA,EACpB9T,EAAQ+T,IAAMA,EACd/T,EAAQgU,MAAQA,EAChBhU,EAAQiU,KAAOA,EACfjU,EAAQ4K,OAASA,EACjB5K,EAAQigB,cAAgBA,EACxBjgB,EAAQkgB,eAAiBA,EACzBlgB,EAAQqU,cAAgBA,EACxBrU,EAAQoU,cAAgBA,EACxBpU,EAAQ0M,IAAMA,EACd1M,EAAQgN,YAAcA,EACtBhN,EAAQsK,OAASA,EAEjB,IAAI2C,EAAUtN,EAAoB,GAE9BuN,EAAWC,EAAwBF,GAEvC,SAASE,EAAwBC,GAAO,GAAIA,GAAOA,EAAIhK,WAAc,OAAOgK,EAAc,IAAIC,EAAS,GAAI,GAAW,MAAPD,EAAe,IAAK,IAAI7J,KAAO6J,EAAW3O,OAAOC,UAAUC,eAAeC,KAAKwO,EAAK7J,KAAM8J,EAAO9J,GAAO6J,EAAI7J,IAAgC,OAAtB8J,EAAOC,QAAUF,EAAYC,EAYlQ,SAAS/J,IACP,IAAIiK,EAAM,IAAIL,EAAS1C,WAAW,GAGlC,OAFA+C,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,EA6BT,SAASjC,EAAMP,GACb,IAAIwC,EAAM,IAAIL,EAAS1C,WAAW,GAGlC,OAFA+C,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACJwC,EAUT,SAAS/B,EAAW6D,EAAGC,GACrB,IAAI/B,EAAM,IAAIL,EAAS1C,WAAW,GAGlC,OAFA+C,EAAI,GAAK8B,EACT9B,EAAI,GAAK+B,EACF/B,EAUT,SAAShC,EAAKgC,EAAKxC,GAGjB,OAFAwC,EAAI,GAAKxC,EAAE,GACXwC,EAAI,GAAKxC,EAAE,GACJwC,EAWT,SAAS9B,EAAI8B,EAAK8B,EAAGC,GAGnB,OAFA/B,EAAI,GAAK8B,EACT9B,EAAI,GAAK+B,EACF/B,EAWT,SAASX,EAAIW,EAAKxC,EAAGC,GAGnB,OAFAuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GACXuC,EAWT,SAASV,EAASU,EAAKxC,EAAGC,GAGxB,OAFAuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GACXuC,EAWT,SAASxB,EAASwB,EAAKxC,EAAGC,GAGxB,OAFAuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GACXuC,EAWT,SAAS4F,EAAO5F,EAAKxC,EAAGC,GAGtB,OAFAuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAClBuC,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GACXuC,EAUT,SAAS6F,EAAK7F,EAAKxC,GAGjB,OAFAwC,EAAI,GAAK5C,KAAKyI,KAAKrI,EAAE,IACrBwC,EAAI,GAAK5C,KAAKyI,KAAKrI,EAAE,IACdwC,EAUT,SAAS8F,EAAM9F,EAAKxC,GAGlB,OAFAwC,EAAI,GAAK5C,KAAK0I,MAAMtI,EAAE,IACtBwC,EAAI,GAAK5C,KAAK0I,MAAMtI,EAAE,IACfwC,EAWT,SAAS+F,EAAI/F,EAAKxC,EAAGC,GAGnB,OAFAuC,EAAI,GAAK5C,KAAK2I,IAAIvI,EAAE,GAAIC,EAAE,IAC1BuC,EAAI,GAAK5C,KAAK2I,IAAIvI,EAAE,GAAIC,EAAE,IACnBuC,EAWT,SAASrC,EAAIqC,EAAKxC,EAAGC,GAGnB,OAFAuC,EAAI,GAAK5C,KAAKO,IAAIH,EAAE,GAAIC,EAAE,IAC1BuC,EAAI,GAAK5C,KAAKO,IAAIH,EAAE,GAAIC,EAAE,IACnBuC,EAUT,SAASgG,EAAMhG,EAAKxC,GAGlB,OAFAwC,EAAI,GAAK5C,KAAK4I,MAAMxI,EAAE,IACtBwC,EAAI,GAAK5C,KAAK4I,MAAMxI,EAAE,IACfwC,EAWT,SAASrB,EAAMqB,EAAKxC,EAAGC,GAGrB,OAFAuC,EAAI,GAAKxC,EAAE,GAAKC,EAChBuC,EAAI,GAAKxC,EAAE,GAAKC,EACTuC,EAYT,SAASiG,EAAYjG,EAAKxC,EAAGC,EAAGkB,GAG9B,OAFAqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EACvBqB,EAAI,GAAKxC,EAAE,GAAKC,EAAE,GAAKkB,EAChBqB,EAUT,SAASkG,EAAS1I,EAAGC,GACnB,IAAIqE,EAAIrE,EAAE,GAAKD,EAAE,GACbuE,EAAItE,EAAE,GAAKD,EAAE,GACjB,OAAOJ,KAAK8G,KAAKpC,EAAIA,EAAIC,EAAIA,GAU/B,SAASoE,EAAgB3I,EAAGC,GAC1B,IAAIqE,EAAIrE,EAAE,GAAKD,EAAE,GACbuE,EAAItE,EAAE,GAAKD,EAAE,GACjB,OAAOsE,EAAIA,EAAIC,EAAIA,EASrB,SAAS9Q,EAAOuM,GACd,IAAIsE,EAAItE,EAAE,GACNuE,EAAIvE,EAAE,GACV,OAAOJ,KAAK8G,KAAKpC,EAAIA,EAAIC,EAAIA,GAS/B,SAASqE,EAAc5I,GACrB,IAAIsE,EAAItE,EAAE,GACNuE,EAAIvE,EAAE,GACV,OAAOsE,EAAIA,EAAIC,EAAIA,EAUrB,SAASsE,EAAOrG,EAAKxC,GAGnB,OAFAwC,EAAI,IAAMxC,EAAE,GACZwC,EAAI,IAAMxC,EAAE,GACLwC,EAUT,SAASsG,EAAQtG,EAAKxC,GAGpB,OAFAwC,EAAI,GAAK,EAAMxC,EAAE,GACjBwC,EAAI,GAAK,EAAMxC,EAAE,GACVwC,EAUT,SAASuG,EAAUvG,EAAKxC,GACtB,IAAIsE,EAAItE,EAAE,GACNuE,EAAIvE,EAAE,GACNgI,EAAM1D,EAAIA,EAAIC,EAAIA,EAOtB,OANIyD,EAAM,IAERA,EAAM,EAAIpI,KAAK8G,KAAKsB,GACpBxF,EAAI,GAAKxC,EAAE,GAAKgI,EAChBxF,EAAI,GAAKxC,EAAE,GAAKgI,GAEXxF,EAUT,SAASwG,EAAIhJ,EAAGC,GACd,OAAOD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAYhC,SAASgJ,EAAMzG,EAAKxC,EAAGC,GACrB,IAAI2E,EAAI5E,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAG/B,OAFAuC,EAAI,GAAKA,EAAI,GAAK,EAClBA,EAAI,GAAKoC,EACFpC,EAYT,SAAS0G,EAAK1G,EAAKxC,EAAGC,EAAG9H,GACvB,IAAIyR,EAAK5J,EAAE,GACP6J,EAAK7J,EAAE,GAGX,OAFAwC,EAAI,GAAKoH,EAAKzR,GAAK8H,EAAE,GAAK2J,GAC1BpH,EAAI,GAAKqH,EAAK1R,GAAK8H,EAAE,GAAK4J,GACnBrH,EAUT,SAAS3C,EAAO2C,EAAKrB,GACnBA,EAAQA,GAAS,EACjB,IAAIpJ,EAAwB,EAApBoK,EAASxC,SAAiBC,KAAKG,GAGvC,OAFAyC,EAAI,GAAK5C,KAAK8E,IAAI3M,GAAKoJ,EACvBqB,EAAI,GAAK5C,KAAK6E,IAAI1M,GAAKoJ,EAChBqB,EAWT,SAAS0S,EAAc1S,EAAKxC,EAAGzI,GAC7B,IAAI+M,EAAItE,EAAE,GACNuE,EAAIvE,EAAE,GAGV,OAFAwC,EAAI,GAAKjL,EAAE,GAAK+M,EAAI/M,EAAE,GAAKgN,EAC3B/B,EAAI,GAAKjL,EAAE,GAAK+M,EAAI/M,EAAE,GAAKgN,EACpB/B,EAWT,SAAS2S,EAAe3S,EAAKxC,EAAGzI,GAC9B,IAAI+M,EAAItE,EAAE,GACNuE,EAAIvE,EAAE,GAGV,OAFAwC,EAAI,GAAKjL,EAAE,GAAK+M,EAAI/M,EAAE,GAAKgN,EAAIhN,EAAE,GACjCiL,EAAI,GAAKjL,EAAE,GAAK+M,EAAI/M,EAAE,GAAKgN,EAAIhN,EAAE,GAC1BiL,EAYT,SAAS8G,EAAc9G,EAAKxC,EAAGzI,GAC7B,IAAI+M,EAAItE,EAAE,GACNuE,EAAIvE,EAAE,GAGV,OAFAwC,EAAI,GAAKjL,EAAE,GAAK+M,EAAI/M,EAAE,GAAKgN,EAAIhN,EAAE,GACjCiL,EAAI,GAAKjL,EAAE,GAAK+M,EAAI/M,EAAE,GAAKgN,EAAIhN,EAAE,GAC1BiL,EAaT,SAAS6G,EAAc7G,EAAKxC,EAAGzI,GAC7B,IAAI+M,EAAItE,EAAE,GACNuE,EAAIvE,EAAE,GAGV,OAFAwC,EAAI,GAAKjL,EAAE,GAAK+M,EAAI/M,EAAE,GAAKgN,EAAIhN,EAAE,IACjCiL,EAAI,GAAKjL,EAAE,GAAK+M,EAAI/M,EAAE,GAAKgN,EAAIhN,EAAE,IAC1BiL,EAST,SAASb,EAAI3B,GACX,MAAO,QAAUA,EAAE,GAAK,KAAOA,EAAE,GAAK,IAUxC,SAASiC,EAAYjC,EAAGC,GACtB,OAAOD,EAAE,KAAOC,EAAE,IAAMD,EAAE,KAAOC,EAAE,GAUrC,SAASV,EAAOS,EAAGC,GACjB,IAAI2G,EAAK5G,EAAE,GACP6G,EAAK7G,EAAE,GACPqH,EAAKpH,EAAE,GACPqH,EAAKrH,EAAE,GACX,OAAOL,KAAKM,IAAI0G,EAAKS,IAAOlF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI0G,GAAKhH,KAAKM,IAAImH,KAAQzH,KAAKM,IAAI2G,EAAKS,IAAOnF,EAAS3C,QAAUI,KAAKO,IAAI,EAAKP,KAAKM,IAAI2G,GAAKjH,KAAKM,IAAIoH,IAOjKrS,EAAQ+S,IAAMvU,EAMdwB,EAAQmL,IAAM0B,EAMd7M,EAAQoL,IAAMW,EAMd/L,EAAQkT,IAAMC,EAMbnT,EAAQiT,KAAOQ,EAMZzT,EAAQgT,QAAUU,EAMnB1T,EAAQ8S,OAASa,EAchB3T,EAAQ6S,QAAU,WAC9B,IAAIwD,EAAM/S,IAEV,OAAO,SAAUyH,EAAGuL,EAAQC,EAAQC,EAAOC,EAAIC,GAC7C,IAAIpY,OAAI,EACJ4B,OAAI,EAeR,IAdKoW,IACHA,EAAS,GAGNC,IACHA,EAAS,GAITrW,EADEsW,EACE7L,KAAK2I,IAAIkD,EAAQF,EAASC,EAAQxL,EAAEvM,QAEpCuM,EAAEvM,OAGHF,EAAIiY,EAAQjY,EAAI4B,EAAG5B,GAAKgY,EAC3BD,EAAI,GAAKtL,EAAEzM,GAAG+X,EAAI,GAAKtL,EAAEzM,EAAI,GAC7BmY,EAAGJ,EAAKA,EAAKK,GACb3L,EAAEzM,GAAK+X,EAAI,GAAGtL,EAAEzM,EAAI,GAAK+X,EAAI,GAG/B,OAAOtL,GA1BqB,W","file":"js/app.3ef72ffb.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"about\":\"about\"}[chunkId]||chunkId) + \".\" + {\"about\":\"e2fb35f1\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{attrs:{\"id\":\"nav\"}},[_c('router-link',{attrs:{\"to\":\"/\"}},[_vm._v(\"Home\")]),_vm._v(\" | \"),_c('router-link',{attrs:{\"to\":\"/about\"}},[_vm._v(\"About\")])],1),_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=29eb9886&\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_c('WebGL')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{ref:\"canvas\"})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <canvas ref=\"canvas\"></canvas>\n  </div>\n</template>\n\n<script>\nimport { mat4 } from \"./gl-matrix\";\nvar cubeRotation = 0.0;\n\nfunction initBuffer(gl) {\n  // position\n  const positionBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n  const position = new Float32Array([\n    // Front face\n    -1.0,\n    -1.0,\n    1.0,\n    1.0,\n    -1.0,\n    1.0,\n    1.0,\n    1.0,\n    1.0,\n    -1.0,\n    1.0,\n    1.0,\n    // Back face\n    -1.0,\n    -1.0,\n    -1.0,\n    -1.0,\n    1.0,\n    -1.0,\n    1.0,\n    1.0,\n    -1.0,\n    1.0,\n    -1.0,\n    -1.0,\n    // Top face\n    -1.0,\n    1.0,\n    -1.0,\n    -1.0,\n    1.0,\n    1.0,\n    1.0,\n    1.0,\n    1.0,\n    1.0,\n    1.0,\n    -1.0,\n    // Bottom face\n    -1.0,\n    -1.0,\n    -1.0,\n    1.0,\n    -1.0,\n    -1.0,\n    1.0,\n    -1.0,\n    1.0,\n    -1.0,\n    -1.0,\n    1.0,\n    // Right face\n    1.0,\n    -1.0,\n    -1.0,\n    1.0,\n    1.0,\n    -1.0,\n    1.0,\n    1.0,\n    1.0,\n    1.0,\n    -1.0,\n    1.0,\n    // Left face\n    -1.0,\n    -1.0,\n    -1.0,\n    -1.0,\n    -1.0,\n    1.0,\n    -1.0,\n    1.0,\n    1.0,\n    -1.0,\n    1.0,\n    -1.0\n  ]);\n  gl.bufferData(gl.ARRAY_BUFFER, position, gl.STATIC_DRAW);\n\n  // color\n  const faceColors = [\n    [1.0, 1.0, 1.0, 1.0], // Front face: white\n    [1.0, 0.0, 0.0, 1.0], // Back face: red\n    [0.0, 1.0, 0.0, 1.0], // Top face: green\n    [0.0, 0.0, 1.0, 1.0], // Bottom face: blue\n    [1.0, 1.0, 0.0, 1.0], // Right face: yellow\n    [1.0, 0.0, 1.0, 1.0] // Left face: purple\n  ];\n  var colors = [];\n  for (var j = 0; j < faceColors.length; ++j) {\n    const c = faceColors[j];\n    colors = colors.concat(c, c, c, c);\n  }\n  const colorBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW);\n\n  // index\n  const indexBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n  const indices = new Uint16Array([\n    0,\n    1,\n    2,\n    0,\n    2,\n    3, // front\n    4,\n    5,\n    6,\n    4,\n    6,\n    7, // back\n    8,\n    9,\n    10,\n    8,\n    10,\n    11, // top\n    12,\n    13,\n    14,\n    12,\n    14,\n    15, // bottom\n    16,\n    17,\n    18,\n    16,\n    18,\n    19, // right\n    20,\n    21,\n    22,\n    20,\n    22,\n    23 // left\n  ]);\n  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n\n  return {\n    position: positionBuffer,\n    color: colorBuffer,\n    indices: indexBuffer\n  };\n}\n\nfunction initShader(gl) {\n  // vertex\n  const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n  const vertexShaderCode = `\n      attribute vec4 aVertexPosition;\n      attribute vec4 aVertexColor;\n\n      uniform mat4 uModelViewMatrix;\n      uniform mat4 uProjectionMatrix;\n      varying lowp vec4 vColor;\n\n      void main() { \n        gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n        vColor = aVertexColor;\n      }`;\n  gl.shaderSource(vertexShader, vertexShaderCode);\n  gl.compileShader(vertexShader);\n\n  // fragment\n  const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n  const fragmentShaderCode = `\n        varying lowp vec4 vColor;\n        void main(void) {\n          gl_FragColor = vColor;\n        }`;\n  gl.shaderSource(fragmentShader, fragmentShaderCode);\n  gl.compileShader(fragmentShader);\n\n  const shaderProgram = gl.createProgram();\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n\n  return {\n    program: shaderProgram,\n    attribLocations: {\n      vertexPosition: gl.getAttribLocation(shaderProgram, \"aVertexPosition\"),\n      vertexColor: gl.getAttribLocation(shaderProgram, \"aVertexColor\")\n    },\n    uniformLocations: {\n      projectionMatrix: gl.getUniformLocation(\n        shaderProgram,\n        \"uProjectionMatrix\"\n      ),\n      modelViewMatrix: gl.getUniformLocation(shaderProgram, \"uModelViewMatrix\")\n    }\n  };\n}\nfunction drawScene(gl, programInfo, buffers, deltaTime) {\n  gl.clearColor(0.0, 0.0, 0.0, 1.0); // Clear to black, fully opaque\n  gl.clearDepth(1.0); // Clear everything\n  gl.enable(gl.DEPTH_TEST); // Enable depth testing\n  gl.depthFunc(gl.LEQUAL); // Near things obscure far things\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n  const fieldOfView = (45 * Math.PI) / 180; // in radians\n  const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\n  const zNear = 0.1;\n  const zFar = 100.0;\n  const projectionMatrix = mat4.create();\n  mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\n\n  const modelViewMatrix = mat4.create();\n  mat4.translate(modelViewMatrix, modelViewMatrix, [-0.0, 0.0, -6.0]);\n  mat4.rotate(\n    modelViewMatrix, // destination matrix\n    modelViewMatrix, // matrix to rotate\n    cubeRotation, // amount to rotate in radians\n    [0, 0, 1]\n  ); // axis to rotate around (Z)\n  mat4.rotate(\n    modelViewMatrix, // destination matrix\n    modelViewMatrix, // matrix to rotate\n    cubeRotation * 0.7, // amount to rotate in radians\n    [0, 1, 0]\n  ); // axis to rotate around (X)\n  {\n    const numComponents = 3;\n    const type = gl.FLOAT;\n    const normalize = false;\n    const stride = 0;\n    const offset = 0;\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position);\n    gl.vertexAttribPointer(\n      programInfo.attribLocations.vertexPosition,\n      numComponents,\n      type,\n      normalize,\n      stride,\n      offset\n    );\n    gl.enableVertexAttribArray(programInfo.attribLocations.vertexPosition);\n  }\n  {\n    const numComponents = 4;\n    const type = gl.FLOAT;\n    const normalize = false;\n    const stride = 0;\n    const offset = 0;\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.color);\n    gl.vertexAttribPointer(\n      programInfo.attribLocations.vertexColor,\n      numComponents,\n      type,\n      normalize,\n      stride,\n      offset\n    );\n    gl.enableVertexAttribArray(programInfo.attribLocations.vertexColor);\n  }\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\n  gl.useProgram(programInfo.program);\n\n  gl.uniformMatrix4fv(\n    programInfo.uniformLocations.projectionMatrix,\n    false,\n    projectionMatrix\n  );\n  gl.uniformMatrix4fv(\n    programInfo.uniformLocations.modelViewMatrix,\n    false,\n    modelViewMatrix\n  );\n  {\n    const vertexCount = 36;\n    const type = gl.UNSIGNED_SHORT;\n    const offset = 0;\n    gl.drawElements(gl.TRIANGLES, vertexCount, type, offset);\n  }\n  cubeRotation += deltaTime;\n}\n\nexport default {\n  name: \"WebGL\",\n  mounted() {\n    this.runWebGL();\n  },\n  methods: {\n    runWebGL() {\n      const canvas = this.$refs.canvas;\n      const gl = canvas.getContext(\"webgl\");\n\n      if (!gl) {\n        throw new Error(\"webGL not supported\");\n      }\n      console.log(\"stargting...\");\n\n      const buffers = initBuffer(gl);\n      const programInfo = initShader(gl);\n\n      var then = 0;\n      function render(now) {\n        now *= 0.001; // convert to seconds\n        const deltaTime = now - then;\n        then = now;\n\n        drawScene(gl, programInfo, buffers, deltaTime);\n\n        requestAnimationFrame(render);\n      }\n      requestAnimationFrame(render);\n    }\n  }\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./webgl.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./webgl.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./webgl.vue?vue&type=template&id=6814f6c4&\"\nimport script from \"./webgl.vue?vue&type=script&lang=js&\"\nexport * from \"./webgl.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"home\">\n    <WebGL />\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport WebGL from \"@/components/webgl.vue\";\n\nexport default {\n  name: \"Home\",\n  components: {\n    WebGL\n  }\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=4f143c5c&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from \"vue\";\nimport VueRouter from \"vue-router\";\nimport Home from \"../views/Home.vue\";\n\nVue.use(VueRouter);\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"Home\",\n    component: Home\n  },\n  {\n    path: \"/about\",\n    name: \"About\",\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () =>\n      import(/* webpackChunkName: \"about\" */ \"../views/About.vue\")\n  }\n];\n\nconst router = new VueRouter({\n  mode: \"history\",\n  base: process.env.BASE_URL,\n  routes\n});\n\nexport default router;\n","import Vue from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\n\nVue.config.productionTip = false;\n\nnew Vue({\n  router,\n  render: h => h(App)\n}).$mount(\"#app\");\n","/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.4.0\n */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setMatrixArrayType = setMatrixArrayType;\nexports.toRadian = toRadian;\nexports.equals = equals;\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nvar EPSILON = exports.EPSILON = 0.000001;\nvar ARRAY_TYPE = exports.ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar RANDOM = exports.RANDOM = Math.random;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nfunction setMatrixArrayType(type) {\n  exports.ARRAY_TYPE = ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nfunction toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sub = exports.mul = undefined;\nexports.create = create;\nexports.fromMat4 = fromMat4;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromTranslation = fromTranslation;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromMat2d = fromMat2d;\nexports.fromQuat = fromQuat;\nexports.normalFromMat4 = normalFromMat4;\nexports.projection = projection;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20;\n\n  // Calculate the determinant\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nfunction translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nfunction rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n\n  return out;\n}\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n  return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nfunction str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.length = length;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.hermite = hermite;\nexports.bezier = bezier;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformMat3 = transformMat3;\nexports.transformQuat = transformQuat;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.angle = angle;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nfunction fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nfunction set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nfunction random(out, scale) {\n  scale = scale || 1.0;\n\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nfunction transformQuat(out, a, q) {\n  // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n\n  // calculate quat * vec\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateX(out, a, b, c) {\n  var p = [],\n      r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateY(out, a, b, c) {\n  var p = [],\n      r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateZ(out, a, b, c) {\n  var p = [],\n      r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nfunction angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nfunction str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nvar div = exports.div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nvar dist = exports.dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nvar sqrDist = exports.sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nvar len = exports.len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nvar sqrLen = exports.sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvar forEach = exports.forEach = function () {\n  var vec = create();\n\n  return function (a, stride, offset, count, fn, arg) {\n    var i = void 0,\n        l = void 0;\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformQuat = transformQuat;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nfunction fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nfunction set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to ceil\n * @returns {vec4} out\n */\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to floor\n * @returns {vec4} out\n */\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to round\n * @returns {vec4} out\n */\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nfunction random(out, vectorScale) {\n  vectorScale = vectorScale || 1.0;\n\n  //TODO: This is a pretty awful way of doing this. Find something better.\n  out[0] = glMatrix.RANDOM();\n  out[1] = glMatrix.RANDOM();\n  out[2] = glMatrix.RANDOM();\n  out[3] = glMatrix.RANDOM();\n  normalize(out, out);\n  scale(out, out, vectorScale);\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n\n  // calculate quat * vec\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nfunction str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nvar div = exports.div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nvar dist = exports.dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nvar sqrDist = exports.sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nvar len = exports.len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nvar sqrLen = exports.sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvar forEach = exports.forEach = function () {\n  var vec = create();\n\n  return function (a, stride, offset, count, fn, arg) {\n    var i = void 0,\n        l = void 0;\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.vec4 = exports.vec3 = exports.vec2 = exports.quat = exports.mat4 = exports.mat3 = exports.mat2d = exports.mat2 = exports.glMatrix = undefined;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nvar _mat = __webpack_require__(5);\n\nvar mat2 = _interopRequireWildcard(_mat);\n\nvar _mat2d = __webpack_require__(6);\n\nvar mat2d = _interopRequireWildcard(_mat2d);\n\nvar _mat2 = __webpack_require__(1);\n\nvar mat3 = _interopRequireWildcard(_mat2);\n\nvar _mat3 = __webpack_require__(7);\n\nvar mat4 = _interopRequireWildcard(_mat3);\n\nvar _quat = __webpack_require__(8);\n\nvar quat = _interopRequireWildcard(_quat);\n\nvar _vec = __webpack_require__(9);\n\nvar vec2 = _interopRequireWildcard(_vec);\n\nvar _vec2 = __webpack_require__(2);\n\nvar vec3 = _interopRequireWildcard(_vec2);\n\nvar _vec3 = __webpack_require__(3);\n\nvar vec4 = _interopRequireWildcard(_vec3);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.glMatrix = glMatrix;\nexports.mat2 = mat2;\nexports.mat2d = mat2d;\nexports.mat3 = mat3;\nexports.mat4 = mat4;\nexports.quat = quat;\nexports.vec2 = vec2;\nexports.vec3 = vec3;\nexports.vec4 = vec4; /**\n                      * @fileoverview gl-matrix - High performance matrix and vector operations\n                      * @author Brandon Jones\n                      * @author Colin MacKenzie IV\n                      * @version 2.4.0\n                      */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n// END HEADER\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sub = exports.mul = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.str = str;\nexports.frob = frob;\nexports.LDU = LDU;\nexports.add = add;\nexports.subtract = subtract;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\nfunction fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\nfunction set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n\n  // Calculate the determinant\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nfunction adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2} out\n */\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nfunction str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\n}\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix\n * @param {mat2} D the diagonal matrix\n * @param {mat2} U the upper triangular matrix\n * @param {mat2} a the input matrix to factorize\n */\n\nfunction LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sub = exports.mul = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.invert = invert;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.translate = translate;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromTranslation = fromTranslation;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 2x3 Matrix\n * @module mat2d\n *\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\nfunction fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\nfunction set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nfunction invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n\n  var det = aa * ad - ab * ac;\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nfunction translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2d} out\n */\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat2d} out\n */\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nfunction str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\n}\n\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sub = exports.mul = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.fromTranslation = fromTranslation;\nexports.fromScaling = fromScaling;\nexports.fromRotation = fromRotation;\nexports.fromXRotation = fromXRotation;\nexports.fromYRotation = fromYRotation;\nexports.fromZRotation = fromZRotation;\nexports.fromRotationTranslation = fromRotationTranslation;\nexports.getTranslation = getTranslation;\nexports.getScaling = getScaling;\nexports.getRotation = getRotation;\nexports.fromRotationTranslationScale = fromRotationTranslationScale;\nexports.fromRotationTranslationScaleOrigin = fromRotationTranslationScaleOrigin;\nexports.fromQuat = fromQuat;\nexports.frustum = frustum;\nexports.perspective = perspective;\nexports.perspectiveFromFieldOfView = perspectiveFromFieldOfView;\nexports.ortho = ortho;\nexports.lookAt = lookAt;\nexports.targetTo = targetTo;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 4x4 Matrix\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nfunction translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00 = void 0,\n      a01 = void 0,\n      a02 = void 0,\n      a03 = void 0;\n  var a10 = void 0,\n      a11 = void 0,\n      a12 = void 0,\n      a13 = void 0;\n  var a20 = void 0,\n      a21 = void 0,\n      a22 = void 0,\n      a23 = void 0;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\n    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\n    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\n\n    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\n    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\n    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nfunction rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s = void 0,\n      c = void 0,\n      t = void 0;\n  var a00 = void 0,\n      a01 = void 0,\n      a02 = void 0,\n      a03 = void 0;\n  var a10 = void 0,\n      a11 = void 0,\n      a12 = void 0,\n      a13 = void 0;\n  var a20 = void 0,\n      a21 = void 0,\n      a22 = void 0,\n      a23 = void 0;\n  var b00 = void 0,\n      b01 = void 0,\n      b02 = void 0;\n  var b10 = void 0,\n      b11 = void 0,\n      b12 = void 0;\n  var b20 = void 0,\n      b21 = void 0,\n      b22 = void 0;\n\n  if (Math.abs(len) < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\n  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\n  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nfunction fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s = void 0,\n      c = void 0,\n      t = void 0;\n\n  if (Math.abs(len) < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nfunction fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nfunction getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n\n  return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\n  return out;\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nfunction getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  var trace = mat[0] + mat[5] + mat[10];\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if (mat[0] > mat[5] & mat[0] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2);\n  var nf = 1 / (near - far);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 2 * far * near * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nfunction lookAt(out, eye, center, up) {\n  var x0 = void 0,\n      x1 = void 0,\n      x2 = void 0,\n      y0 = void 0,\n      y1 = void 0,\n      y2 = void 0,\n      z0 = void 0,\n      z1 = void 0,\n      z2 = void 0,\n      len = void 0;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return mat4.identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nfunction str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setAxes = exports.sqlerp = exports.rotationTo = exports.equals = exports.exactEquals = exports.normalize = exports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.lerp = exports.dot = exports.scale = exports.mul = exports.add = exports.set = exports.copy = exports.fromValues = exports.clone = undefined;\nexports.create = create;\nexports.identity = identity;\nexports.setAxisAngle = setAxisAngle;\nexports.getAxisAngle = getAxisAngle;\nexports.multiply = multiply;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.calculateW = calculateW;\nexports.slerp = slerp;\nexports.invert = invert;\nexports.conjugate = conjugate;\nexports.fromMat3 = fromMat3;\nexports.fromEuler = fromEuler;\nexports.str = str;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nvar _mat = __webpack_require__(1);\n\nvar mat3 = _interopRequireWildcard(_mat);\n\nvar _vec = __webpack_require__(2);\n\nvar vec3 = _interopRequireWildcard(_vec);\n\nvar _vec2 = __webpack_require__(3);\n\nvar vec4 = _interopRequireWildcard(_vec2);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {quat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n  if (s != 0.0) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n  return rad;\n}\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nfunction multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nfunction rotateX(out, a, rad) {\n  rad *= 0.5;\n\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nfunction rotateY(out, a, rad) {\n  rad *= 0.5;\n\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nfunction rotateZ(out, a, rad) {\n  rad *= 0.5;\n\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n\n  var omega = void 0,\n      cosom = void 0,\n      sinom = void 0,\n      scale0 = void 0,\n      scale1 = void 0;\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\n  // adjust signs (if necessary)\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  }\n  // calculate coefficients\n  if (1.0 - cosom > 0.000001) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n\n  return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0;\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot = void 0;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n\n  return out;\n}\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nfunction str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nvar clone = exports.clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nvar fromValues = exports.fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nvar copy = exports.copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nvar set = exports.set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nvar add = exports.add = vec4.add;\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nvar scale = exports.scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nvar dot = exports.dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nvar lerp = exports.lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nvar length = exports.length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nvar len = exports.len = length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nvar squaredLength = exports.squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nvar sqrLen = exports.sqrLen = squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nvar normalize = exports.normalize = vec4.normalize;\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat} a The first quaternion.\n * @param {quat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvar exactEquals = exports.exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {quat} a The first vector.\n * @param {quat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvar equals = exports.equals = vec4.equals;\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nvar rotationTo = exports.rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount\n * @returns {quat} out\n */\nvar sqlerp = exports.sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n\n    return out;\n  };\n}();\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nvar setAxes = exports.setAxes = function () {\n  var matr = mat3.create();\n\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n\n    return normalize(out, fromMat3(out, matr));\n  };\n}();\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forEach = exports.sqrLen = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = exports.len = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat2 = transformMat2;\nexports.transformMat2d = transformMat2d;\nexports.transformMat3 = transformMat3;\nexports.transformMat4 = transformMat4;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = 0;\n  out[1] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nfunction fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n};\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n};\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n};\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n};\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n};\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n};\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n};\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n};\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.sqrt(x * x + y * y);\n};\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n};\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.sqrt(x * x + y * y);\n};\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n};\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n};\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n};\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n  }\n  return out;\n};\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n};\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n};\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nfunction str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nvar len = exports.len = length;\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nvar div = exports.div = divide;\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nvar dist = exports.dist = distance;\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nvar sqrDist = exports.sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nvar sqrLen = exports.sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvar forEach = exports.forEach = function () {\n  var vec = create();\n\n  return function (a, stride, offset, count, fn, arg) {\n    var i = void 0,\n        l = void 0;\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\n/***/ })\n/******/ ]);\n});"],"sourceRoot":""}